{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\ClassStats.vue?vue&type=style&index=0&id=ab757fe4&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\ClassStats.vue","mtime":1741774780761},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741355860000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY2xhc3Mtc3RhdHMgew0KICBwYWRkaW5nOiAyMHB4Ow0KfQ0KDQouZmlsdGVyLXNlY3Rpb24gew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOw0KICBwYWRkaW5nOiAyMHB4Ow0KICBib3JkZXItcmFkaXVzOiA0cHg7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi5zdGF0cy1jYXJkcyB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoNCi5jYXJkLWNvbnRlbnQgew0KICBmb250LXNpemU6IDI0cHg7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIGNvbG9yOiAjNDA5RUZGOw0KfQ0KDQouY2hhcnRzLXNlY3Rpb24gew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQouY2hhcnQtY29udGFpbmVyIHsNCiAgcGFkZGluZzogMTBweDsNCn0NCg0KLnRhYmxlLWNhcmQgew0KICBtYXJnaW4tdG9wOiAyMHB4Ow0KfQ0KDQoucGFnaW5hdGlvbi1jb250YWluZXIgew0KICBtYXJnaW4tdG9wOiAyMHB4Ow0KICB0ZXh0LWFsaWduOiByaWdodDsNCn0NCg=="},{"version":3,"sources":["ClassStats.vue"],"names":[],"mappings":";AA8WA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ClassStats.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\r\n  <div class=\"class-stats\">\r\n    <!-- 筛选区域 -->\r\n    <div class=\"filter-section\">\r\n      <el-form :inline=\"true\" :model=\"queryParams\" ref=\"queryForm\">\r\n        <el-form-item label=\"测试项目\">\r\n          <el-select v-model=\"queryParams.sportsItemId\" placeholder=\"选择测试项目\" clearable>\r\n            <el-option\r\n              v-for=\"item in sportsItems\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级\">\r\n          <el-select v-model=\"queryParams.className\" placeholder=\"选择班级\" clearable>\r\n            <el-option\r\n              v-for=\"item in classList\"\r\n              :key=\"item\"\r\n              :label=\"item\"\r\n              :value=\"item\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n          <el-button @click=\"resetQuery\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 统计卡片 -->\r\n    <el-row :gutter=\"20\" class=\"stats-cards\">\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\">\r\n            <span>平均分</span>\r\n          </div>\r\n          <div class=\"card-content\">\r\n            {{ stats.averageScore || '0.00' }}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\">\r\n            <span>优秀率</span>\r\n          </div>\r\n          <div class=\"card-content\">\r\n            {{ stats.excellentRate || '0.00' }}%\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\">\r\n            <span>合格率</span>\r\n          </div>\r\n          <div class=\"card-content\">\r\n            {{ stats.passRate || '0.00' }}%\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"6\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\">\r\n            <span>参测人数</span>\r\n          </div>\r\n          <div class=\"card-content\">\r\n            {{ stats.totalStudents || '0' }}\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 图表展示 -->\r\n    <el-row :gutter=\"20\" class=\"charts-section\">\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\">\r\n            <span>成绩分布</span>\r\n          </div>\r\n          <div class=\"chart-container\">\r\n            <div ref=\"scoreDistChart\" style=\"height: 300px\"></div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n      <el-col :span=\"12\">\r\n        <el-card shadow=\"hover\">\r\n          <div slot=\"header\">\r\n            <span>班级对比</span>\r\n          </div>\r\n          <div class=\"chart-container\">\r\n            <div ref=\"classCompareChart\" style=\"height: 300px\"></div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n\r\n    <!-- 详细数据表格 -->\r\n    <el-card class=\"table-card\">\r\n      <div slot=\"header\">\r\n        <span>详细数据</span>\r\n        <el-button\r\n          style=\"float: right; padding: 3px 0\"\r\n          type=\"text\"\r\n          @click=\"handleExport\"\r\n        >导出Excel</el-button>\r\n      </div>\r\n      <el-table\r\n        v-loading=\"loading\"\r\n        :data=\"tableData\"\r\n        border\r\n        stripe\r\n        style=\"width: 100%\"\r\n      >\r\n        <el-table-column label=\"班级\" prop=\"className\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"学号\" prop=\"studentNumber\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"姓名\" prop=\"studentName\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"成绩\" prop=\"score\" align=\"center\"></el-table-column>\r\n        <el-table-column label=\"等级\" prop=\"grade\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getGradeType(scope.row.grade)\">{{ scope.row.grade }}</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"测试时间\" prop=\"testTime\" align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            {{ formatDateTime(scope.row.testTime) }}\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"queryParams.pageNum\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :page-size=\"queryParams.pageSize\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from 'echarts'\r\nimport { getClassStats, getTestRecords } from '@/api/teacher'\r\n\r\nexport default {\r\n  name: 'ClassStats',\r\n  data() {\r\n    return {\r\n      // 查询参数\r\n      queryParams: {\r\n        sportsItemId: '',\r\n        className: '',\r\n        pageNum: 1,\r\n        pageSize: 10\r\n      },\r\n      // 统计数据\r\n      stats: {\r\n        averageScore: 0,\r\n        excellentRate: 0,\r\n        passRate: 0,\r\n        totalStudents: 0\r\n      },\r\n      // 表格数据\r\n      tableData: [],\r\n      total: 0,\r\n      loading: false,\r\n      // 下拉选项\r\n      sportsItems: [],\r\n      classList: [],\r\n      // 图表实例\r\n      scoreDistChart: null,\r\n      classCompareChart: null\r\n    }\r\n  },\r\n  created() {\r\n    this.getList()\r\n    this.getSportsItems()\r\n    this.getClassList()\r\n  },\r\n  mounted() {\r\n    this.initCharts()\r\n    // 监听窗口大小变化，重绘图表\r\n    window.addEventListener('resize', this.resizeCharts)\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.resizeCharts)\r\n  },\r\n  methods: {\r\n    // 获取数据列表\r\n    async getList() {\r\n      this.loading = true\r\n      try {\r\n        const res = await getClassStats(this.queryParams)\r\n        if (res.data.code === 200) {\r\n          const data = res.data.data\r\n          this.stats = data.stats\r\n          this.tableData = data.records\r\n          this.total = data.total\r\n          this.updateCharts(data)\r\n        }\r\n      } catch (error) {\r\n        console.error('获取数据失败:', error)\r\n        this.$message.error('获取数据失败')\r\n      }\r\n      this.loading = false\r\n    },\r\n\r\n    // 初始化图表\r\n    initCharts() {\r\n      this.scoreDistChart = echarts.init(this.$refs.scoreDistChart)\r\n      this.classCompareChart = echarts.init(this.$refs.classCompareChart)\r\n      \r\n      // 设置初始配置\r\n      this.updateCharts({\r\n        scoreDist: [],\r\n        classCompare: []\r\n      })\r\n    },\r\n\r\n    // 更新图表数据\r\n    updateCharts(data) {\r\n      // 成绩分布图配置\r\n      const scoreDistOption = {\r\n        title: {\r\n          text: '成绩分布'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: ['不及格', '及格', '良好', '优秀']\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: data.scoreDist || [0, 0, 0, 0],\r\n          type: 'bar'\r\n        }]\r\n      }\r\n      \r\n      // 班级对比图配置\r\n      const classCompareOption = {\r\n        title: {\r\n          text: '班级平均分对比'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          data: data.classCompare?.map(item => item.className) || []\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [{\r\n          data: data.classCompare?.map(item => item.averageScore) || [],\r\n          type: 'bar'\r\n        }]\r\n      }\r\n      \r\n      this.scoreDistChart.setOption(scoreDistOption)\r\n      this.classCompareChart.setOption(classCompareOption)\r\n    },\r\n\r\n    // 重绘图表\r\n    resizeCharts() {\r\n      this.scoreDistChart?.resize()\r\n      this.classCompareChart?.resize()\r\n    },\r\n\r\n    // 获取体育项目列表\r\n    async getSportsItems() {\r\n      try {\r\n        // TODO: 调用获取体育项目列表的API\r\n        this.sportsItems = []\r\n      } catch (error) {\r\n        console.error('获取体育项目列表失败:', error)\r\n      }\r\n    },\r\n\r\n    // 获取班级列表\r\n    async getClassList() {\r\n      try {\r\n        // TODO: 调用获取班级列表的API\r\n        this.classList = []\r\n      } catch (error) {\r\n        console.error('获取班级列表失败:', error)\r\n      }\r\n    },\r\n\r\n    // 查询按钮点击\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1\r\n      this.getList()\r\n    },\r\n\r\n    // 重置按钮点击\r\n    resetQuery() {\r\n      this.queryParams = {\r\n        sportsItemId: '',\r\n        className: '',\r\n        pageNum: 1,\r\n        pageSize: 10\r\n      }\r\n      this.getList()\r\n    },\r\n\r\n    // 导出数据\r\n    handleExport() {\r\n      // TODO: 实现导出功能\r\n    },\r\n\r\n    // 分页大小改变\r\n    handleSizeChange(val) {\r\n      this.queryParams.pageSize = val\r\n      this.getList()\r\n    },\r\n\r\n    // 页码改变\r\n    handleCurrentChange(val) {\r\n      this.queryParams.pageNum = val\r\n      this.getList()\r\n    },\r\n\r\n    // 获取成绩等级样式\r\n    getGradeType(grade) {\r\n      const gradeMap = {\r\n        '优秀': 'success',\r\n        '良好': '',\r\n        '及格': 'warning',\r\n        '不及格': 'danger'\r\n      }\r\n      return gradeMap[grade] || ''\r\n    },\r\n\r\n    // 格式化日期时间\r\n    formatDateTime(datetime) {\r\n      if (!datetime) return '-'\r\n      const date = new Date(datetime)\r\n      return date.toLocaleString('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.class-stats {\r\n  padding: 20px;\r\n}\r\n\r\n.filter-section {\r\n  background-color: #f5f7fa;\r\n  padding: 20px;\r\n  border-radius: 4px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.stats-cards {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-content {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #409EFF;\r\n}\r\n\r\n.charts-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.chart-container {\r\n  padding: 10px;\r\n}\r\n\r\n.table-card {\r\n  margin-top: 20px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n</style> "]}]}