{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\TeacherManagement.vue?vue&type=style&index=0&id=730fd73b&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\TeacherManagement.vue","mtime":1742719169728},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50ZWFjaGVyLW1hbmFnZW1lbnQgewogIHBhZGRpbmc6IDIwcHg7Cn0KLmZpbHRlci1zZWN0aW9uIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Ci5iYXRjaC1pbXBvcnQgewogIG1hcmdpbi10b3A6IDIwcHg7Cn0KLmltcG9ydC1yZXN1bHQgewogIG1hcmdpbi10b3A6IDIwcHg7CiAgcGFkZGluZzogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOwogIGJvcmRlci1yYWRpdXM6IDRweDsKfQouZWwtdXBsb2FkX190aXAgewogIGxpbmUtaGVpZ2h0OiAxLjU7Cn0K"},{"version":3,"sources":["TeacherManagement.vue"],"names":[],"mappings":";AA2PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TeacherManagement.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"teacher-management\">\n    <div class=\"filter-section\">\n      <el-form :inline=\"true\" :model=\"filterForm\">\n        <el-form-item>\n          <el-input\n            v-model=\"filterForm.keyword\"\n            placeholder=\"搜索姓名\"\n            clearable\n            @clear=\"handleSearch\">\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\n          <el-button type=\"success\" @click=\"handleAdd\">添加教师</el-button>\n          \n        </el-form-item>\n      </el-form>\n    </div>\n\n    <el-table :data=\"teachers\" border v-loading=\"loading\">\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\n      <el-table-column prop=\"realName\" label=\"姓名\"></el-table-column>\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n      <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\n      <el-table-column label=\"操作\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-pagination\n      @current-change=\"handlePageChange\"\n      :current-page.sync=\"currentPage\"\n      :page-size=\"pageSize\"\n      layout=\"total, prev, pager, next\"\n      :total=\"total\">\n    </el-pagination>\n\n    <!-- 添加/编辑对话框 -->\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\">\n      <user-form\n        ref=\"userForm\"\n        :user-type=\"'TEACHER'\"\n        @saved=\"handleSaved\">\n      </user-form>\n    </el-dialog>\n\n    <!-- Excel导入部分 -->\n    <el-dialog title=\"导入教师\" :visible.sync=\"importDialogVisible\" width=\"500px\">\n      <el-upload\n        class=\"upload-demo\"\n        drag\n        action=\"/api/admin/users/teacher/import\"\n        :headers=\"headers\"\n        :on-success=\"handleUploadSuccess\"\n        :on-error=\"handleUploadError\"\n        :before-upload=\"beforeUpload\"\n        :limit=\"1\"\n        accept=\".xlsx\">\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n        <div class=\"el-upload__tip\" slot=\"tip\">\n          <p>只能上传xlsx文件，且文件大小不超过10MB</p>\n          <p>请按模板格式填写数据，<a href=\"javascript:;\" @click=\"downloadTemplate\">下载模板</a></p>\n        </div>\n      </el-upload>\n      <div class=\"import-result\" v-if=\"importResult.total\">\n        <p>导入结果：</p>\n        <p>总数：{{ importResult.total }}</p>\n        <p>成功：{{ importResult.success }}</p>\n        <p>失败：{{ importResult.failed }}</p>\n        <div v-if=\"importResult.errors.length\">\n          <p>错误信息：</p>\n          <ul>\n            <li v-for=\"(error, index) in importResult.errors\" :key=\"index\">{{ error }}</li>\n          </ul>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 批量导入入口 -->\n    <div class=\"batch-import\">\n      <el-button type=\"primary\" @click=\"importDialogVisible = true\">\n        <i class=\"el-icon-upload2\"></i> 批量导入\n      </el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport UserForm from './UserForm.vue'\n\nexport default {\n  name: 'TeacherManagement',\n  components: {\n    UserForm\n  },\n  data() {\n    return {\n      teachers: [],\n      loading: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      filterForm: {\n        keyword: ''\n      },\n      dialogVisible: false,\n      importDialogVisible: false,\n      dialogTitle: '添加教师',\n      currentUser: null,\n      headers: {\n        'X-Token': localStorage.getItem('token')\n      },\n      importResult: {\n        total: 0,\n        success: 0,\n        failed: 0,\n        errors: []\n      }\n    }\n  },\n  methods: {\n    async fetchTeachers() {\n      try {\n        this.loading = true\n        const response = await this.$axios.get('/api/users/teachers', {\n          params: {\n            pageNum: this.currentPage,\n            pageSize: this.pageSize,\n            keyword: this.filterForm.keyword\n          }\n        })\n        if (response.data.code === 200) {\n          this.teachers = response.data.data.content\n          this.total = response.data.data.totalElements\n        } else {\n          this.$message.error(response.data.msg || '获取教师列表失败')\n        }\n      } catch (error) {\n        this.$message.error(error.response?.data?.msg || error.message || '获取教师列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    handleSearch() {\n      this.currentPage = 1\n      this.fetchTeachers()\n    },\n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchTeachers()\n    },\n    handleAdd() {\n      this.dialogTitle = '添加教师'\n      this.currentUser = null\n      this.dialogVisible = true\n    },\n    handleEdit(row) {\n      this.dialogTitle = '编辑教师'\n      this.currentUser = row\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs.userForm.setFormData(row)\n      })\n    },\n    async handleDelete(row) {\n      try {\n        await this.$confirm('确认删除该教师?', '提示', {\n          type: 'warning'\n        })\n        const response = await this.$axios.delete(`/api/users/${row.id}`)\n        if (response.data.code === 200) {\n          this.$message.success('删除成功')\n          this.fetchTeachers()\n        } else {\n          this.$message.error(response.data.msg || '删除失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败：' + error.message)\n        }\n      }\n    },\n    handleSaved() {\n      this.dialogVisible = false\n      this.fetchTeachers()\n    },\n    beforeUpload(file) {\n      const isExcel = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      const isLt10M = file.size / 1024 / 1024 < 10\n\n      if (!isExcel) {\n        this.$message.error('只能上传 xlsx 格式的文件!')\n        return false\n      }\n      if (!isLt10M) {\n        this.$message.error('文件大小不能超过 10MB!')\n        return false\n      }\n      return true\n    },\n    handleUploadSuccess(response) {\n      if (response.code === 200) {\n        this.importResult = {\n          total: response.data.length,\n          success: response.data.length,\n          failed: 0,\n          errors: []\n        }\n        this.$message.success('导入成功')\n        this.fetchTeachers()\n      } else {\n        this.importResult = {\n          total: 0,\n          success: 0,\n          failed: 1,\n          errors: [response.message]\n        }\n        this.$message.error(response.message)\n      }\n    },\n    handleUploadError(err) {\n      this.importResult = {\n        total: 0,\n        success: 0,\n        failed: 1,\n        errors: [err.message || '导入失败']\n      }\n      this.$message.error('导入失败')\n    },\n    downloadTemplate() {\n      // 创建一个链接来下载模板\n      const link = document.createElement('a')\n      link.href = '/templates/teacher_import_template.xlsx' // 这个路径需要后端提供\n      link.download = '教师导入模板.xlsx'\n      document.body.appendChild(link)\n      link.click()\n      document.body.removeChild(link)\n    }\n  },\n  created() {\n    this.fetchTeachers()\n  }\n}\n</script>\n\n<style scoped>\n.teacher-management {\n  padding: 20px;\n}\n.filter-section {\n  margin-bottom: 20px;\n}\n.batch-import {\n  margin-top: 20px;\n}\n.import-result {\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #f5f7fa;\n  border-radius: 4px;\n}\n.el-upload__tip {\n  line-height: 1.5;\n}\n</style> "]}]}