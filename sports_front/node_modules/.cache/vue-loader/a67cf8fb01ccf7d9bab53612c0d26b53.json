{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\Notices.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\Notices.vue","mtime":1742397987232},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\babel-loader\\lib\\index.js","mtime":1741946991478},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBmb3JtYXREYXRlIH0gZnJvbSAnQC91dGlscy9kYXRlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdTdHVkZW50Tm90aWNlcycsDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIG5vdGljZXM6IFtdLA0KICAgICAgbG9hZGluZzogZmFsc2UsDQogICAgICB0b3RhbDogMCwNCiAgICAgIHF1ZXJ5OiB7DQogICAgICAgIHBhZ2U6IDEsDQogICAgICAgIHNpemU6IDEwDQogICAgICB9LA0KICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsDQogICAgICBjdXJyZW50Tm90aWNlOiB7fQ0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmZldGNoTm90aWNlcygpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBmZXRjaE5vdGljZXMoKSB7DQogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlDQogICAgICB0cnkgew0KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCcvYXBpL25vdGljZXMnLCB7DQogICAgICAgICAgcGFyYW1zOiB7DQogICAgICAgICAgICBwYWdlOiB0aGlzLnF1ZXJ5LnBhZ2UgLSAxLA0KICAgICAgICAgICAgc2l6ZTogdGhpcy5xdWVyeS5zaXplDQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09PSAyMDApIHsNCiAgICAgICAgICB0aGlzLm5vdGljZXMgPSByZXNwb25zZS5kYXRhLmRhdGEuY29udGVudA0KICAgICAgICAgIHRoaXMudG90YWwgPSByZXNwb25zZS5kYXRhLmRhdGEudG90YWxFbGVtZW50cw0KICAgICAgICB9DQogICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICBjb25zb2xlLmVycm9yKCfojrflj5bpgJrnn6XliJfooajlpLHotKU6JywgZXJyb3IpDQogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+iOt+WPlumAmuefpeWIl+ihqOWksei0pScpDQogICAgICB9IGZpbmFsbHkgew0KICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZQ0KICAgICAgfQ0KICAgIH0sDQogICAgdmlld05vdGljZShub3RpY2UpIHsNCiAgICAgIHRoaXMuY3VycmVudE5vdGljZSA9IG5vdGljZQ0KICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQ0KICAgIH0sDQogICAgaGFuZGxlU2l6ZUNoYW5nZSh2YWwpIHsNCiAgICAgIHRoaXMucXVlcnkuc2l6ZSA9IHZhbA0KICAgICAgdGhpcy5mZXRjaE5vdGljZXMoKQ0KICAgIH0sDQogICAgaGFuZGxlQ3VycmVudENoYW5nZSh2YWwpIHsNCiAgICAgIHRoaXMucXVlcnkucGFnZSA9IHZhbA0KICAgICAgdGhpcy5mZXRjaE5vdGljZXMoKQ0KICAgIH0sDQogICAgZm9ybWF0RGF0ZSwNCiAgICBnZXROb3RpY2VUeXBlVGFnKHR5cGUpIHsNCiAgICAgIGNvbnN0IHR5cGVzID0gew0KICAgICAgICBURVNUX1NDSEVEVUxFOiAncHJpbWFyeScsDQogICAgICAgIFNDT1JFX1JFTEVBU0U6ICdzdWNjZXNzJywNCiAgICAgICAgU1lTVEVNX01BSU5URU5BTkNFOiAnd2FybmluZycsDQogICAgICAgIE9USEVSOiAnaW5mbycNCiAgICAgIH0NCiAgICAgIHJldHVybiB0eXBlc1t0eXBlXSB8fCAnaW5mbycNCiAgICB9LA0KICAgIGdldE5vdGljZVR5cGVUZXh0KHR5cGUpIHsNCiAgICAgIGNvbnN0IHRleHRzID0gew0KICAgICAgICBURVNUX1NDSEVEVUxFOiAn5L2T5rWL5a6J5o6SJywNCiAgICAgICAgU0NPUkVfUkVMRUFTRTogJ+aIkOe7qeWFrOW4gycsDQogICAgICAgIFNZU1RFTV9NQUlOVEVOQU5DRTogJ+ezu+e7n+e7tOaKpCcsDQogICAgICAgIE9USEVSOiAn5YW25LuWJw0KICAgICAgfQ0KICAgICAgcmV0dXJuIHRleHRzW3R5cGVdIHx8ICflhbbku5YnDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["Notices.vue"],"names":[],"mappings":";AA0DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Notices.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\r\n  <div class=\"notices\">\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>通知公告</span>\r\n      </div>\r\n\r\n      <el-table :data=\"notices\" style=\"width: 100%\" v-loading=\"loading\">\r\n        <el-table-column prop=\"title\" label=\"标题\" show-overflow-tooltip />\r\n        <el-table-column prop=\"type\" label=\"类型\">\r\n          <template slot-scope=\"scope\">\r\n            <el-tag :type=\"getNoticeTypeTag(scope.row.type)\">\r\n              {{ getNoticeTypeText(scope.row.type) }}\r\n            </el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"createTime\" label=\"发布时间\">\r\n          <template slot-scope=\"scope\">\r\n            {{ formatDate(scope.row.createTime) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"100\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\" @click=\"viewNotice(scope.row)\">\r\n              查看\r\n            </el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination-container\">\r\n        <el-pagination\r\n          background\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :current-page=\"query.page\"\r\n          :page-sizes=\"[10, 20, 50]\"\r\n          :page-size=\"query.size\"\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :total=\"total\"\r\n        />\r\n      </div>\r\n    </el-card>\r\n\r\n    <!-- 通知详情对话框 -->\r\n    <el-dialog :title=\"currentNotice.title\" :visible.sync=\"dialogVisible\" width=\"600px\">\r\n      <div class=\"notice-info\">\r\n        <p class=\"notice-meta\">\r\n          <span>类型：{{ getNoticeTypeText(currentNotice.type) }}</span>\r\n          <span>发布时间：{{ formatDate(currentNotice.createTime) }}</span>\r\n        </p>\r\n        <div class=\"notice-content\" v-html=\"currentNotice.content\"></div>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { formatDate } from '@/utils/date'\r\n\r\nexport default {\r\n  name: 'StudentNotices',\r\n  data() {\r\n    return {\r\n      notices: [],\r\n      loading: false,\r\n      total: 0,\r\n      query: {\r\n        page: 1,\r\n        size: 10\r\n      },\r\n      dialogVisible: false,\r\n      currentNotice: {}\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchNotices()\r\n  },\r\n  methods: {\r\n    async fetchNotices() {\r\n      this.loading = true\r\n      try {\r\n        const response = await this.$http.get('/api/notices', {\r\n          params: {\r\n            page: this.query.page - 1,\r\n            size: this.query.size\r\n          }\r\n        })\r\n        if (response.data.code === 200) {\r\n          this.notices = response.data.data.content\r\n          this.total = response.data.data.totalElements\r\n        }\r\n      } catch (error) {\r\n        console.error('获取通知列表失败:', error)\r\n        this.$message.error('获取通知列表失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    viewNotice(notice) {\r\n      this.currentNotice = notice\r\n      this.dialogVisible = true\r\n    },\r\n    handleSizeChange(val) {\r\n      this.query.size = val\r\n      this.fetchNotices()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.query.page = val\r\n      this.fetchNotices()\r\n    },\r\n    formatDate,\r\n    getNoticeTypeTag(type) {\r\n      const types = {\r\n        TEST_SCHEDULE: 'primary',\r\n        SCORE_RELEASE: 'success',\r\n        SYSTEM_MAINTENANCE: 'warning',\r\n        OTHER: 'info'\r\n      }\r\n      return types[type] || 'info'\r\n    },\r\n    getNoticeTypeText(type) {\r\n      const texts = {\r\n        TEST_SCHEDULE: '体测安排',\r\n        SCORE_RELEASE: '成绩公布',\r\n        SYSTEM_MAINTENANCE: '系统维护',\r\n        OTHER: '其他'\r\n      }\r\n      return texts[type] || '其他'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.notices {\r\n  padding: 20px;\r\n}\r\n\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n\r\n.notice-info {\r\n  padding: 0 20px;\r\n}\r\n\r\n.notice-meta {\r\n  color: #909399;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.notice-meta span {\r\n  margin-right: 20px;\r\n}\r\n\r\n.notice-content {\r\n  line-height: 1.6;\r\n}\r\n</style> "]}]}