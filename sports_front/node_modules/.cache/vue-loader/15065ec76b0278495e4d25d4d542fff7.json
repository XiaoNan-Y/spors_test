{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\UserList.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\UserList.vue","mtime":1741700320330},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\babel-loader\\lib\\index.js","mtime":1741946991478},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHVzZXJzOiBbXSwNCiAgICAgIHVzZXJUeXBlOiAnJywgLy8gJ1NUVURFTlQnIG9yICdURUFDSEVSJw0KICAgICAgY3VycmVudFBhZ2U6IDEsDQogICAgICBwYWdlU2l6ZTogMTAsDQogICAgICB0b3RhbDogMA0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGFzeW5jIGZldGNoVXNlcnMoKSB7DQogICAgICB0cnkgew0KICAgICAgICBjb25zdCBlbmRwb2ludCA9IHRoaXMudXNlclR5cGUgPT09ICdTVFVERU5UJyA/ICcvc3R1ZGVudHMnIDogJy90ZWFjaGVycyc7DQogICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kYXhpb3MuZ2V0KGAvYXBpL2FkbWluL3VzZXJzJHtlbmRwb2ludH1gLCB7DQogICAgICAgICAgcGFyYW1zOiB7DQogICAgICAgICAgICBwYWdlTnVtOiB0aGlzLmN1cnJlbnRQYWdlLA0KICAgICAgICAgICAgcGFnZVNpemU6IHRoaXMucGFnZVNpemUNCiAgICAgICAgICB9DQogICAgICAgIH0pOw0KICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09PSAyMDApIHsNCiAgICAgICAgICB0aGlzLnVzZXJzID0gcmVzcG9uc2UuZGF0YS5kYXRhLmNvbnRlbnQ7DQogICAgICAgICAgdGhpcy50b3RhbCA9IHJlc3BvbnNlLmRhdGEuZGF0YS50b3RhbEVsZW1lbnRzOw0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcG9uc2UuZGF0YS5tc2cgfHwgJ+iOt+WPlueUqOaIt+WIl+ihqOWksei0pScpOw0KICAgICAgICB9DQogICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfojrflj5bnlKjmiLfliJfooajlpLHotKXvvJonICsgZXJyb3IubWVzc2FnZSk7DQogICAgICB9DQogICAgfSwNCiAgICBoYW5kbGVQYWdlQ2hhbmdlKHBhZ2UpIHsNCiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSBwYWdlOw0KICAgICAgdGhpcy5mZXRjaFVzZXJzKCk7DQogICAgfSwNCiAgICBoYW5kbGVFZGl0KHJvdykgew0KICAgICAgdGhpcy4kZW1pdCgnZWRpdCcsIHJvdyk7DQogICAgfSwNCiAgICBoYW5kbGVEZWxldGUocm93KSB7DQogICAgICB0aGlzLiRjb25maXJtKCfnoa7orqTliKDpmaTor6XnlKjmiLc/JywgJ+aPkOekuicsIHsNCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLA0KICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywNCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnDQogICAgICB9KS50aGVuKGFzeW5jICgpID0+IHsNCiAgICAgICAgdHJ5IHsNCiAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGF4aW9zLmRlbGV0ZShgL2FwaS9hZG1pbi91c2Vycy8ke3Jvdy5pZH1gKTsNCiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09PSAyMDApIHsNCiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk5oiQ5YqfJyk7DQogICAgICAgICAgICB0aGlzLmZldGNoVXNlcnMoKTsNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwb25zZS5kYXRhLm1zZyB8fCAn5Yig6Zmk5aSx6LSlJyk7DQogICAgICAgICAgfQ0KICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WIoOmZpOWksei0pe+8micgKyBlcnJvci5tZXNzYWdlKTsNCiAgICAgICAgfQ0KICAgICAgfSkuY2F0Y2goKCkgPT4ge30pOw0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmZldGNoVXNlcnMoKTsNCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICB1c2VyVHlwZTogew0KICAgICAgaGFuZGxlcihuZXdWYWwpIHsNCiAgICAgICAgaWYgKG5ld1ZhbCkgew0KICAgICAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxOw0KICAgICAgICAgIHRoaXMuZmV0Y2hVc2VycygpOw0KICAgICAgICB9DQogICAgICB9LA0KICAgICAgaW1tZWRpYXRlOiB0cnVlDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["UserList.vue"],"names":[],"mappings":";AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UserList.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n  <div>\r\n    <el-table :data=\"users\" border>\r\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\r\n      <el-table-column prop=\"realName\" label=\"姓名\"></el-table-column>\r\n      <el-table-column prop=\"studentNumber\" label=\"学号\" v-if=\"userType === 'STUDENT'\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n      <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-pagination\r\n      @current-change=\"handlePageChange\"\r\n      :current-page.sync=\"currentPage\"\r\n      :page-size=\"pageSize\"\r\n      layout=\"total, prev, pager, next\"\r\n      :total=\"total\">\r\n    </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      users: [],\r\n      userType: '', // 'STUDENT' or 'TEACHER'\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      total: 0\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchUsers() {\r\n      try {\r\n        const endpoint = this.userType === 'STUDENT' ? '/students' : '/teachers';\r\n        const response = await this.$axios.get(`/api/admin/users${endpoint}`, {\r\n          params: {\r\n            pageNum: this.currentPage,\r\n            pageSize: this.pageSize\r\n          }\r\n        });\r\n        if (response.data.code === 200) {\r\n          this.users = response.data.data.content;\r\n          this.total = response.data.data.totalElements;\r\n        } else {\r\n          this.$message.error(response.data.msg || '获取用户列表失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取用户列表失败：' + error.message);\r\n      }\r\n    },\r\n    handlePageChange(page) {\r\n      this.currentPage = page;\r\n      this.fetchUsers();\r\n    },\r\n    handleEdit(row) {\r\n      this.$emit('edit', row);\r\n    },\r\n    handleDelete(row) {\r\n      this.$confirm('确认删除该用户?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        try {\r\n          const response = await this.$axios.delete(`/api/admin/users/${row.id}`);\r\n          if (response.data.code === 200) {\r\n            this.$message.success('删除成功');\r\n            this.fetchUsers();\r\n          } else {\r\n            this.$message.error(response.data.msg || '删除失败');\r\n          }\r\n        } catch (error) {\r\n          this.$message.error('删除失败：' + error.message);\r\n        }\r\n      }).catch(() => {});\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchUsers();\r\n  },\r\n  watch: {\r\n    userType: {\r\n      handler(newVal) {\r\n        if (newVal) {\r\n          this.currentPage = 1;\r\n          this.fetchUsers();\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script> "]}]}