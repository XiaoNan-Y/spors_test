{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\StudentManagement.vue?vue&type=style&index=0&id=31cbc6fc&prod&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\StudentManagement.vue","mtime":1742202977005},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc3R1ZGVudC1tYW5hZ2VtZW50IHsNCiAgcGFkZGluZzogMjBweDsNCn0NCi5maWx0ZXItc2VjdGlvbiB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQo="},{"version":3,"sources":["StudentManagement.vue"],"names":[],"mappings":";AAsJA;AACA;AACA;AACA;AACA;AACA","file":"StudentManagement.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\r\n  <div class=\"student-management\">\r\n    <div class=\"filter-section\">\r\n      <el-form :inline=\"true\" :model=\"filterForm\">\r\n        <el-form-item>\r\n          <el-input\r\n            v-model=\"filterForm.keyword\"\r\n            placeholder=\"搜索姓名/学号\"\r\n            clearable\r\n            @clear=\"handleSearch\">\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\r\n          <el-button type=\"success\" @click=\"handleAdd\">添加学生</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <el-table :data=\"students\" border v-loading=\"loading\">\r\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\r\n      <el-table-column prop=\"realName\" label=\"姓名\"></el-table-column>\r\n      <el-table-column prop=\"studentNumber\" label=\"学号\"></el-table-column>\r\n      <el-table-column prop=\"className\" label=\"班级\"></el-table-column>\r\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\r\n      <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"200\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-pagination\r\n      @current-change=\"handlePageChange\"\r\n      :current-page.sync=\"currentPage\"\r\n      :page-size=\"pageSize\"\r\n      layout=\"total, prev, pager, next\"\r\n      :total=\"total\">\r\n    </el-pagination>\r\n\r\n    <!-- 添加/编辑对话框 -->\r\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\">\r\n      <user-form\r\n        ref=\"userForm\"\r\n        :user-type=\"'STUDENT'\"\r\n        @saved=\"handleSaved\">\r\n      </user-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserForm from '../admin/UserForm.vue'\r\n\r\nexport default {\r\n  name: 'TeacherStudentManagement',\r\n  components: {\r\n    UserForm\r\n  },\r\n  data() {\r\n    return {\r\n      students: [],\r\n      loading: false,\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      filterForm: {\r\n        keyword: ''\r\n      },\r\n      dialogVisible: false,\r\n      dialogTitle: '添加学生',\r\n      currentUser: null\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchStudents() {\r\n      try {\r\n        this.loading = true;\r\n        const response = await this.$axios.get('/api/teacher/students', {\r\n          params: {\r\n            pageNum: this.currentPage,\r\n            pageSize: this.pageSize,\r\n            keyword: this.filterForm.keyword\r\n          }\r\n        });\r\n        if (response.data.code === 200) {\r\n          this.students = response.data.data.content;\r\n          this.total = response.data.data.totalElements;\r\n        } else {\r\n          this.$message.error(response.data.msg || '获取学生列表失败');\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(error.response?.data?.msg || error.message || '获取学生列表失败');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    handleSearch() {\r\n      this.currentPage = 1\r\n      this.fetchStudents()\r\n    },\r\n    handlePageChange(page) {\r\n      this.currentPage = page\r\n      this.fetchStudents()\r\n    },\r\n    handleAdd() {\r\n      this.dialogTitle = '添加学生'\r\n      this.currentUser = null\r\n      this.dialogVisible = true\r\n    },\r\n    handleEdit(row) {\r\n      this.dialogTitle = '编辑学生'\r\n      this.currentUser = row\r\n      this.dialogVisible = true\r\n      this.$nextTick(() => {\r\n        this.$refs.userForm.setFormData(row)\r\n      })\r\n    },\r\n    async handleDelete(row) {\r\n      try {\r\n        await this.$confirm('确认删除该学生?', '提示', {\r\n          type: 'warning'\r\n        })\r\n        const response = await this.$axios.delete(`/api/teacher/students/${row.id}`)\r\n        if (response.data.code === 200) {\r\n          this.$message.success('删除成功')\r\n          this.fetchStudents()\r\n        } else {\r\n          this.$message.error(response.data.msg || '删除失败')\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败：' + error.message)\r\n        }\r\n      }\r\n    },\r\n    handleSaved() {\r\n      this.dialogVisible = false\r\n      this.fetchStudents()\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchStudents()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.student-management {\r\n  padding: 20px;\r\n}\r\n.filter-section {\r\n  margin-bottom: 20px;\r\n}\r\n</style>"]}]}