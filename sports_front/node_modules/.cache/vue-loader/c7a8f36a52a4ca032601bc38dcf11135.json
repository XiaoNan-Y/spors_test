{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\TestRecords.vue?vue&type=style&index=0&id=2435c332&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\TestRecords.vue","mtime":1743144537481},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50ZXN0LXJlY29yZHMgewogIHBhZGRpbmc6IDIwcHg7Cn0KLmZpbHRlci1jb250YWluZXIgewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KLmZpbHRlci1jb250YWluZXIgPiAqIHsKICBtYXJnaW4tcmlnaHQ6IDEwcHg7Cn0K"},{"version":3,"sources":["TestRecords.vue"],"names":[],"mappings":";AAsKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TestRecords.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\n  <div class=\"test-records\">\n    <div class=\"filter-container\">\n      <el-select v-model=\"status\" placeholder=\"状态\" clearable>\n        <el-option label=\"全部\" value=\"\"></el-option>\n        <el-option label=\"待审核\" value=\"PENDING\"></el-option>\n        <el-option label=\"已通过\" value=\"APPROVED\"></el-option>\n        <el-option label=\"已拒绝\" value=\"REJECTED\"></el-option>\n      </el-select>\n      <el-button type=\"primary\" @click=\"getTestRecords\">查询</el-button>\n      <el-button @click=\"resetQuery\">重置</el-button>\n    </div>\n\n    <el-table :data=\"records\" border style=\"width: 100%\">\n      <el-table-column prop=\"createdAt\" label=\"测试时间\" width=\"180\">\n        <template slot-scope=\"scope\">\n          {{ formatDateTime(scope.row.createdAt) }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"sportsItemName\" label=\"体育项目\"></el-table-column>\n      <el-table-column prop=\"score\" label=\"成绩\"></el-table-column>\n      <el-table-column prop=\"grade\" label=\"等级\"></el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"getStatusType(scope.row.status)\">\n            {{ getStatusText(scope.row.status) }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"reviewComment\" label=\"审核意见\"></el-table-column>\n    </el-table>\n\n    <el-pagination\n      @size-change=\"handleSizeChange\"\n      @current-change=\"handleCurrentChange\"\n      :current-page=\"currentPage\"\n      :page-sizes=\"[10, 20, 50]\"\n      :page-size=\"pageSize\"\n      layout=\"total, sizes, prev, pager, next, jumper\"\n      :total=\"total\">\n    </el-pagination>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'TestRecords',\n  data() {\n    return {\n      status: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      records: [],\n      loading: false\n    }\n  },\n  created() {\n    // 组件创建时获取数据\n    this.getTestRecords()\n  },\n  methods: {\n    async getTestRecords() {\n      try {\n        this.loading = true\n        const userId = localStorage.getItem('userId')\n        \n        // 添加userId检查\n        if (!userId) {\n          this.$message.error('未登录或用户信息缺失')\n          this.$router.push('/login')\n          return\n        }\n        \n        // 打印请求参数\n        console.log('请求参数:', {\n          status: this.status,\n          page: this.currentPage,\n          size: this.pageSize,\n          userId: userId\n        })\n\n        const response = await this.$axios.get('/api/student/test-records', {\n          params: {\n            status: this.status,\n            page: this.currentPage,\n            size: this.pageSize\n          },\n          headers: {\n            userId: userId\n          }\n        })\n\n        console.log('获取到的记录数据:', response.data.data.content)\n\n        if (response.data.code === 200) {\n          this.records = response.data.data.content\n          this.total = response.data.data.totalElements\n        } else {\n          this.$message.error(response.data.message || '获取数据失败')\n        }\n      } catch (error) {\n        console.error('获取测试记录失败:', error)\n        if (typeof error === 'object' && error.message) {\n          this.$message.error(`获取测试记录失败: ${error.message}`)\n        } else {\n          this.$message.error(`获取测试记录失败: ${error}`)\n        }\n      } finally {\n        this.loading = false\n      }\n    },\n    handleSizeChange(val) {\n      console.log('改变每页数量:', val)\n      this.pageSize = val\n      this.getTestRecords()\n    },\n    handleCurrentChange(val) {\n      console.log('改变页码:', val)\n      this.currentPage = val\n      this.getTestRecords()\n    },\n    resetQuery() {\n      this.status = ''\n      this.currentPage = 1\n      this.getTestRecords()\n    },\n    getStatusType(status) {\n      const typeMap = {\n        'TESTED': 'success',\n        'NOT_TESTED': 'info',\n        'EXEMPTED': 'warning',\n        'APPROVED': 'success',\n        'REJECTED': 'danger',\n        'PENDING': 'warning'\n      };\n      return typeMap[status] || 'info';\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'TESTED': '已测试',\n        'NOT_TESTED': '未测试',\n        'EXEMPTED': '免测',\n        'APPROVED': '已通过',\n        'REJECTED': '已驳回',\n        'PENDING': '待审核'\n      };\n      return statusMap[status] || status;\n    },\n    formatDateTime(datetime) {\n      if (!datetime) return '';\n      const date = new Date(datetime);\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.test-records {\n  padding: 20px;\n}\n.filter-container {\n  margin-bottom: 20px;\n}\n.filter-container > * {\n  margin-right: 10px;\n}\n</style> "]}]}