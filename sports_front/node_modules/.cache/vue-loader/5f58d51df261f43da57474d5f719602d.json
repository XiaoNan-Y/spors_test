{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\StudentRecords.vue?vue&type=style&index=0&id=bef733e4&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\StudentRecords.vue","mtime":1742903093291},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc3R1ZGVudC1yZWNvcmRzIHsNCiAgcGFkZGluZzogMjBweDsNCn0NCi5maWx0ZXItc2VjdGlvbiB7DQogIG1hcmdpbi1ib3R0b206IDIwcHg7DQp9DQoucGFnaW5hdGlvbi1jb250YWluZXIgew0KICBtYXJnaW4tdG9wOiAyMHB4Ow0KICB0ZXh0LWFsaWduOiByaWdodDsNCn0NCi5kaWFsb2ctZm9vdGVyIHsNCiAgdGV4dC1hbGlnbjogcmlnaHQ7DQp9DQo="},{"version":3,"sources":["StudentRecords.vue"],"names":[],"mappings":";AAgeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StudentRecords.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\r\n  <div class=\"student-records\">\r\n    <!-- 搜索筛选区 -->\r\n    <div class=\"filter-section\">\r\n      <el-form :inline=\"true\" :model=\"queryParams\" ref=\"queryForm\">\r\n        <el-form-item label=\"班级\">\r\n          <el-select v-model=\"queryParams.className\" placeholder=\"选择班级\" clearable>\r\n            <el-option\r\n              v-for=\"className in classNames\"\r\n              :key=\"className\"\r\n              :label=\"className\"\r\n              :value=\"className\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"测试项目\">\r\n          <el-select v-model=\"queryParams.sportsItemId\" placeholder=\"选择测试项目\" clearable>\r\n            <el-option\r\n              v-for=\"item in sportsItems\"\r\n              :key=\"item.id\"\r\n              :label=\"item.name\"\r\n              :value=\"item.id\"\r\n            ></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"状态\">\r\n          <el-select v-model=\"queryParams.status\" placeholder=\"选择状态\" clearable>\r\n            <el-option label=\"未测试\" value=\"PENDING\"></el-option>\r\n            <el-option label=\"已测试\" value=\"APPROVED\"></el-option>\r\n            <el-option label=\"免测\" value=\"EXEMPTED\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"学号\">\r\n          <el-input \r\n            v-model=\"queryParams.studentNumber\" \r\n            placeholder=\"请输入学号\"\r\n            clearable\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\r\n          <el-button @click=\"resetQuery\">重置</el-button>\r\n          <el-button type=\"success\" @click=\"handleExport\">导出成绩</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <!-- 数据表格 -->\r\n    <el-table\r\n      v-loading=\"loading\"\r\n      :data=\"tableData\"\r\n      style=\"width: 100%\"\r\n      border>\r\n      <el-table-column type=\"index\" label=\"序号\" width=\"60\"></el-table-column>\r\n      <el-table-column prop=\"studentInfo.realName\" label=\"学生姓名\"></el-table-column>\r\n      <el-table-column prop=\"studentInfo.studentNumber\" label=\"学号\"></el-table-column>\r\n      <el-table-column prop=\"studentInfo.className\" label=\"班级\"></el-table-column>\r\n      <el-table-column prop=\"sportsItem.name\" label=\"测试项目\"></el-table-column>\r\n      <el-table-column prop=\"score\" label=\"成绩\"></el-table-column>\r\n      <el-table-column label=\"测试状态\" align=\"center\">\r\n        <template #default=\"scope\">\r\n          <el-tag :type=\"getStatusType(scope.row.status)\">\r\n            {{ getStatusText(scope.row.status) }}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"操作\" width=\"180\" align=\"center\">\r\n        <template #default=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"handleEdit(scope.row)\"\r\n            :disabled=\"scope.row.status === 'EXEMPTED'\"\r\n          >\r\n            {{ getActionButtonText(scope.row.status) }}\r\n          </el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"info\"\r\n            @click=\"handleDetail(scope.row)\">\r\n            详情\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <!-- 分页 -->\r\n    <div class=\"pagination-container\">\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"queryParams.pageNum\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"queryParams.pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\">\r\n      </el-pagination>\r\n    </div>\r\n\r\n    <!-- 添加修改对话框 -->\r\n    <el-dialog\r\n      :title=\"editDialog.title\"\r\n      :visible.sync=\"editDialog.visible\"\r\n      width=\"500px\"\r\n      @closed=\"handleEditDialogClosed\">\r\n      <el-form\r\n        :model=\"editForm\"\r\n        :rules=\"editRules\"\r\n        ref=\"editForm\"\r\n        label-width=\"100px\">\r\n        <el-form-item label=\"学生姓名\">\r\n          <span>{{ editForm.studentName }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"测试项目\">\r\n          <span>{{ editForm.sportsItemName }}</span>\r\n        </el-form-item>\r\n        <el-form-item label=\"成绩\" prop=\"score\">\r\n          <el-input v-model.number=\"editForm.score\" type=\"number\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialog.visible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitEdit\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <!-- 添加详情对话框 -->\r\n    <el-dialog\r\n      title=\"成绩详情\"\r\n      :visible.sync=\"detailDialog.visible\"\r\n      width=\"500px\">\r\n      <el-descriptions :column=\"1\" border>\r\n        <el-descriptions-item label=\"学生姓名\">{{ detailForm.studentName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"学号\">{{ detailForm.studentNumber }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"班级\">{{ detailForm.className }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"测试项目\">{{ detailForm.sportsItemName }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"成绩\">{{ detailForm.score }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"状态\">\r\n          <el-tag :type=\"getStatusType(detailForm.status)\">\r\n            {{ getStatusText(detailForm.status) }}\r\n          </el-tag>\r\n        </el-descriptions-item>\r\n        <el-descriptions-item label=\"创建时间\">{{ detailForm.createdAt }}</el-descriptions-item>\r\n        <el-descriptions-item label=\"更新时间\">{{ detailForm.updatedAt }}</el-descriptions-item>\r\n      </el-descriptions>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'StudentRecords',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      queryParams: {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        className: '',\r\n        sportsItemId: undefined,\r\n        status: '',\r\n        studentNumber: ''\r\n      },\r\n      classNames: [],\r\n      sportsItems: [],\r\n      tableData: [],\r\n      total: 0,\r\n      editDialog: {\r\n        visible: false,\r\n        title: '修改成绩'\r\n      },\r\n      editForm: {\r\n        id: null,\r\n        studentName: '',\r\n        sportsItemName: '',\r\n        score: null\r\n      },\r\n      editRules: {\r\n        score: [\r\n          { required: true, message: '请输入成绩', trigger: 'blur' },\r\n          { type: 'number', message: '成绩必须为数字', trigger: 'blur' }\r\n        ]\r\n      },\r\n      detailDialog: {\r\n        visible: false\r\n      },\r\n      detailForm: {\r\n        studentName: '',\r\n        studentNumber: '',\r\n        className: '',\r\n        sportsItemName: '',\r\n        score: null,\r\n        status: '',\r\n        createdAt: '',\r\n        updatedAt: ''\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n  },\r\n  methods: {\r\n    async init() {\r\n      await Promise.all([\r\n        this.getClassNames(),\r\n        this.getSportsItems(),\r\n        this.getList()\r\n      ])\r\n    },\r\n    async getList() {\r\n      try {\r\n        this.loading = true\r\n        const response = await this.$axios.get('/api/teacher/student-records', {\r\n          params: {\r\n            page: this.queryParams.pageNum - 1,\r\n            size: this.queryParams.pageSize,\r\n            className: this.queryParams.className,\r\n            sportsItemId: this.queryParams.sportsItemId,\r\n            status: this.queryParams.status,\r\n            keyword: this.queryParams.studentNumber\r\n          }\r\n        })\r\n        \r\n        if (response.data.code === 200) {\r\n          this.tableData = response.data.data.content\r\n          this.total = response.data.data.totalElements\r\n        }\r\n      } catch (error) {\r\n        console.error('获取列表失败:', error)\r\n        this.$message.error('获取列表失败: ' + error.message)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    async getClassNames() {\r\n      try {\r\n        const res = await this.$axios.get('/api/teacher/classes')\r\n        if (res.data.code === 200) {\r\n          this.classNames = res.data.data\r\n        }\r\n      } catch (error) {\r\n        console.error('获取班级列表失败:', error)\r\n      }\r\n    },\r\n    async getSportsItems() {\r\n      try {\r\n        const res = await this.$axios.get('/api/teacher/sports-items')\r\n        if (res.data.code === 200) {\r\n          this.sportsItems = res.data.data\r\n        }\r\n      } catch (error) {\r\n        console.error('获取体测项目列表失败:', error)\r\n      }\r\n    },\r\n    handleQuery() {\r\n      this.queryParams.pageNum = 1\r\n      this.getList()\r\n    },\r\n    resetQuery() {\r\n      this.$refs.queryForm.resetFields()\r\n      this.queryParams = {\r\n        pageNum: 1,\r\n        pageSize: 10,\r\n        className: '',\r\n        sportsItemId: undefined,\r\n        status: '',\r\n        studentNumber: ''\r\n      }\r\n      this.getList()\r\n    },\r\n    handleSizeChange(val) {\r\n      this.queryParams.pageSize = val\r\n      this.getList()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.queryParams.pageNum = val\r\n      this.getList()\r\n    },\r\n    getStatusType(status) {\r\n      const typeMap = {\r\n        'APPROVED': 'success',\r\n        'PENDING': 'warning',\r\n        'EXEMPTED': 'info',\r\n        'REJECTED': 'danger'\r\n      };\r\n      return typeMap[status] || 'warning';\r\n    },\r\n    getStatusText(status) {\r\n      const statusMap = {\r\n        'APPROVED': '已测试',\r\n        'PENDING': '未测试',\r\n        'EXEMPTED': '免测',\r\n        'REJECTED': '未测试'\r\n      };\r\n      return statusMap[status] || '未测试';\r\n    },\r\n    getActionButtonText(status) {\r\n      switch(status) {\r\n        case 'APPROVED':\r\n          return '修改';\r\n        case 'PENDING':\r\n        case 'REJECTED':\r\n          return '录入';\r\n        case 'EXEMPTED':\r\n          return '免测';\r\n        default:\r\n          return '录入';\r\n      }\r\n    },\r\n    handleEdit(row) {\r\n      this.editForm = {\r\n        id: row.id,\r\n        studentName: row.studentInfo.realName,\r\n        sportsItemName: row.sportsItem.name,\r\n        score: row.score\r\n      }\r\n      this.editDialog.title = row.status === 'APPROVED' ? '修改成绩' : '录入成绩';\r\n      this.editDialog.visible = true;\r\n    },\r\n    handleDetail(row) {\r\n      this.detailForm = {\r\n        studentName: row.studentInfo.realName,\r\n        studentNumber: row.studentInfo.studentNumber,\r\n        className: row.studentInfo.className,\r\n        sportsItemName: row.sportsItem.name,\r\n        score: row.score,\r\n        status: row.status,\r\n        createdAt: row.createdAt,\r\n        updatedAt: row.updatedAt\r\n      }\r\n      this.detailDialog.visible = true\r\n    },\r\n    submitEdit() {\r\n      this.$refs.editForm.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            const score = parseFloat(this.editForm.score);\r\n            if (isNaN(score)) {\r\n              this.$message.error('请输入有效的成绩');\r\n              return;\r\n            }\r\n\r\n            // 根据成绩值决定状态\r\n            const status = score === 0 ? 'PENDING' : 'APPROVED';\r\n\r\n            console.log('提交数据:', {\r\n              id: this.editForm.id,\r\n              score: score,\r\n              status: status\r\n            });\r\n\r\n            const response = await this.$axios.put(\r\n              `/api/teacher/test-records/${this.editForm.id}`,\r\n              { \r\n                score: score,\r\n                status: status  // 根据成绩动态设置状态\r\n              }\r\n            );\r\n\r\n            if (response.data.code === 200) {\r\n              this.$message.success(this.editDialog.title === '修改成绩' ? '修改成功' : '录入成功');\r\n              this.editDialog.visible = false;\r\n              await this.getList();\r\n            } else {\r\n              this.$message.error(response.data.message || '操作失败');\r\n            }\r\n          } catch (error) {\r\n            console.error('操作失败:', error);\r\n            const errorMessage = error.response?.data?.message || '操作失败';\r\n            this.$message.error(errorMessage);\r\n          }\r\n        } else {\r\n          this.$message.warning('请正确填写表单');\r\n        }\r\n      });\r\n    },\r\n    handleEditDialogClosed() {\r\n      this.$refs.editForm?.resetFields()\r\n      this.editForm = {\r\n        id: null,\r\n        studentName: '',\r\n        sportsItemName: '',\r\n        score: null\r\n      }\r\n    },\r\n    async handleExport() {\r\n      try {\r\n        await this.$confirm('确认要导出当前筛选条件下的成绩数据吗？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'info'\r\n        });\r\n\r\n        const loading = this.$loading({\r\n          lock: true,\r\n          text: '正在导出数据，请稍候...',\r\n          spinner: 'el-icon-loading',\r\n          background: 'rgba(0, 0, 0, 0.7)'\r\n        });\r\n\r\n        try {\r\n          // 构建查询参数\r\n          const params = {\r\n            className: this.queryParams.className || '',\r\n            sportsItemId: this.queryParams.sportsItemId || '',\r\n            status: this.queryParams.status || '',\r\n            studentNumber: this.queryParams.studentNumber || ''\r\n          };\r\n\r\n          console.log('导出查询参数:', params);\r\n\r\n          // 使用原生fetch API进行下载\r\n          const response = await fetch(`/api/teacher/test-records/export?className=${encodeURIComponent(params.className)}&sportsItemId=${encodeURIComponent(params.sportsItemId || '')}&status=${encodeURIComponent(params.status)}&studentNumber=${encodeURIComponent(params.studentNumber)}`, {\r\n            method: 'GET',\r\n            headers: {\r\n              'Accept': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n              'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n              'userId': localStorage.getItem('userId')\r\n            }\r\n          });\r\n\r\n          // 检查响应状态\r\n          if (!response.ok) {\r\n            const errorText = await response.text();\r\n            console.error('服务器错误:', errorText);\r\n            throw new Error(`服务器返回错误: ${response.status} ${response.statusText}`);\r\n          }\r\n\r\n          // 获取内容类型\r\n          const contentType = response.headers.get('content-type');\r\n          \r\n          // 如果是JSON响应（错误消息）\r\n          if (contentType && contentType.includes('application/json')) {\r\n            const result = await response.json();\r\n            this.$message.warning(result.message || '没有找到符合条件的记录');\r\n            return;\r\n          }\r\n\r\n          // 如果是Excel文件\r\n          const blob = await response.blob();\r\n          \r\n          // 获取文件名\r\n          let fileName = '学生成绩记录.xlsx';\r\n          const disposition = response.headers.get('content-disposition');\r\n          if (disposition && disposition.includes('filename')) {\r\n            const filenameRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\r\n            const matches = filenameRegex.exec(disposition);\r\n            if (matches && matches[1]) {\r\n              fileName = matches[1].replace(/['\"]/g, '');\r\n            }\r\n          }\r\n\r\n          // 创建下载链接\r\n          const url = window.URL.createObjectURL(blob);\r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.download = fileName;\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          window.URL.revokeObjectURL(url);\r\n\r\n          this.$message.success('导出成功');\r\n        } catch (error) {\r\n          console.error('导出过程出错:', error);\r\n          this.$message.error('导出失败：' + (error.message || '未知错误'));\r\n        } finally {\r\n          loading.close();\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          console.error('导出操作失败:', error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.student-records {\r\n  padding: 20px;\r\n}\r\n.filter-section {\r\n  margin-bottom: 20px;\r\n}\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style> "]}]}