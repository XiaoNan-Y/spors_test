{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\DataReview.vue?vue&type=style&index=0&id=7f4f499c&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\DataReview.vue","mtime":1742873359480},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741947006026},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kYXRhLXJldmlldy1jb250YWluZXIgewogIHBhZGRpbmc6IDIwcHg7CiAgCiAgLmZpbHRlci1jb250YWluZXIgewogICAgbWFyZ2luLWJvdHRvbTogMjBweDsKICB9CiAgCiAgLnRhYmxlLWNvbnRhaW5lciB7CiAgICAudGFibGUtaGVhZGVyIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogICAgICAKICAgICAgLnRpdGxlIHsKICAgICAgICBmb250LXNpemU6IDE4cHg7CiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgIH0KICAgICAgCiAgICAgIC5vcGVyYXRpb25zIHsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGdhcDogMTBweDsKICAgICAgfQogICAgfQogIH0KICAKICAucGFnaW5hdGlvbi1jb250YWluZXIgewogICAgbWFyZ2luLXRvcDogMjBweDsKICAgIHRleHQtYWxpZ246IHJpZ2h0OwogIH0KICAKICAuZXhlbXB0ZWQtdGFnIHsKICAgIGNvbG9yOiAjOTA5Mzk5OwogICAgZm9udC1zdHlsZTogaXRhbGljOwogIH0KICAKICAuaW1wb3J0LXRlbXBsYXRlIHsKICAgIG1hcmdpbi10b3A6IDIwcHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAKICAgIGEgewogICAgICBjb2xvcjogIzQwOUVGRjsKICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogICAgICAKICAgICAgJjpob3ZlciB7CiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7CiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["DataReview.vue"],"names":[],"mappings":";AAmlBA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"DataReview.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"data-review-container\">\n    <el-card class=\"filter-container\">\n      <div class=\"filter-item\">\n        <el-form :inline=\"true\" :model=\"queryParams\" class=\"demo-form-inline\">\n          <el-form-item label=\"班级\">\n            <el-select v-model=\"queryParams.className\" placeholder=\"选择班级\" clearable>\n              <el-option\n                v-for=\"item in classOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"学号\">\n            <el-input v-model=\"queryParams.studentNumber\" placeholder=\"输入学号\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"姓名\">\n            <el-input v-model=\"queryParams.studentName\" placeholder=\"输入姓名\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"测试项目\">\n            <el-select v-model=\"queryParams.sportsItemId\" placeholder=\"选择测试项目\" clearable>\n              <el-option\n                v-for=\"item in sportsItemOptions\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"测试状态\">\n            <el-select v-model=\"queryParams.status\" placeholder=\"选择状态\" clearable>\n              <el-option label=\"待测试\" value=\"PENDING\"></el-option>\n              <el-option label=\"已测试\" value=\"COMPLETED\"></el-option>\n              <el-option label=\"免测\" value=\"EXEMPTED\"></el-option>\n            </el-select>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n            <el-button @click=\"resetQuery\">重置</el-button>\n          </el-form-item>\n        </el-form>\n      </div>\n    </el-card>\n\n    <el-card class=\"table-container\">\n      <div class=\"table-header\">\n        <div class=\"title\">学生成绩列表</div>\n        <div class=\"operations\">\n          <el-button type=\"primary\" @click=\"handleBatchImport\">批量导入</el-button>\n          <el-button type=\"success\" @click=\"handleExport\">导出数据</el-button>\n          <el-button type=\"primary\" @click=\"handleAdd\">添加记录</el-button>\n        </div>\n      </div>\n      \n      <el-table\n        v-loading=\"loading\"\n        :data=\"tableData\"\n        border\n        style=\"width: 100%\">\n        <el-table-column prop=\"studentNumber\" label=\"学号\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"studentName\" label=\"姓名\" width=\"100\"></el-table-column>\n        <el-table-column prop=\"className\" label=\"班级\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"sportsItemName\" label=\"测试项目\" width=\"120\"></el-table-column>\n        <el-table-column prop=\"score\" label=\"成绩\" width=\"80\">\n          <template slot-scope=\"scope\">\n            <span v-if=\"scope.row.status === 'COMPLETED'\">{{ scope.row.score }}</span>\n            <span v-else-if=\"scope.row.status === 'EXEMPTED'\" class=\"exempted-tag\">免测</span>\n            <span v-else>-</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"grade\" label=\"等级\" width=\"80\">\n          <template slot-scope=\"scope\">\n            <el-tag v-if=\"scope.row.grade\" :type=\"getGradeTagType(scope.row.grade)\">\n              {{ scope.row.grade }}\n            </el-tag>\n            <span v-else>-</span>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"testTime\" label=\"测试时间\" width=\"160\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.testTime ? formatDateTime(scope.row.testTime) : '-' }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getStatusTagType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"remark\" label=\"备注\" min-width=\"120\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"primary\"\n              @click=\"handleEdit(scope.row)\"\n              :disabled=\"scope.row.status === 'EXEMPTED'\">编辑</el-button>\n            <el-button\n              size=\"mini\"\n              type=\"danger\"\n              @click=\"handleDelete(scope.row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"queryParams.page\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"queryParams.size\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n        </el-pagination>\n      </div>\n    </el-card>\n\n    <!-- 编辑对话框 -->\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"500px\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"form\" label-width=\"100px\">\n        <el-form-item label=\"学生\" prop=\"studentId\" v-if=\"dialogType === 'add'\">\n          <el-select \n            v-model=\"form.studentId\" \n            filterable \n            remote \n            placeholder=\"请输入学号或姓名搜索\"\n            :remote-method=\"searchStudents\"\n            :loading=\"studentLoading\">\n            <el-option\n              v-for=\"item in studentOptions\"\n              :key=\"item.id\"\n              :label=\"`${item.realName} (${item.studentNumber})`\"\n              :value=\"item.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学号\" v-else>\n          <el-input v-model=\"form.studentNumber\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"姓名\" v-if=\"dialogType === 'edit'\">\n          <el-input v-model=\"form.studentName\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"班级\" v-if=\"dialogType === 'edit'\">\n          <el-input v-model=\"form.className\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"测试项目\" prop=\"sportsItemId\">\n          <el-select v-model=\"form.sportsItemId\" placeholder=\"选择测试项目\">\n            <el-option\n              v-for=\"item in sportsItemOptions\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"测试状态\" prop=\"status\">\n          <el-select v-model=\"form.status\" placeholder=\"选择状态\">\n            <el-option label=\"待测试\" value=\"PENDING\"></el-option>\n            <el-option label=\"已测试\" value=\"COMPLETED\"></el-option>\n            <el-option label=\"免测\" value=\"EXEMPTED\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"成绩\" prop=\"score\" v-if=\"form.status === 'COMPLETED'\">\n          <el-input v-model.number=\"form.score\" type=\"number\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"测试时间\" prop=\"testTime\" v-if=\"form.status === 'COMPLETED'\">\n          <el-date-picker\n            v-model=\"form.testTime\"\n            type=\"datetime\"\n            placeholder=\"选择日期时间\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"备注\" prop=\"remark\">\n          <el-input v-model=\"form.remark\" type=\"textarea\" :rows=\"3\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 批量导入对话框 -->\n    <el-dialog title=\"批量导入成绩\" :visible.sync=\"importDialogVisible\" width=\"500px\">\n      <el-upload\n        class=\"upload-demo\"\n        drag\n        action=\"/api/admin/test-records/import\"\n        :headers=\"uploadHeaders\"\n        :on-success=\"handleImportSuccess\"\n        :on-error=\"handleImportError\"\n        :before-upload=\"beforeImportUpload\">\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\n        <div class=\"el-upload__tip\" slot=\"tip\">只能上传xlsx文件，且不超过10MB</div>\n      </el-upload>\n      <div class=\"import-template\">\n        <a href=\"/api/admin/test-records/template\" download>下载导入模板</a>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { formatDateTime } from '@/utils/date'\n\nexport default {\n  name: 'DataReview',\n  data() {\n    return {\n      loading: false,\n      tableData: [],\n      total: 0,\n      queryParams: {\n        page: 1,\n        size: 10,\n        className: '',\n        studentNumber: '',\n        studentName: '',\n        sportsItemId: '',\n        status: ''\n      },\n      classOptions: [],\n      sportsItemOptions: [],\n      dialogVisible: false,\n      dialogTitle: '',\n      dialogType: 'add', // 'add' 或 'edit'\n      form: {\n        id: null,\n        studentId: null,\n        studentNumber: '',\n        studentName: '',\n        className: '',\n        sportsItemId: null,\n        score: null,\n        status: 'PENDING',\n        testTime: null,\n        remark: ''\n      },\n      rules: {\n        studentId: [{ required: true, message: '请选择学生', trigger: 'change' }],\n        sportsItemId: [{ required: true, message: '请选择测试项目', trigger: 'change' }],\n        status: [{ required: true, message: '请选择测试状态', trigger: 'change' }],\n        score: [\n          { type: 'number', message: '成绩必须为数字', trigger: 'blur' },\n          { required: true, message: '请输入成绩', trigger: 'blur' }\n        ]\n      },\n      studentOptions: [],\n      studentLoading: false,\n      importDialogVisible: false,\n      uploadHeaders: {\n        'X-User-ID': localStorage.getItem('userId')\n      }\n    }\n  },\n  created() {\n    this.getClassOptions()\n    this.getSportsItems()\n    this.fetchData()\n  },\n  methods: {\n    formatDateTime,\n    getStatusTagType(status) {\n      const map = {\n        'PENDING': 'warning',\n        'COMPLETED': 'success',\n        'EXEMPTED': 'info',\n        'APPROVED': 'success',\n        'WAITING': 'warning'\n      }\n      return map[status] || ''\n    },\n    getStatusText(status) {\n      const map = {\n        'PENDING': '待测试',\n        'COMPLETED': '已测试',\n        'EXEMPTED': '免测',\n        'APPROVED': '已通过',\n        'WAITING': '待测试'\n      }\n      return map[status] || status\n    },\n    getGradeTagType(grade) {\n      const map = {\n        'A': 'success',\n        'B': 'success',\n        'C': 'warning',\n        'D': 'warning',\n        'E': 'danger'\n      }\n      return map[grade] || ''\n    },\n    async getClassOptions() {\n      try {\n        const response = await this.$axios.get('/api/admin/classes')\n        if (response.data.code === 200) {\n          this.classOptions = response.data.data.map(item => ({\n            value: item.name || item,\n            label: item.name || item\n          }))\n        } else {\n          this.classOptions = [\n            { value: '计科1班', label: '计科1班' },\n            { value: '计科2班', label: '计科2班' },\n            { value: '软工1班', label: '软工1班' },\n            { value: '软工2班', label: '软工2班' }\n          ]\n        }\n      } catch (error) {\n        console.error('获取班级列表失败:', error)\n        this.classOptions = [\n          { value: '计科1班', label: '计科1班' },\n          { value: '计科2班', label: '计科2班' },\n          { value: '软工1班', label: '软工1班' },\n          { value: '软工2班', label: '软工2班' }\n        ]\n      }\n    },\n    async getSportsItems() {\n      try {\n        const response = await this.$axios.get('/api/admin/sports-items')\n        if (response.data.code === 200) {\n          this.sportsItemOptions = response.data.data\n        } else {\n          this.sportsItemOptions = [\n            { id: 1, name: '50米跑' },\n            { id: 2, name: '立定跳远' },\n            { id: 3, name: '引体向上' },\n            { id: 4, name: '1000米跑' }\n          ]\n        }\n      } catch (error) {\n        console.error('获取体育项目列表失败:', error)\n        this.sportsItemOptions = [\n          { id: 1, name: '50米跑' },\n          { id: 2, name: '立定跳远' },\n          { id: 3, name: '引体向上' },\n          { id: 4, name: '1000米跑' }\n        ]\n      }\n    },\n    async fetchData() {\n      this.loading = true\n      try {\n        const response = await this.$axios.get('/api/admin/test-records', {\n          params: {\n            ...this.queryParams,\n            page: this.queryParams.page - 1 // 后端分页从0开始\n          }\n        })\n        \n        console.log('API响应数据:', response.data)\n        \n        if (response.data.code === 200) {\n          const { content, totalElements } = response.data.data\n          this.tableData = content\n          this.total = totalElements\n        } else {\n          this.$message.error(response.data.message || '获取数据失败')\n        }\n      } catch (error) {\n        console.error('获取数据失败:', error)\n        this.$message.error('获取数据失败，请检查API路径是否正确')\n        \n        this.tableData = [\n          {\n            id: 1,\n            studentId: 1,\n            studentNumber: '2023001',\n            studentName: '李小',\n            className: '计科1班',\n            sportsItemId: 1,\n            sportsItemName: '50米跑',\n            score: null,\n            grade: null,\n            status: 'PENDING',\n            testTime: null,\n            remark: ''\n          },\n          {\n            id: 2,\n            studentId: 2,\n            studentNumber: '2023002',\n            studentName: '李四',\n            className: '计科2班',\n            sportsItemId: 2,\n            sportsItemName: '立定跳远',\n            score: 7.5,\n            grade: 'B',\n            status: 'COMPLETED',\n            testTime: '2023-05-15T10:30:00',\n            remark: '正常完成测试'\n          }\n        ]\n        this.total = 2\n      } finally {\n        this.loading = false\n      }\n    },\n    handleQuery() {\n      this.queryParams.page = 1\n      this.fetchData()\n    },\n    resetQuery() {\n      this.queryParams = {\n        page: 1,\n        size: 10,\n        className: '',\n        studentNumber: '',\n        studentName: '',\n        sportsItemId: '',\n        status: ''\n      }\n      this.fetchData()\n    },\n    handleSizeChange(val) {\n      this.queryParams.size = val\n      this.fetchData()\n    },\n    handleCurrentChange(val) {\n      this.queryParams.page = val\n      this.fetchData()\n    },\n    handleAdd() {\n      this.dialogType = 'add'\n      this.dialogTitle = '添加测试记录'\n      this.form = {\n        id: null,\n        studentId: null,\n        sportsItemId: null,\n        score: null,\n        status: 'PENDING',\n        testTime: null,\n        remark: ''\n      }\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs.form && this.$refs.form.clearValidate()\n      })\n    },\n    handleEdit(row) {\n      this.dialogType = 'edit'\n      this.dialogTitle = '编辑测试记录'\n      this.form = {\n        id: row.id,\n        studentId: row.studentId,\n        studentNumber: row.studentNumber,\n        studentName: row.studentName,\n        className: row.className,\n        sportsItemId: row.sportsItemId,\n        score: row.score,\n        status: row.status,\n        testTime: row.testTime,\n        remark: row.remark\n      }\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs.form && this.$refs.form.clearValidate()\n      })\n    },\n    async handleDelete(row) {\n      try {\n        await this.$confirm('确认删除该记录吗?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n        \n        try {\n          await this.$axios.delete(`/api/admin/test-records/${row.id}`)\n          this.$message.success('删除成功')\n          this.fetchData()\n        } catch (error) {\n          console.error('删除失败:', error)\n          this.$message.error('删除失败，请检查API路径是否正确')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          console.error('操作取消:', error)\n        }\n      }\n    },\n    async searchStudents(query) {\n      if (query.length < 2) return\n      \n      this.studentLoading = true\n      try {\n        const response = await this.$axios.get('/api/admin/students/search', {\n          params: { keyword: query }\n        })\n        \n        if (response.data.code === 200) {\n          this.studentOptions = response.data.data\n        } else {\n          this.studentOptions = [\n            { id: 1, realName: '李小', studentNumber: '2023001' },\n            { id: 2, realName: '李四', studentNumber: '2023002' },\n            { id: 3, realName: '王五', studentNumber: '2023003' }\n          ].filter(s => \n            s.realName.includes(query) || \n            s.studentNumber.includes(query)\n          )\n        }\n      } catch (error) {\n        console.error('搜索学生失败:', error)\n        this.studentOptions = [\n          { id: 1, realName: '李小', studentNumber: '2023001' },\n          { id: 2, realName: '李四', studentNumber: '2023002' },\n          { id: 3, realName: '王五', studentNumber: '2023003' }\n        ].filter(s => \n          s.realName.includes(query) || \n          s.studentNumber.includes(query)\n        )\n      } finally {\n        this.studentLoading = false\n      }\n    },\n    submitForm() {\n      this.$refs.form.validate(async valid => {\n        if (!valid) return\n        \n        try {\n          if (this.dialogType === 'add') {\n            await this.$axios.post('/api/admin/test-records', this.form)\n            this.$message.success('添加成功')\n          } else {\n            await this.$axios.put(`/api/admin/test-records/${this.form.id}`, this.form)\n            this.$message.success('更新成功')\n          }\n          \n          this.dialogVisible = false\n          this.fetchData()\n        } catch (error) {\n          console.error('提交失败:', error)\n          this.$message.error('提交失败，请检查API路径是否正确')\n        }\n      })\n    },\n    handleBatchImport() {\n      this.importDialogVisible = true\n    },\n    beforeImportUpload(file) {\n      const isExcel = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n      const isLt10M = file.size / 1024 / 1024 < 10\n      \n      if (!isExcel) {\n        this.$message.error('只能上传Excel文件!')\n      }\n      if (!isLt10M) {\n        this.$message.error('文件大小不能超过10MB!')\n      }\n      \n      return isExcel && isLt10M\n    },\n    handleImportSuccess(response) {\n      if (response.code === 200) {\n        this.$message.success('导入成功')\n        this.importDialogVisible = false\n        this.fetchData()\n      } else {\n        this.$message.error(response.message || '导入失败')\n      }\n    },\n    handleImportError(error) {\n      console.error('导入失败:', error)\n      this.$message.error('导入失败')\n    },\n    async handleExport() {\n      try {\n        const response = await this.$axios.get('/api/admin/test-records/export', {\n          params: this.queryParams,\n          responseType: 'blob'\n        })\n        \n        const blob = new Blob([response.data], { type: 'application/vnd.ms-excel' })\n        const link = document.createElement('a')\n        link.href = URL.createObjectURL(blob)\n        link.download = '体测成绩数据.xlsx'\n        link.click()\n        URL.revokeObjectURL(link.href)\n      } catch (error) {\n        console.error('导出失败:', error)\n        this.$message.error('导出失败，请检查API路径是否正确')\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.data-review-container {\n  padding: 20px;\n  \n  .filter-container {\n    margin-bottom: 20px;\n  }\n  \n  .table-container {\n    .table-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 20px;\n      \n      .title {\n        font-size: 18px;\n        font-weight: bold;\n      }\n      \n      .operations {\n        display: flex;\n        gap: 10px;\n      }\n    }\n  }\n  \n  .pagination-container {\n    margin-top: 20px;\n    text-align: right;\n  }\n  \n  .exempted-tag {\n    color: #909399;\n    font-style: italic;\n  }\n  \n  .import-template {\n    margin-top: 20px;\n    text-align: center;\n    \n    a {\n      color: #409EFF;\n      text-decoration: none;\n      \n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n}\n</style>"]}]}