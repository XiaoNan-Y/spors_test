{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\Login.vue","mtime":1742806879711},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741947006026},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9naW4tY29udGFpbmVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGhlaWdodDogMTAwdmg7DQogIGJhY2tncm91bmQtY29sb3I6ICMyZDNhNGI7DQogIA0KICAubG9naW4tZm9ybSB7DQogICAgd2lkdGg6IDQwMHB4Ow0KICAgIHBhZGRpbmc6IDMwcHg7DQogICAgYmFja2dyb3VuZDogd2hpdGU7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIA0KICAgIC50aXRsZSB7DQogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgICBtYXJnaW4tYm90dG9tOiAzMHB4Ow0KICAgICAgY29sb3I6ICMzMzM7DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAqHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" class=\"login-form\">\r\n      <h3 class=\"title\">体育测试管理系统</h3>\r\n      <el-form-item prop=\"username\">\r\n        <el-input\r\n          v-model=\"loginForm.username\"\r\n          placeholder=\"用户名\"\r\n          type=\"text\"\r\n          auto-complete=\"off\">\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          v-model=\"loginForm.password\"\r\n          placeholder=\"密码\"\r\n          type=\"password\"\r\n          auto-complete=\"off\"\r\n          @keyup.enter.native=\"handleLogin\">\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-button\r\n        :loading=\"loading\"\r\n        type=\"primary\"\r\n        style=\"width:100%;\"\r\n        @click.native.prevent=\"handleLogin\">\r\n        登录\r\n      </el-button>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      loading: false,\r\n      loginRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            this.loading = true\r\n            console.log('开始登录请求:', this.loginForm)\r\n            \r\n            const response = await this.$axios.post('/api/users/login', this.loginForm)\r\n            console.log('登录响应:', response.data)\r\n            \r\n            if (response.data.code === 200) {\r\n              // 先清除旧的登录信息\r\n              localStorage.clear()\r\n              \r\n              const { id, token, userType, username, realName, className } = response.data.data\r\n              \r\n              // 存储新的用户信息\r\n              localStorage.setItem('userId', id)\r\n              localStorage.setItem('token', token)\r\n              localStorage.setItem('userRole', userType)\r\n              localStorage.setItem('username', username)\r\n              localStorage.setItem('realName', realName)\r\n              localStorage.setItem('className', className)\r\n              \r\n              // 打印存储的信息用于调试\r\n              console.log('存储的用户信息:', {\r\n                userId: localStorage.getItem('userId'),\r\n                username: localStorage.getItem('username'),\r\n                userRole: localStorage.getItem('userRole')\r\n              })\r\n              \r\n              this.$message.success('登录成功')\r\n              \r\n              // 根据角色跳转\r\n              switch (userType) {\r\n                case 'STUDENT':\r\n                  this.$router.push('/student/home')\r\n                  break\r\n                case 'TEACHER':\r\n                  this.$router.push('/teacher/dashboard')\r\n                  break\r\n                case 'ADMIN':\r\n                  this.$router.push('/admin/dashboard')\r\n                  break\r\n                default:\r\n                  this.$router.push('/login')\r\n              }\r\n            } else {\r\n              this.$message.error(response.data.message || '登录失败')\r\n            }\r\n          } catch (error) {\r\n            console.error('登录失败:', error)\r\n            this.$message.error(error.response?.data?.message || '登录失败')\r\n          } finally {\r\n            this.loading = false\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #2d3a4b;\r\n  \r\n  .login-form {\r\n    width: 400px;\r\n    padding: 30px;\r\n    background: white;\r\n    border-radius: 5px;\r\n    \r\n    .title {\r\n      text-align: center;\r\n      margin-bottom: 30px;\r\n      color: #333;\r\n    }\r\n  }\r\n}\r\n</style> "]}]}