{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\Profile.vue?vue&type=style&index=0&id=4689240b&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\Profile.vue","mtime":1742532802670},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741947006026},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucHJvZmlsZSB7DQogIHBhZGRpbmc6IDIwcHg7DQogIA0KICAucHJvZmlsZS1jYXJkLCAucGFzc3dvcmQtY2FyZCB7DQogICAgbWF4LXdpZHRoOiA2MDBweDsNCiAgICBtYXJnaW46IDAgYXV0byAyMHB4Ow0KICAgIA0KICAgIC5lbC1mb3JtIHsNCiAgICAgIHBhZGRpbmc6IDIwcHggMjBweCAwOw0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";AA2JA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Profile.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\r\n  <div class=\"profile\">\r\n    <el-card class=\"profile-card\">\r\n      <div slot=\"header\">\r\n        <span>个人信息</span>\r\n      </div>\r\n      <el-form :model=\"userForm\" :rules=\"rules\" ref=\"userForm\" label-width=\"100px\">\r\n        <el-form-item label=\"学号\" prop=\"studentNumber\">\r\n          <el-input v-model=\"userForm.studentNumber\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"realName\">\r\n          <el-input v-model=\"userForm.realName\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"班级\" prop=\"className\">\r\n          <el-input v-model=\"userForm.className\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"userForm.email\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phone\">\r\n          <el-input v-model=\"userForm.phone\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"updateProfile\">保存修改</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n\r\n    <el-card class=\"password-card\">\r\n      <div slot=\"header\">\r\n        <span>修改密码</span>\r\n      </div>\r\n      <el-form :model=\"passwordForm\" :rules=\"passwordRules\" ref=\"passwordForm\" label-width=\"100px\">\r\n        <el-form-item label=\"原密码\" prop=\"oldPassword\">\r\n          <el-input type=\"password\" v-model=\"passwordForm.oldPassword\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"新密码\" prop=\"newPassword\">\r\n          <el-input type=\"password\" v-model=\"passwordForm.newPassword\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\" prop=\"confirmPassword\">\r\n          <el-input type=\"password\" v-model=\"passwordForm.confirmPassword\" show-password></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"updatePassword\">修改密码</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'StudentProfile',\r\n  data() {\r\n    // 密码确认验证\r\n    const validateConfirmPassword = (rule, value, callback) => {\r\n      if (value !== this.passwordForm.newPassword) {\r\n        callback(new Error('两次输入的密码不一致'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    \r\n    return {\r\n      userForm: {\r\n        studentNumber: '',\r\n        realName: '',\r\n        className: '',\r\n        email: '',\r\n        phone: ''\r\n      },\r\n      passwordForm: {\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: ''\r\n      },\r\n      rules: {\r\n        email: [\r\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n        ],\r\n        phone: [\r\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n        ]\r\n      },\r\n      passwordRules: {\r\n        oldPassword: [\r\n          { required: true, message: '请输入原密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n        ],\r\n        newPassword: [\r\n          { required: true, message: '请输入新密码', trigger: 'blur' },\r\n          { min: 6, message: '密码长度不能小于6位', trigger: 'blur' }\r\n        ],\r\n        confirmPassword: [\r\n          { required: true, message: '请确认新密码', trigger: 'blur' },\r\n          { validator: validateConfirmPassword, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchUserInfo()\r\n  },\r\n  methods: {\r\n    async fetchUserInfo() {\r\n      try {\r\n        const res = await this.$http.get('/api/student/info')\r\n        if (res.data.code === 200) {\r\n          const { real_name, student_number, class_name, email, phone } = res.data.data\r\n          this.userForm.realName = real_name\r\n          this.userForm.studentNumber = student_number\r\n          this.userForm.className = class_name\r\n          this.userForm.email = email || ''\r\n          this.userForm.phone = phone || ''\r\n        }\r\n      } catch (error) {\r\n        this.$message.error('获取用户信息失败')\r\n        console.error(error)\r\n      }\r\n    },\r\n    async updateProfile() {\r\n      try {\r\n        await this.$refs.userForm.validate()\r\n        const res = await this.$http.put('/api/student/profile', {\r\n          email: this.userForm.email,\r\n          phone: this.userForm.phone\r\n        })\r\n        if (res.data.code === 200) {\r\n          this.$message.success('个人信息更新成功')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(error.message || '更新失败')\r\n      }\r\n    },\r\n    async updatePassword() {\r\n      try {\r\n        await this.$refs.passwordForm.validate()\r\n        const res = await this.$http.put('/api/student/password', {\r\n          oldPassword: this.passwordForm.oldPassword,\r\n          newPassword: this.passwordForm.newPassword\r\n        })\r\n        if (res.data.code === 200) {\r\n          this.$message.success('密码修改成功，请重新登录')\r\n          localStorage.clear()\r\n          this.$router.push('/login')\r\n        }\r\n      } catch (error) {\r\n        this.$message.error(error.message || '修改密码失败')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.profile {\r\n  padding: 20px;\r\n  \r\n  .profile-card, .password-card {\r\n    max-width: 600px;\r\n    margin: 0 auto 20px;\r\n    \r\n    .el-form {\r\n      padding: 20px 20px 0;\r\n    }\r\n  }\r\n}\r\n</style> "]}]}