{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\DataReview.vue?vue&type=style&index=0&id=7f4f499c&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\DataReview.vue","mtime":1741789901019},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741355860000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kYXRhLXJldmlldyB7CiAgcGFkZGluZzogMjBweDsKfQoKLm9wZXJhdGlvbi1iYXIgewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5maWx0ZXItc2VjdGlvbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYTsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgoudGFibGUtY2FyZCB7CiAgbWFyZ2luLXRvcDogMjBweDsKfQoKLnBhZ2luYXRpb24tY29udGFpbmVyIHsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHRleHQtYWxpZ246IHJpZ2h0Owp9CgoucmV2aWV3LWluZm8gewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5yZXZpZXctZm9ybSB7CiAgbWFyZ2luLXRvcDogMjBweDsKfQoKLmFibm9ybWFsLXNjb3JlIHsKICBjb2xvcjogI2Y1NmM2YzsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLnJldmlldy1jb21tZW50IHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWF4LXdpZHRoOiAyMDBweDsKICBvdmVyZmxvdzogaGlkZGVuOwogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7Cn0KCi5lbC1kZXNjcmlwdGlvbnMgewogIG1hcmdpbjogMjBweCAwOwp9CgouZGV0YWlsLWNvbnRhaW5lciB7CiAgcGFkZGluZzogMjBweDsKfQoKLmhpc3RvcnktcmVjb3JkcyB7CiAgbWFyZ2luLXRvcDogMjBweDsKfQoKLmhpc3RvcnktcmVjb3JkcyBoMyB7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKICBmb250LXNpemU6IDE2cHg7CiAgY29sb3I6ICM2MDYyNjY7Cn0KCi8qIOa3u+WKoOaMiemSrumXtOi3nSAqLwouZWwtYnV0dG9uICsgLmVsLWJ1dHRvbiB7CiAgbWFyZ2luLWxlZnQ6IDhweDsKfQoKLyog5Y+v6YCJ77ya6byg5qCH5oKs5YGc5pWI5p6cICovCi5lbC1idXR0b24uaXMtY2lyY2xlOmhvdmVyIHsKICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7CiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnM7Cn0K"},{"version":3,"sources":["DataReview.vue"],"names":[],"mappings":";AA6xBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"DataReview.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"data-review\">\n    <!-- 顶部操作栏 -->\n    <div class=\"operation-bar\">\n      <el-button type=\"primary\" @click=\"handleAdd\">\n        <i class=\"el-icon-plus\"></i> 录入成绩\n      </el-button>\n      <el-button type=\"success\" @click=\"handleExport\">\n        <i class=\"el-icon-download\"></i> 导出数据\n      </el-button>\n    </div>\n\n   <!-- 搜索筛选区 -->\n<div class=\"filter-section\">\n  <el-form :inline=\"true\" :model=\"queryParams\" ref=\"queryForm\">\n    <el-form-item label=\"测试项目\">\n      <el-select v-model=\"queryParams.sportsItemId\" placeholder=\"选择测试项目\" clearable>\n        <el-option\n          v-for=\"item in sportsItems\"\n          :key=\"item.id\"\n          :label=\"item.name\"\n          :value=\"item.id\"\n        ></el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"状态\">\n      <el-select v-model=\"queryParams.status\" placeholder=\"选择状态\" clearable>\n        <el-option label=\"待审核\" value=\"PENDING\"></el-option>\n        <el-option label=\"已通过\" value=\"APPROVED\"></el-option>\n        <el-option label=\"已驳回\" value=\"REJECTED\"></el-option>\n      </el-select>\n    </el-form-item>\n    <el-form-item label=\"关键字\">\n      <el-input \n        v-model=\"queryParams.keyword\" \n        placeholder=\"学生/教师姓名\"\n        clearable\n      ></el-input>\n    </el-form-item>\n    <el-form-item>\n      <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n      <el-button @click=\"resetQuery\">重置</el-button>\n    </el-form-item>\n  </el-form>\n</div>\n\n    <!-- 数据表格 -->\n    <el-card class=\"table-card\">\n      <!-- 数据表格部分 -->\n    <el-table\n      v-loading=\"loading\"\n      :data=\"tableData\"\n      border\n      stripe\n      style=\"width: 100%\"\n    >\n      <el-table-column type=\"index\" label=\"序号\" width=\"60\" align=\"center\"></el-table-column>\n      \n      <el-table-column label=\"学生姓名\" prop=\"student.realName\" min-width=\"120\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.student ? scope.row.student.realName : '-' }}\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"学生学号\" prop=\"studentNumber\" min-width=\"120\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.student ? scope.row.student.studentNumber : '-' }}\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"班级\" prop=\"className\" min-width=\"120\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.className }}\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"测试项目\" prop=\"sportsItem.name\" min-width=\"120\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.sportsItem ? scope.row.sportsItem.name : '-' }}\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"成绩\" min-width=\"120\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span :class=\"{ 'abnormal-score': scope.row.isAbnormal }\">\n            {{ scope.row.score }}{{ scope.row.sportsItem?.unit || '' }}\n          </span>\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"状态\" width=\"100\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"getStatusType(scope.row.status)\">\n            {{ getStatusText(scope.row.status) }}\n          </el-tag>\n        </template>\n      </el-table-column>\n\n      <el-table-column label=\"操作\" width=\"140\" fixed=\"right\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-tooltip content=\"审核\" placement=\"top\" :disabled=\"!canReview(scope.row)\">\n            <el-button\n              v-if=\"canReview(scope.row)\"\n              type=\"primary\"\n              icon=\"el-icon-check\"\n              size=\"mini\"\n              circle\n              @click=\"handleReview(scope.row)\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip content=\"修改\" placement=\"top\" :disabled=\"!canModify(scope.row)\">\n            <el-button\n              v-if=\"canModify(scope.row)\"\n              type=\"warning\"\n              icon=\"el-icon-edit\"\n              size=\"mini\"\n              circle\n              @click=\"handleModify(scope.row)\"\n            ></el-button>\n          </el-tooltip>\n          <el-tooltip content=\"详情\" placement=\"top\">\n            <el-button\n              type=\"info\"\n              icon=\"el-icon-view\"\n              size=\"mini\"\n              circle\n              @click=\"handleDetail(scope.row)\"\n            ></el-button>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page.sync=\"queryParams.pageNum\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"queryParams.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n        </el-pagination>\n      </div>\n    </el-card>\n\n  <!-- 录入成绩对话框 -->\n  <el-dialog \n    title=\"录入成绩\" \n    :visible.sync=\"addDialog.visible\" \n    width=\"400px\"\n    @closed=\"handleDialogClosed\"\n  >\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"recordForm\" label-width=\"80px\">\n      <!-- 学生选择 -->\n      <el-form-item label=\"学生\" prop=\"studentId\">\n        <el-select \n          v-model=\"form.studentId\" \n          placeholder=\"请选择学生\" \n          filterable\n          remote\n          :remote-method=\"searchStudents\"\n          :loading=\"studentLoading\"\n          style=\"width: 100%\"\n        >\n          <el-option\n            v-for=\"student in students\"\n            :key=\"student.id\"\n            :label=\"student.realName\"\n            :value=\"student.id\"\n          >\n            <span>{{ student.realName }}</span>\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">\n              {{ student.username }}\n            </span>\n          </el-option>\n        </el-select>\n      </el-form-item>\n\n      <!-- 测试项目选择 -->\n      <el-form-item label=\"测试项目\" prop=\"sportsItemId\">\n        <el-select \n          v-model=\"form.sportsItemId\" \n          placeholder=\"请选择项目\"\n          @change=\"handleSportsItemChange\"\n          style=\"width: 100%\"\n        >\n          <el-option\n            v-for=\"item in sportsItems\"\n            :key=\"item.id\"\n            :label=\"item.name\"\n            :value=\"item.id\"\n          >\n            <span>{{ item.name }}</span>\n            <span style=\"float: right; color: #8492a6; font-size: 13px\">\n              {{ item.unit }}\n            </span>\n          </el-option>\n        </el-select>\n      </el-form-item>\n\n      <!-- 成绩输入 -->\n      <el-form-item label=\"成绩\" prop=\"score\">\n        <div style=\"display: flex; align-items: center;\">\n          <el-input-number \n            v-model=\"form.score\" \n            :precision=\"2\"\n            :step=\"0.1\"\n            :min=\"0\"\n            controls-position=\"right\"\n            style=\"width: 160px;\"\n          ></el-input-number>\n          <span style=\"margin-left: 10px; color: #606266;\">{{ selectedItemUnit }}</span>\n        </div>\n      </el-form-item>\n\n      <!-- 班级选择 -->\n      <el-form-item label=\"班级\" prop=\"className\">\n        <el-select v-model=\"form.className\" placeholder=\"请选择班级\" style=\"width: 100%\">\n          <el-option\n            v-for=\"className in classList\"\n            :key=\"className\"\n            :label=\"className\"\n            :value=\"className\"\n          ></el-option>\n        </el-select>\n      </el-form-item>\n    </el-form>\n\n    <!-- 对话框底部按钮 -->\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"addDialog.visible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n    </div>\n  </el-dialog>\n\n    <!-- 审核对话框 -->\n    <el-dialog \n      title=\"成绩审核\" \n      :visible.sync=\"reviewDialog.visible\" \n      width=\"500px\"\n    >\n      <div class=\"review-info\" v-if=\"currentRecord\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"学生\">{{ currentRecord.student ? currentRecord.student.realName : '-' }} ({{ currentRecord.studentNumber || '-' }})</el-descriptions-item>\n          <el-descriptions-item label=\"测试项目\">{{ currentRecord.sportsItem ? currentRecord.sportsItem.name : '-' }}</el-descriptions-item>\n          <el-descriptions-item label=\"测试成绩\">{{ currentRecord.score || '-' }} {{ currentRecord.sportsItem ? currentRecord.sportsItem.unit : '' }}</el-descriptions-item>\n          <el-descriptions-item label=\"班级\">{{ currentRecord.className || '-' }}</el-descriptions-item>\n          <el-descriptions-item label=\"录入教师\">{{ currentRecord.teacher ? currentRecord.teacher.realName : '-' }}</el-descriptions-item>\n          <el-descriptions-item label=\"录入时间\">{{ formatDateTime(currentRecord.createdAt) }}</el-descriptions-item>\n        </el-descriptions>\n      </div>\n      <el-form :model=\"reviewForm\" ref=\"reviewForm\" :rules=\"reviewRules\" class=\"review-form\">\n        <el-form-item label=\"审核结果\" prop=\"status\">\n          <el-radio-group v-model=\"reviewForm.status\">\n            <el-radio label=\"APPROVED\">通过</el-radio>\n            <el-radio label=\"REJECTED\">驳回</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"审核意见\" prop=\"comment\">\n          <el-input \n            type=\"textarea\" \n            v-model=\"reviewForm.comment\"\n            :rows=\"3\"\n            placeholder=\"请输入审核意见\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"reviewDialog.visible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitReview\">确定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 详情对话框 -->\n    <el-dialog \n      title=\"成绩详情\" \n      :visible.sync=\"detailDialog.visible\" \n      width=\"600px\"\n    >\n      <div v-if=\"currentRecord\" class=\"detail-container\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"学生姓名\">\n            {{ currentRecord.student ? currentRecord.student.realName : '-' }} ({{ currentRecord.studentNumber || '-' }})\n          </el-descriptions-item>\n          <el-descriptions-item label=\"学号\">\n            {{ currentRecord.student ? currentRecord.student.username : '-' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"班级\">\n            {{ currentRecord.className || '-' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"测试项目\">\n            {{ currentRecord.sportsItem ? currentRecord.sportsItem.name : '-' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"测试成绩\">\n            {{ currentRecord.score || '-' }} {{ currentRecord.sportsItem ? currentRecord.sportsItem.unit : '' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"记录教师\">\n            {{ currentRecord.teacher ? currentRecord.teacher.realName : '-' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"审核状态\">\n            <el-tag :type=\"getStatusType(currentRecord.status)\">\n              {{ getStatusText(currentRecord.status) }}\n            </el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"审核时间\">\n            {{ formatDateTime(currentRecord.reviewTime) || '-' }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"审核意见\" :span=\"2\">\n            {{ currentRecord.reviewComment || '-' }}\n          </el-descriptions-item>\n        </el-descriptions>\n\n        <!-- 如果需要显示历史成绩，可以添加一个表格 -->\n        <div class=\"history-records\" v-if=\"historyRecords.length > 0\">\n          <h3>历史成绩记录</h3>\n          <el-table :data=\"historyRecords\" size=\"small\" border stripe>\n            <el-table-column label=\"测试时间\" align=\"center\">\n              <template slot-scope=\"scope\">\n                {{ formatDateTime(scope.row.testTime) }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"成绩\" align=\"center\">\n              <template slot-scope=\"scope\">\n                {{ scope.row.score || '-' }} {{ scope.row.sportsItem ? scope.row.sportsItem.unit : '' }}\n              </template>\n            </el-table-column>\n            <el-table-column label=\"状态\" align=\"center\">\n              <template slot-scope=\"scope\">\n                <el-tag :type=\"getStatusType(scope.row.status)\">\n                  {{ getStatusText(scope.row.status) }}\n                </el-tag>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </div>\n    </el-dialog>\n\n    <!-- 修改对话框 -->\n    <el-dialog \n      title=\"修改审核状态\" \n      :visible.sync=\"modifyDialog.visible\" \n      width=\"400px\"\n    >\n      <div class=\"review-info\">\n        <p>学生：{{ currentRecord ? currentRecord.student ? currentRecord.student.realName : '-' : '-' }} ({{ currentRecord ? currentRecord.studentNumber : '-' }})</p>\n        <p>项目：{{ currentRecord ? currentRecord.sportsItem ? currentRecord.sportsItem.name : '-' : '-' }}</p>\n        <p>成绩：{{ currentRecord ? currentRecord.score : '-' }} {{ currentRecord ? currentRecord.sportsItem ? currentRecord.sportsItem.unit : '' : '' }}</p>\n      </div>\n      <el-form :model=\"modifyForm\" :rules=\"modifyRules\" ref=\"modifyForm\" label-width=\"80px\">\n        <el-form-item label=\"审核状态\" prop=\"status\">\n          <el-select v-model=\"modifyForm.status\" placeholder=\"请选择审核状态\">\n            <el-option label=\"待审核\" value=\"PENDING\"></el-option>\n            <el-option label=\"通过\" value=\"APPROVED\"></el-option>\n            <el-option label=\"驳回\" value=\"REJECTED\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"审核意见\" prop=\"comment\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"modifyForm.comment\"\n            :rows=\"3\"\n            placeholder=\"请输入审核意见\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"modifyDialog.visible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitModify\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { \n  getTestRecords, \n  addTestRecord, \n  reviewTestRecord,\n  getHistoryRecords,\n  exportRecords,\n  downloadTemplate,\n  modifyReview\n} from '@/api/testRecord'\n\nexport default {\n  name: 'DataReview',\n  data() {\n    return {\n      loading: false,\n      tableData: [],\n      total: 0,\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        sportsItemId: undefined,\n        status: undefined,\n        keyword: ''\n      },\n      sportsItems: [],\n      classList: [],\n      addDialog: {\n        visible: false\n      },\n      form: {\n        studentId: null,\n        sportsItemId: null,\n        score: null,\n        className: null\n      },\n      rules: {\n        studentId: [\n          { required: true, message: '请选择学生', trigger: 'change' }\n        ],\n        sportsItemId: [\n          { required: true, message: '请选择测试项目', trigger: 'change' }\n        ],\n        score: [\n          { required: true, message: '请输入测试成绩', trigger: 'blur' },\n          { type: 'number', message: '成绩必须为数字', trigger: 'blur' }\n        ],\n        className: [\n          { required: true, message: '请选择班级', trigger: 'change' }\n        ]\n      },\n      teachers: [],\n      selectedItemUnit: '',\n      students: [],\n      reviewDialog: {\n        visible: false\n      },\n      currentRecord: null,\n      reviewForm: {\n        id: null,\n        status: '',\n        comment: ''\n      },\n      reviewRules: {\n        status: [{ required: true, message: '请选择审核结果', trigger: 'change' }],\n        comment: [{ required: true, message: '请输入审核意见', trigger: 'blur' }]\n      },\n      studentLoading: false,\n      detailDialog: {\n        visible: false\n      },\n      historyRecords: [],\n      modifyDialog: {\n        visible: false\n      },\n      modifyForm: {\n        id: null,\n        status: '',\n        comment: ''\n      },\n      modifyRules: {\n        status: [{ required: true, message: '请选择审核状态', trigger: 'change' }],\n        comment: [{ required: true, message: '请输入审核意见', trigger: 'blur' }]\n      },\n    }\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    async init() {\n      await Promise.all([\n        this.getSportsItems(),\n        this.getClassList(),\n        this.getList()\n      ])\n    },\n    async getList() {\n      try {\n        this.loading = true\n        const res = await this.$http.get('/api/admin/data-review/list', {\n          params: {\n            page: this.queryParams.pageNum - 1,\n            size: this.queryParams.pageSize,\n            sportsItemId: this.queryParams.sportsItemId,\n            status: this.queryParams.status,\n            keyword: this.queryParams.keyword\n          }\n        })\n        console.log('Response:', res.data)\n        if (res.data.code === 200) {\n          this.tableData = res.data.data.content || []\n          this.total = res.data.data.totalElements || 0\n        } else {\n          this.$message.error(res.data.message || '获取数据失败')\n        }\n      } catch (error) {\n        console.error('获取列表失败:', error)\n        this.$message.error('获取列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    async getSportsItems() {\n      try {\n        const res = await this.$http.get('/api/admin/sports-items', {\n          params: {\n            page: 0,\n            size: 100\n          }\n        })\n        if (res.data.code === 200) {\n          this.sportsItems = res.data.data.content || []\n        }\n      } catch (error) {\n        console.error('获取体测项目列表失败:', error)\n        this.$message.error('获取体测项目列表失败')\n      }\n    },\n    handleQuery() {\n      this.queryParams.pageNum = 1\n      this.getList()\n    },\n    resetQuery() {\n      this.$refs.queryForm.resetFields()\n      this.queryParams = {\n        pageNum: 1,\n        pageSize: 10,\n        sportsItemId: undefined,\n        status: undefined,\n        keyword: ''\n      }\n      this.getList()\n    },\n    handleSizeChange(val) {\n      this.queryParams.pageSize = val\n      this.getList()\n    },\n    handleCurrentChange(val) {\n      this.queryParams.pageNum = val\n      this.getList()\n    },\n    getStatusType(status) {\n      const statusMap = {\n        'PENDING': 'warning',\n        'APPROVED': 'success',\n        'REJECTED': 'danger'\n      }\n      return statusMap[status] || 'info'\n    },\n    getStatusText(status) {\n      const statusMap = {\n        'PENDING': '待审核',\n        'APPROVED': '已通过',\n        'REJECTED': '已驳回'\n      }\n      return statusMap[status] || '未知'\n    },\n    handleAdd() {\n      this.addDialog.visible = true\n      this.resetForm()\n    },\n    resetForm() {\n      this.$nextTick(() => {\n        if (this.$refs.recordForm) {\n          this.$refs.recordForm.resetFields()\n        }\n        this.form = {\n          studentId: null,\n          sportsItemId: null,\n          score: null,\n          className: null\n        }\n        this.selectedItemUnit = ''\n      })\n    },\n    handleDialogClosed() {\n      this.resetForm()\n    },\n    submitForm() {\n      this.$refs.recordForm.validate(async (valid) => {\n        if (valid) {\n          try {\n            const data = {\n              studentId: this.form.studentId,\n              sportsItemId: this.form.sportsItemId,\n              score: Number(this.form.score),\n              className: this.form.className,\n              teacherId: JSON.parse(localStorage.getItem('user')).id\n            }\n\n            const res = await addTestRecord(data)\n            if (res.data.code === 200) {\n              this.$message.success('成绩录入成功')\n              this.addDialog.visible = false\n              this.getList()\n            } else {\n              this.$message.error(res.data.message || '录入失败')\n            }\n          } catch (error) {\n            console.error('录入成绩失败:', error)\n            this.$message.error(error.response?.data?.message || '录入成绩失败')\n          }\n        }\n      })\n    },\n    async getTeachers() {\n      try {\n        const res = await this.$http.get('/api/admin/users', {\n          params: { userType: 'TEACHER' }\n        })\n        if (res.data.code === 200) {\n          this.teachers = res.data.data.content\n        }\n      } catch (error) {\n        console.error('获取教师列表失败:', error)\n      }\n    },\n    async getStudents() {\n      try {\n        const res = await this.$http.get('/api/admin/users', {\n          params: { userType: 'STUDENT' }\n        })\n        if (res.data.code === 200) {\n          this.students = res.data.data.content\n        }\n      } catch (error) {\n        console.error('获取学生列表失败:', error)\n      }\n    },\n    async handleExport() {\n      // 构建查询参数\n      const params = {\n        status: this.queryParams.status,\n        teacherId: this.queryParams.teacherId,\n        sportsItemId: this.queryParams.sportsItemId\n      }\n      \n      // 构建查询字符串\n      const queryString = Object.entries(params)\n        .filter(([_, value]) => value != null && value !== '')\n        .map(([key, value]) => `${key}=${value}`)\n        .join('&')\n      \n      // 下载文件\n      window.location.href = `/api/admin/test-record/export${queryString ? '?' + queryString : ''}`\n    },\n    handleSportsItemChange(value) {\n      const selectedItem = this.sportsItems.find(item => item.id === value)\n      if (selectedItem) {\n        this.selectedItemUnit = selectedItem.unit\n        console.log('选中的项目:', selectedItem)\n      } else {\n        this.selectedItemUnit = ''\n      }\n      this.form.score = null\n    },\n    handleReview(row) {\n      this.currentRecord = { ...row }; // 创建副本以避免直接修改\n      this.reviewForm = {\n        id: row.id,\n        status: '',\n        comment: ''\n      };\n      this.reviewDialog.visible = true;\n    },\n    async handleDetail(row) {\n      this.currentRecord = { ...row }; // 创建副本以避免直接修改\n      this.detailDialog.visible = true;\n      \n      try {\n        const res = await getHistoryRecords({\n          studentNumber: row.studentNumber,\n          sportsItemId: row.sportsItemId,\n          excludeId: row.id\n        });\n        \n        if (res.data.code === 200) {\n          this.historyRecords = res.data.data;\n        } else {\n          this.$message.warning(res.data.msg || '获取历史记录失败');\n          this.historyRecords = [];\n        }\n      } catch (error) {\n        console.error('获取历史记录失败:', error);\n        this.$message.error('获取历史记录失败');\n        this.historyRecords = [];\n      }\n    },\n    submitReview() {\n      this.$refs.reviewForm.validate(async (valid) => {\n        if (valid) {\n          try {\n            const data = {\n              id: this.currentRecord.id,\n              status: this.reviewForm.status,\n              reviewComment: this.reviewForm.comment\n            };\n\n            const res = await reviewTestRecord(data);\n            if (res.data.code === 200) {\n              this.$message.success('审核成功');\n              this.reviewDialog.visible = false;\n              this.getList();\n            } else {\n              this.$message.error(res.data.msg || '审核失败');\n            }\n          } catch (error) {\n            console.error('审核失败:', error);\n            this.$message.error('审核失败');\n          }\n        }\n      });\n    },\n    canReview(record) {\n      return record.status === 'PENDING' || record.status === 'REJECTED'\n    },\n    searchStudents(query) {\n      this.studentLoading = true\n      this.$http.get('/api/admin/users', {\n        params: {\n          userType: 'STUDENT',\n          realName: query\n        }\n      }).then(res => {\n        if (res.data.code === 200) {\n          this.students = res.data.data.content\n        }\n        this.studentLoading = false\n      }).catch(error => {\n        console.error('获取学生列表失败:', error)\n        this.studentLoading = false\n      })\n    },\n    formatDateTime(dateTime) {\n      if (!dateTime) return '-'\n      const date = new Date(dateTime)\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      })\n    },\n    handleModify(row) {\n      this.currentRecord = { ...row }; // 创建副本以避免直接修改\n      this.modifyForm = {\n        id: row.id,\n        status: row.status,\n        comment: row.reviewComment || ''\n      };\n      this.modifyDialog.visible = true;\n    },\n    submitModify() {\n      this.$refs.modifyForm.validate(async (valid) => {\n        if (valid) {\n          try {\n            const data = {\n              id: this.currentRecord.id,\n              status: this.modifyForm.status,\n              reviewComment: this.modifyForm.comment\n            };\n\n            const res = await modifyReview(data);\n            if (res.data.code === 200) {\n              this.$message.success('修改成功');\n              this.modifyDialog.visible = false;\n              this.getList();\n            } else {\n              this.$message.error(res.data.msg || '修改失败');\n            }\n          } catch (error) {\n            console.error('修改失败:', error);\n            this.$message.error('修改失败');\n          }\n        }\n      });\n    },\n    canModify(row) {\n      // 已审核的记录可以修改\n      return row.status === 'APPROVED' || row.status === 'REJECTED'\n    },\n    async getClassList() {\n      try {\n        const res = await this.$http.get('/api/admin/classes')\n        if (res.data.code === 200) {\n          this.classList = res.data.data || []\n        }\n      } catch (error) {\n        console.error('获取班级列表失败:', error)\n        this.$message.error('获取班级列表失败')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.data-review {\n  padding: 20px;\n}\n\n.operation-bar {\n  margin-bottom: 20px;\n}\n\n.filter-section {\n  background-color: #f5f7fa;\n  padding: 20px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n}\n\n.table-card {\n  margin-top: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.review-info {\n  margin-bottom: 20px;\n}\n\n.review-form {\n  margin-top: 20px;\n}\n\n.abnormal-score {\n  color: #f56c6c;\n  font-weight: bold;\n}\n\n.review-comment {\n  display: inline-block;\n  max-width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.el-descriptions {\n  margin: 20px 0;\n}\n\n.detail-container {\n  padding: 20px;\n}\n\n.history-records {\n  margin-top: 20px;\n}\n\n.history-records h3 {\n  margin-bottom: 15px;\n  font-size: 16px;\n  color: #606266;\n}\n\n/* 添加按钮间距 */\n.el-button + .el-button {\n  margin-left: 8px;\n}\n\n/* 可选：鼠标悬停效果 */\n.el-button.is-circle:hover {\n  transform: scale(1.1);\n  transition: transform 0.2s;\n}\n</style> "]}]}