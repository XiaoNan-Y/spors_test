{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\TestScores.vue?vue&type=style&index=0&id=6d50c03e&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\TestScores.vue","mtime":1742395302054},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50ZXN0LXNjb3JlcyB7CiAgcGFkZGluZzogMjBweDsKfQouc2VhcmNoLWZvcm0gewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0K"},{"version":3,"sources":["TestScores.vue"],"names":[],"mappings":";AAgSA;AACA;AACA;AACA;AACA;AACA","file":"TestScores.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\n  <div class=\"test-scores\">\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <span>体测成绩</span>\n        <el-button \n          type=\"primary\" \n          size=\"small\" \n          style=\"float: right; margin-left: 10px;\"\n          @click=\"handleSubmitScore\"\n        >\n          提交成绩\n        </el-button>\n      </div>\n\n      <!-- 搜索表单 -->\n      <el-form :inline=\"true\" :model=\"queryParams\" class=\"search-form\">\n        <el-form-item label=\"测试项目\">\n          <el-select v-model=\"queryParams.sportsItemId\" placeholder=\"请选择\" clearable>\n            <el-option\n              v-for=\"item in sportsItems\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"状态\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"请选择\" clearable>\n            <el-option label=\"待审核\" value=\"PENDING\" />\n            <el-option label=\"已通过\" value=\"APPROVED\" />\n            <el-option label=\"已驳回\" value=\"REJECTED\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n\n      <!-- 成绩列表 -->\n      <el-table\n        v-loading=\"loading\"\n        :data=\"scoreList\"\n        style=\"width: 100%\"\n      >\n        <el-table-column label=\"测试项目\" prop=\"sportsItem.name\" />\n        <el-table-column label=\"成绩\" prop=\"score\" />\n        <el-table-column label=\"状态\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"提交时间\" prop=\"createdAt\">\n          <template slot-scope=\"scope\">\n            {{ formatDate(scope.row.createdAt) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"审核意见\" prop=\"reviewComment\" />\n        <el-table-column label=\"操作\" width=\"150\">\n          <template slot-scope=\"scope\">\n            <el-button\n              size=\"mini\"\n              type=\"text\"\n              @click=\"handleDetail(scope.row)\"\n            >\n              详情\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <pagination\n        v-show=\"total > 0\"\n        :total=\"total\"\n        :page.sync=\"queryParams.page\"\n        :limit.sync=\"queryParams.size\"\n        @pagination=\"getList\"\n      />\n\n      <!-- 提交成绩对话框 -->\n      <el-dialog :title=\"'提交体测成绩'\" :visible.sync=\"submitDialog.visible\" width=\"500px\">\n        <el-form ref=\"submitForm\" :model=\"submitForm\" :rules=\"rules\" label-width=\"80px\">\n          <el-form-item label=\"测试项目\" prop=\"sportsItemId\">\n            <el-select v-model=\"submitForm.sportsItemId\" placeholder=\"请选择测试项目\">\n              <el-option\n                v-for=\"item in sportsItems\"\n                :key=\"item.id\"\n                :label=\"item.name\"\n                :value=\"item.id\"\n              />\n            </el-select>\n          </el-form-item>\n          <el-form-item label=\"成绩\" prop=\"score\">\n            <el-input-number \n              v-model=\"submitForm.score\" \n              :precision=\"2\" \n              :step=\"0.1\" \n              :min=\"0\"\n            />\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\" class=\"dialog-footer\">\n          <el-button @click=\"submitDialog.visible = false\">取 消</el-button>\n          <el-button type=\"primary\" @click=\"submitScore\">确 定</el-button>\n        </div>\n      </el-dialog>\n\n      <!-- 详情对话框 -->\n      <el-dialog title=\"成绩详情\" :visible.sync=\"detailDialog.visible\" width=\"600px\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"测试项目\">{{ detailDialog.data.sportsItem?.name }}</el-descriptions-item>\n          <el-descriptions-item label=\"成绩\">{{ detailDialog.data.score }}</el-descriptions-item>\n          <el-descriptions-item label=\"状态\">\n            <el-tag :type=\"getStatusType(detailDialog.data.status)\">\n              {{ getStatusText(detailDialog.data.status) }}\n            </el-tag>\n          </el-descriptions-item>\n          <el-descriptions-item label=\"提交时间\">{{ formatDate(detailDialog.data.createdAt) }}</el-descriptions-item>\n          <el-descriptions-item label=\"审核时间\" :span=\"2\">{{ formatDate(detailDialog.data.reviewTime) }}</el-descriptions-item>\n          <el-descriptions-item label=\"审核意见\" :span=\"2\">{{ detailDialog.data.reviewComment || '无' }}</el-descriptions-item>\n        </el-descriptions>\n      </el-dialog>\n    </el-card>\n  </div>\n</template>\n\n<script>\nimport { getTestRecords, submitTestRecord } from '@/api/student'\nimport { getSportsItems } from '@/api/common'\nimport { formatDate } from '@/utils/date'\nimport Pagination from '@/components/Pagination'\n\nexport default {\n  name: 'StudentTestScores',\n  components: { Pagination },\n  data() {\n    return {\n      loading: false,\n      // 查询参数\n      queryParams: {\n        page: 1,\n        size: 10,\n        sportsItemId: undefined,\n        status: undefined\n      },\n      // 成绩列表\n      scoreList: [],\n      // 总记录数\n      total: 0,\n      // 体育项目列表\n      sportsItems: [],\n      // 提交对话框\n      submitDialog: {\n        visible: false\n      },\n      // 提交表单\n      submitForm: {\n        sportsItemId: undefined,\n        score: undefined\n      },\n      // 表单校验规则\n      rules: {\n        sportsItemId: [\n          { required: true, message: '请选择测试项目', trigger: 'change' }\n        ],\n        score: [\n          { required: true, message: '请输入成绩', trigger: 'blur' }\n        ]\n      },\n      // 详情对话框\n      detailDialog: {\n        visible: false,\n        data: {}\n      }\n    }\n  },\n  created() {\n    this.getSportsItems()\n    this.getList()\n  },\n  methods: {\n    formatDate,\n    // 获取体育项目列表\n    async getSportsItems() {\n      try {\n        const res = await getSportsItems()\n        this.sportsItems = res.data.data\n      } catch (error) {\n        console.error('获取体育项目失败:', error)\n        this.$message.error('获取体育项目失败')\n      }\n    },\n    // 获取成绩列表\n    async getList() {\n      this.loading = true;\n      try {\n        const res = await getTestRecords({\n          page: this.queryParams.page - 1, // 前端页码从1开始，后端从0开始\n          size: this.queryParams.size,\n          sportsItemId: this.queryParams.sportsItemId,\n          status: this.queryParams.status\n        });\n        \n        console.log('Response:', res); // 添加调试日志\n        \n        if (res.code === 200) {\n          this.scoreList = res.data.content;\n          this.total = res.data.totalElements;\n        } else {\n          throw new Error(res.msg || '获取数据失败');\n        }\n      } catch (error) {\n        console.error('获取成绩列表失败:', error);\n        this.$message.error('获取成绩列表失败: ' + error.message);\n      }\n      this.loading = false;\n    },\n    // 查询按钮点击\n    handleQuery() {\n      this.queryParams.page = 1\n      this.getList()\n    },\n    // 重置按钮点击\n    resetQuery() {\n      this.queryParams = {\n        page: 1,\n        size: 10,\n        sportsItemId: undefined,\n        status: undefined\n      }\n      this.getList()\n    },\n    // 提交成绩按钮点击\n    handleSubmitScore() {\n      this.submitForm = {\n        sportsItemId: undefined,\n        score: undefined\n      }\n      this.submitDialog.visible = true\n    },\n    // 提交成绩\n    submitScore() {\n      this.$refs.submitForm.validate(async valid => {\n        if (valid) {\n          try {\n            await submitTestRecord(this.submitForm)\n            this.$message.success('提交成功')\n            this.submitDialog.visible = false\n            this.getList()\n          } catch (error) {\n            console.error('提交成绩失败:', error)\n            this.$message.error('提交成绩失败')\n          }\n        }\n      })\n    },\n    // 查看详情\n    handleDetail(row) {\n      this.detailDialog.data = row\n      this.detailDialog.visible = true\n    },\n    // 获取状态类型\n    getStatusType(status) {\n      const statusMap = {\n        PENDING: 'warning',\n        APPROVED: 'success',\n        REJECTED: 'danger'\n      }\n      return statusMap[status] || 'info'\n    },\n    // 获取状态文本\n    getStatusText(status) {\n      const statusMap = {\n        PENDING: '待审核',\n        APPROVED: '已通过',\n        REJECTED: '已驳回'\n      }\n      return statusMap[status] || status\n    }\n  }\n}\n</script>\n\n<style scoped>\n.test-scores {\n  padding: 20px;\n}\n.search-form {\n  margin-bottom: 20px;\n}\n</style> "]}]}