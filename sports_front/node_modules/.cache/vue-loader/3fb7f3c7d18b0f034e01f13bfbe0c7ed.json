<<<<<<< HEAD
{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\StudentManagement.vue?vue&type=style&index=0&id=7eadfdd4&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\StudentManagement.vue","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741355860000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zdHVkZW50LW1hbmFnZW1lbnQgewogIHBhZGRpbmc6IDIwcHg7Cn0KLm9wZXJhdGlvbi1iYXIgewogIG1hcmdpbi1ib3R0b206IDIwcHg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KLnBhZ2luYXRpb24gewogIG1hcmdpbi10b3A6IDIwcHg7CiAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0K"},{"version":3,"sources":["StudentManagement.vue"],"names":[],"mappings":";AA6PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StudentManagement.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"student-management\">\n    <div class=\"operation-bar\">\n      <el-input\n        v-model=\"searchKeyword\"\n        placeholder=\"请输入学生姓名或用户名\"\n        style=\"width: 200px\"\n        prefix-icon=\"el-icon-search\"\n        @keyup.enter.native=\"handleSearch\"\n      />\n      <el-button type=\"primary\" @click=\"handleAdd\">\n        <i class=\"el-icon-plus\"></i> 添加学生\n      </el-button>\n    </div>\n\n    <el-table\n      :data=\"studentList\"\n      border\n      stripe\n      style=\"width: 100%\"\n      v-loading=\"loading\"\n    >\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n      <el-table-column prop=\"username\" label=\"用户名\" width=\"120\" />\n      <el-table-column prop=\"realName\" label=\"姓名\" width=\"120\" />\n      <el-table-column prop=\"email\" label=\"邮箱\" />\n      <el-table-column prop=\"phone\" label=\"电话\" width=\"120\" />\n      <el-table-column label=\"操作\" width=\"250\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"primary\"\n            @click=\"handleEdit(scope.row)\"\n          >编辑</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"warning\"\n            @click=\"handleResetPassword(scope.row)\"\n          >重置密码</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"danger\"\n            @click=\"handleDelete(scope.row)\"\n          >删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <div class=\"pagination\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"currentPage\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n      />\n    </div>\n\n    <el-dialog\n      :title=\"dialogType === 'add' ? '添加学生' : '编辑学生'\"\n      :visible.sync=\"dialogVisible\"\n      width=\"500px\"\n    >\n      <el-form\n        :model=\"studentForm\"\n        :rules=\"rules\"\n        ref=\"studentForm\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"用户名\" prop=\"username\">\n          <el-input v-model=\"studentForm.username\" :disabled=\"dialogType === 'edit'\" />\n        </el-form-item>\n        <el-form-item label=\"姓名\" prop=\"realName\">\n          <el-input v-model=\"studentForm.realName\" />\n        </el-form-item>\n        <el-form-item label=\"邮箱\" prop=\"email\">\n          <el-input v-model=\"studentForm.email\" />\n        </el-form-item>\n        <el-form-item label=\"电话\" prop=\"phone\">\n          <el-input v-model=\"studentForm.phone\" />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'StudentManagement',\n  data() {\n    return {\n      searchKeyword: '',\n      studentList: [],\n      loading: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      dialogVisible: false,\n      dialogType: 'add', // 'add' or 'edit'\n      studentForm: {\n        username: '',\n        realName: '',\n        email: '',\n        phone: ''\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' },\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n        ],\n        realName: [\n          { required: true, message: '请输入姓名', trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n        ],\n        phone: [\n          { required: true, message: '请输入电话', trigger: 'blur' },\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.fetchStudentList()\n  },\n  methods: {\n    async fetchStudentList() {\n      try {\n        this.loading = true\n        const res = await this.$http.get('/api/admin/users', {\n          params: {\n            userType: 'STUDENT',\n            keyword: this.searchKeyword,\n            page: this.currentPage - 1,\n            size: this.pageSize\n          }\n        })\n        if (res.data.code === 200) {\n          if (Array.isArray(res.data.data)) {\n            this.studentList = res.data.data\n            this.total = res.data.data.length\n          } else if (res.data.data.content) {\n            this.studentList = res.data.data.content\n            this.total = res.data.data.totalElements\n          } else {\n            this.studentList = res.data.data\n            this.total = res.data.data.length\n          }\n        } else {\n          this.$message.error(res.data.msg || '获取学生列表失败')\n        }\n      } catch (error) {\n        console.error('获取学生列表失败:', error)\n        this.$message.error('获取学生列表失败: ' + error.message)\n      } finally {\n        this.loading = false\n      }\n    },\n    handleSearch() {\n      this.currentPage = 1\n      this.fetchStudentList()\n    },\n    handleAdd() {\n      this.dialogType = 'add'\n      this.studentForm = {\n        username: '',\n        realName: '',\n        email: '',\n        phone: ''\n      }\n      this.dialogVisible = true\n    },\n    handleEdit(row) {\n      this.dialogType = 'edit'\n      this.studentForm = { ...row }\n      this.dialogVisible = true\n    },\n    async handleSubmit() {\n      this.$refs.studentForm.validate(async valid => {\n        if (valid) {\n          try {\n            const url = this.dialogType === 'add' ? '/api/admin/users' : `/api/admin/users/${this.studentForm.id}`\n            const method = this.dialogType === 'add' ? 'post' : 'put'\n            const res = await this.$http[method](url, {\n              ...this.studentForm,\n              userType: 'STUDENT'\n            })\n            if (res.data.code === 200) {\n              this.$message.success(this.dialogType === 'add' ? '添加成功' : '更新成功')\n              this.dialogVisible = false\n              this.fetchStudentList()\n            } else {\n              this.$message.error(res.data.msg || '操作失败')\n            }\n          } catch (error) {\n            console.error('操作失败:', error)\n            this.$message.error(error.response?.data?.msg || '操作失败')\n          }\n        }\n      })\n    },\n    async handleDelete(row) {\n      try {\n        await this.$confirm('确认删除该学生吗？', '提示', {\n          type: 'warning'\n        })\n        const res = await this.$http.delete(`/api/admin/users/${row.id}`)\n        if (res.data.code === 200) {\n          this.$message.success('删除成功')\n          this.fetchStudentList()\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败')\n        }\n      }\n    },\n    async handleResetPassword(row) {\n      try {\n        await this.$confirm('确认重置该学生的密码吗？', '提示', {\n          type: 'warning'\n        })\n        const res = await this.$http.post(`/api/admin/users/${row.id}/reset-password`)\n        if (res.data.code === 200) {\n          this.$message.success('密码重置成功')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('密码重置失败')\n        }\n      }\n    },\n    handleSizeChange(val) {\n      this.pageSize = val\n      this.fetchStudentList()\n    },\n    handleCurrentChange(val) {\n      this.currentPage = val\n      this.fetchStudentList()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.student-management {\n  padding: 20px;\n}\n.operation-bar {\n  margin-bottom: 20px;\n  display: flex;\n  justify-content: space-between;\n}\n.pagination {\n  margin-top: 20px;\n  text-align: right;\n}\n</style> "]}]}
=======
{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\StudentManagement.vue?vue&type=style&index=0&id=7eadfdd4&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\StudentManagement.vue","mtime":1741333058392},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1739346864144},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1739346848643},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1739346863832},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739346865238},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1739346848059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc3R1ZGVudC1tYW5hZ2VtZW50IHsNCiAgcGFkZGluZzogMjBweDsNCn0NCi5vcGVyYXRpb24tYmFyIHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KfQ0KLnBhZ2luYXRpb24gew0KICBtYXJnaW4tdG9wOiAyMHB4Ow0KICB0ZXh0LWFsaWduOiByaWdodDsNCn0NCg=="},{"version":3,"sources":["StudentManagement.vue"],"names":[],"mappings":";AA6PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StudentManagement.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\r\n  <div class=\"student-management\">\r\n    <div class=\"operation-bar\">\r\n      <el-input\r\n        v-model=\"searchKeyword\"\r\n        placeholder=\"请输入学生姓名或用户名\"\r\n        style=\"width: 200px\"\r\n        prefix-icon=\"el-icon-search\"\r\n        @keyup.enter.native=\"handleSearch\"\r\n      />\r\n      <el-button type=\"primary\" @click=\"handleAdd\">\r\n        <i class=\"el-icon-plus\"></i> 添加学生\r\n      </el-button>\r\n    </div>\r\n\r\n    <el-table\r\n      :data=\"studentList\"\r\n      border\r\n      stripe\r\n      style=\"width: 100%\"\r\n      v-loading=\"loading\"\r\n    >\r\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\r\n      <el-table-column prop=\"username\" label=\"用户名\" width=\"120\" />\r\n      <el-table-column prop=\"realName\" label=\"姓名\" width=\"120\" />\r\n      <el-table-column prop=\"email\" label=\"邮箱\" />\r\n      <el-table-column prop=\"phone\" label=\"电话\" width=\"120\" />\r\n      <el-table-column label=\"操作\" width=\"250\" fixed=\"right\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"handleEdit(scope.row)\"\r\n          >编辑</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"warning\"\r\n            @click=\"handleResetPassword(scope.row)\"\r\n          >重置密码</el-button>\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"danger\"\r\n            @click=\"handleDelete(scope.row)\"\r\n          >删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <div class=\"pagination\">\r\n      <el-pagination\r\n        @size-change=\"handleSizeChange\"\r\n        @current-change=\"handleCurrentChange\"\r\n        :current-page=\"currentPage\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        :page-size=\"pageSize\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n      />\r\n    </div>\r\n\r\n    <el-dialog\r\n      :title=\"dialogType === 'add' ? '添加学生' : '编辑学生'\"\r\n      :visible.sync=\"dialogVisible\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form\r\n        :model=\"studentForm\"\r\n        :rules=\"rules\"\r\n        ref=\"studentForm\"\r\n        label-width=\"80px\"\r\n      >\r\n        <el-form-item label=\"用户名\" prop=\"username\">\r\n          <el-input v-model=\"studentForm.username\" :disabled=\"dialogType === 'edit'\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"姓名\" prop=\"realName\">\r\n          <el-input v-model=\"studentForm.realName\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"studentForm.email\" />\r\n        </el-form-item>\r\n        <el-form-item label=\"电话\" prop=\"phone\">\r\n          <el-input v-model=\"studentForm.phone\" />\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\">\r\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'StudentManagement',\r\n  data() {\r\n    return {\r\n      searchKeyword: '',\r\n      studentList: [],\r\n      loading: false,\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      dialogVisible: false,\r\n      dialogType: 'add', // 'add' or 'edit'\r\n      studentForm: {\r\n        username: '',\r\n        realName: '',\r\n        email: '',\r\n        phone: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' },\r\n          { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\r\n        ],\r\n        realName: [\r\n          { required: true, message: '请输入姓名', trigger: 'blur' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\r\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\r\n        ],\r\n        phone: [\r\n          { required: true, message: '请输入电话', trigger: 'blur' },\r\n          { pattern: /^1[3-9]\\d{9}$/, message: '请输入正确的手机号码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchStudentList()\r\n  },\r\n  methods: {\r\n    async fetchStudentList() {\r\n      try {\r\n        this.loading = true\r\n        const res = await this.$http.get('/api/admin/users', {\r\n          params: {\r\n            userType: 'STUDENT',\r\n            keyword: this.searchKeyword,\r\n            page: this.currentPage - 1,\r\n            size: this.pageSize\r\n          }\r\n        })\r\n        if (res.data.code === 200) {\r\n          if (Array.isArray(res.data.data)) {\r\n            this.studentList = res.data.data\r\n            this.total = res.data.data.length\r\n          } else if (res.data.data.content) {\r\n            this.studentList = res.data.data.content\r\n            this.total = res.data.data.totalElements\r\n          } else {\r\n            this.studentList = res.data.data\r\n            this.total = res.data.data.length\r\n          }\r\n        } else {\r\n          this.$message.error(res.data.msg || '获取学生列表失败')\r\n        }\r\n      } catch (error) {\r\n        console.error('获取学生列表失败:', error)\r\n        this.$message.error('获取学生列表失败: ' + error.message)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    handleSearch() {\r\n      this.currentPage = 1\r\n      this.fetchStudentList()\r\n    },\r\n    handleAdd() {\r\n      this.dialogType = 'add'\r\n      this.studentForm = {\r\n        username: '',\r\n        realName: '',\r\n        email: '',\r\n        phone: ''\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n    handleEdit(row) {\r\n      this.dialogType = 'edit'\r\n      this.studentForm = { ...row }\r\n      this.dialogVisible = true\r\n    },\r\n    async handleSubmit() {\r\n      this.$refs.studentForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            const url = this.dialogType === 'add' ? '/api/admin/users' : `/api/admin/users/${this.studentForm.id}`\r\n            const method = this.dialogType === 'add' ? 'post' : 'put'\r\n            const res = await this.$http[method](url, {\r\n              ...this.studentForm,\r\n              userType: 'STUDENT'\r\n            })\r\n            if (res.data.code === 200) {\r\n              this.$message.success(this.dialogType === 'add' ? '添加成功' : '更新成功')\r\n              this.dialogVisible = false\r\n              this.fetchStudentList()\r\n            } else {\r\n              this.$message.error(res.data.msg || '操作失败')\r\n            }\r\n          } catch (error) {\r\n            console.error('操作失败:', error)\r\n            this.$message.error(error.response?.data?.msg || '操作失败')\r\n          }\r\n        }\r\n      })\r\n    },\r\n    async handleDelete(row) {\r\n      try {\r\n        await this.$confirm('确认删除该学生吗？', '提示', {\r\n          type: 'warning'\r\n        })\r\n        const res = await this.$http.delete(`/api/admin/users/${row.id}`)\r\n        if (res.data.code === 200) {\r\n          this.$message.success('删除成功')\r\n          this.fetchStudentList()\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败')\r\n        }\r\n      }\r\n    },\r\n    async handleResetPassword(row) {\r\n      try {\r\n        await this.$confirm('确认重置该学生的密码吗？', '提示', {\r\n          type: 'warning'\r\n        })\r\n        const res = await this.$http.post(`/api/admin/users/${row.id}/reset-password`)\r\n        if (res.data.code === 200) {\r\n          this.$message.success('密码重置成功')\r\n        }\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('密码重置失败')\r\n        }\r\n      }\r\n    },\r\n    handleSizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchStudentList()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val\r\n      this.fetchStudentList()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.student-management {\r\n  padding: 20px;\r\n}\r\n.operation-bar {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.pagination {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n</style> "]}]}
>>>>>>> 9aa70dfb89326d075348adb786f9fca620904233
