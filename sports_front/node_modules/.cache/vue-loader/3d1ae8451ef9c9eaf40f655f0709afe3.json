{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\Login.vue","mtime":1742360412050},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9naW4tY29udGFpbmVyIHsNCiAgaGVpZ2h0OiAxMDB2aDsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGJhY2tncm91bmQtY29sb3I6ICNmM2YzZjM7DQp9DQoNCi5sb2dpbi1jYXJkIHsNCiAgd2lkdGg6IDQwMHB4Ow0KICBwYWRkaW5nOiAyMHB4Ow0KfQ0KDQoudGl0bGUgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIGZvbnQtc2l6ZTogMjZweDsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogIG1hcmdpbi1ib3R0b206IDMwcHg7DQogIGNvbG9yOiAjMzAzMTMzOw0KfQ0KDQoubG9naW4tZm9ybSB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQp9DQoNCi5lbC1mb3JtLWl0ZW0gew0KICBtYXJnaW4tYm90dG9tOiAyNXB4Ow0KfQ0KDQouZWwtaW5wdXQgew0KICBoZWlnaHQ6IDQwcHg7DQp9DQoNCi5lbC1idXR0b24gew0KICBoZWlnaHQ6IDQwcHg7DQp9DQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAoGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <div class=\"title\">体测系统</div>\r\n      <el-form\r\n        ref=\"loginForm\"\r\n        :model=\"loginForm\"\r\n        :rules=\"loginRules\"\r\n        label-width=\"0px\"\r\n        class=\"login-form\"\r\n      >\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            prefix-icon=\"el-icon-user\"\r\n            placeholder=\"用户名\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n            @keyup.enter.native=\"handleLogin\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button\r\n            :loading=\"loading\"\r\n            type=\"primary\"\r\n            style=\"width: 100%\"\r\n            @click.native.prevent=\"handleLogin\"\r\n          >\r\n            {{ loading ? '登录中...' : '登录' }}\r\n          </el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      loginRules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      },\r\n      loading: false\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            this.loading = true\r\n            const response = await this.$http.post('/api/auth/login', this.loginForm)\r\n            \r\n            if (response.data.code === 200) {\r\n              const { token, user } = response.data.data\r\n              // 保存token和用户信息\r\n              localStorage.setItem('token', token)\r\n              localStorage.setItem('user', JSON.stringify(user))\r\n              \r\n              // 根据用户类型跳转到不同的首页\r\n              const redirectPath = {\r\n                'STUDENT': '/student/dashboard',\r\n                'TEACHER': '/teacher/dashboard',\r\n                'ADMIN': '/admin/dashboard'\r\n              }[user.userType] || '/login'\r\n              \r\n              this.$router.push(redirectPath)\r\n              this.$message.success('登录成功')\r\n            }\r\n          } catch (error) {\r\n            console.error('登录失败:', error)\r\n            this.$message.error(error.message || '登录失败')\r\n          } finally {\r\n            this.loading = false\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f3f3f3;\r\n}\r\n\r\n.login-card {\r\n  width: 400px;\r\n  padding: 20px;\r\n}\r\n\r\n.title {\r\n  text-align: center;\r\n  font-size: 26px;\r\n  font-weight: bold;\r\n  margin-bottom: 30px;\r\n  color: #303133;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.el-input {\r\n  height: 40px;\r\n}\r\n\r\n.el-button {\r\n  height: 40px;\r\n}\r\n</style> "]}]}