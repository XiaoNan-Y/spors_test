{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\StudentRecords.vue?vue&type=style&index=0&id=bef733e4&lang=scss&scoped=true","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\StudentRecords.vue","mtime":1742806121814},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1741947006026},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zdHVkZW50LXJlY29yZHMgewogIHBhZGRpbmc6IDIwcHg7CgogIC5maWx0ZXItc2VjdGlvbiB7CiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIH0KCiAgLnBhZ2luYXRpb24tY29udGFpbmVyIHsKICAgIG1hcmdpbi10b3A6IDIwcHg7CiAgICB0ZXh0LWFsaWduOiByaWdodDsKICB9Cn0K"},{"version":3,"sources":["StudentRecords.vue"],"names":[],"mappings":";AA8bA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"StudentRecords.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\n  <div class=\"student-records\">\n    <!-- 搜索筛选区 -->\n    <div class=\"filter-section\">\n      <el-form :inline=\"true\" :model=\"queryParams\" ref=\"queryForm\">\n        <el-form-item label=\"班级\">\n          <el-select v-model=\"queryParams.className\" placeholder=\"选择班级\" clearable>\n            <el-option\n              v-for=\"className in classNames\"\n              :key=\"className\"\n              :label=\"className\"\n              :value=\"className\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"学号/姓名\">\n          <el-input \n            v-model=\"queryParams.keyword\" \n            placeholder=\"请输入学号或姓名\"\n            clearable\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <!-- 学生成绩表格 -->\n    <el-table\n      v-loading=\"loading\"\n      :data=\"tableData\"\n      style=\"width: 100%\"\n      border>\n      <el-table-column prop=\"studentNumber\" label=\"学号\" width=\"100\" fixed></el-table-column>\n      <el-table-column prop=\"studentName\" label=\"姓名\" width=\"100\" fixed></el-table-column>\n      <el-table-column prop=\"className\" label=\"班级\" width=\"120\" fixed></el-table-column>\n      \n      <!-- 50米跑 -->\n      <el-table-column label=\"50米跑\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <template v-if=\"scope.row.items['50米跑']\">\n            <template v-if=\"scope.row.items['50米跑'].status === 'EXEMPTED'\">\n              <el-tag type=\"info\">免测</el-tag>\n            </template>\n            <template v-else-if=\"scope.row.items['50米跑'].status === 'TESTED'\">\n              <span>{{ scope.row.items['50米跑'].score }}秒</span>\n              <el-button \n                type=\"text\" \n                size=\"small\" \n                @click=\"handleEdit(scope.row, '50米跑')\"\n              >修改</el-button>\n            </template>\n            <template v-else>\n              <el-button \n                type=\"primary\" \n                size=\"small\" \n                @click=\"handleAdd(scope.row, '50米跑')\"\n              >录入</el-button>\n            </template>\n          </template>\n        </template>\n      </el-table-column>\n\n      <!-- 立定跳远 -->\n      <el-table-column label=\"立定跳远\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <template v-if=\"scope.row.items['立定跳远']\">\n            <template v-if=\"scope.row.items['立定跳远'].status === 'EXEMPTED'\">\n              <el-tag type=\"info\">免测</el-tag>\n            </template>\n            <template v-else-if=\"scope.row.items['立定跳远'].status === 'TESTED'\">\n              <span>{{ scope.row.items['立定跳远'].score }}厘米</span>\n              <el-button \n                type=\"text\" \n                size=\"small\" \n                @click=\"handleEdit(scope.row, '立定跳远')\"\n              >修改</el-button>\n            </template>\n            <template v-else>\n              <el-button \n                type=\"primary\" \n                size=\"small\" \n                @click=\"handleAdd(scope.row, '立定跳远')\"\n              >录入</el-button>\n            </template>\n          </template>\n        </template>\n      </el-table-column>\n\n      <!-- 1000米跑 -->\n      <el-table-column label=\"1000米跑\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <template v-if=\"scope.row.items['1000米跑']\">\n            <template v-if=\"scope.row.items['1000米跑'].status === 'EXEMPTED'\">\n              <el-tag type=\"info\">免测</el-tag>\n            </template>\n            <template v-else-if=\"scope.row.items['1000米跑'].status === 'TESTED'\">\n              <span>{{ scope.row.items['1000米跑'].score }}分:秒</span>\n              <el-button \n                type=\"text\" \n                size=\"small\" \n                @click=\"handleEdit(scope.row, '1000米跑')\"\n              >修改</el-button>\n            </template>\n            <template v-else>\n              <el-button \n                type=\"primary\" \n                size=\"small\" \n                @click=\"handleAdd(scope.row, '1000米跑')\"\n              >录入</el-button>\n            </template>\n          </template>\n        </template>\n      </el-table-column>\n\n      <!-- 引体向上 -->\n      <el-table-column label=\"引体向上\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <template v-if=\"scope.row.items['引体向上']\">\n            <template v-if=\"scope.row.items['引体向上'].status === 'EXEMPTED'\">\n              <el-tag type=\"info\">免测</el-tag>\n            </template>\n            <template v-else-if=\"scope.row.items['引体向上'].status === 'TESTED'\">\n              <span>{{ scope.row.items['引体向上'].score }}个</span>\n              <el-button \n                type=\"text\" \n                size=\"small\" \n                @click=\"handleEdit(scope.row, '引体向上')\"\n              >修改</el-button>\n            </template>\n            <template v-else>\n              <el-button \n                type=\"primary\" \n                size=\"small\" \n                @click=\"handleAdd(scope.row, '引体向上')\"\n              >录入</el-button>\n            </template>\n          </template>\n        </template>\n      </el-table-column>\n\n      <!-- 仰卧起坐 -->\n      <el-table-column label=\"仰卧起坐\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <template v-if=\"scope.row.items['仰卧起坐']\">\n            <template v-if=\"scope.row.items['仰卧起坐'].status === 'EXEMPTED'\">\n              <el-tag type=\"info\">免测</el-tag>\n            </template>\n            <template v-else-if=\"scope.row.items['仰卧起坐'].status === 'TESTED'\">\n              <span>{{ scope.row.items['仰卧起坐'].score }}个/分钟</span>\n              <el-button \n                type=\"text\" \n                size=\"small\" \n                @click=\"handleEdit(scope.row, '仰卧起坐')\"\n              >修改</el-button>\n            </template>\n            <template v-else>\n              <el-button \n                type=\"primary\" \n                size=\"small\" \n                @click=\"handleAdd(scope.row, '仰卧起坐')\"\n              >录入</el-button>\n            </template>\n          </template>\n        </template>\n      </el-table-column>\n\n      <!-- 坐位体前屈 -->\n      <el-table-column label=\"坐位体前屈\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <template v-if=\"scope.row.items['坐位体前屈']\">\n            <template v-if=\"scope.row.items['坐位体前屈'].status === 'EXEMPTED'\">\n              <el-tag type=\"info\">免测</el-tag>\n            </template>\n            <template v-else-if=\"scope.row.items['坐位体前屈'].status === 'TESTED'\">\n              <span>{{ scope.row.items['坐位体前屈'].score }}厘米</span>\n              <el-button \n                type=\"text\" \n                size=\"small\" \n                @click=\"handleEdit(scope.row, '坐位体前屈')\"\n              >修改</el-button>\n            </template>\n            <template v-else>\n              <el-button \n                type=\"primary\" \n                size=\"small\" \n                @click=\"handleAdd(scope.row, '坐位体前屈')\"\n              >录入</el-button>\n            </template>\n          </template>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页器 -->\n    <div class=\"pagination-container\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryParams.page\"\n        :page-sizes=\"[10, 20, 50]\"\n        :page-size=\"queryParams.size\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n      </el-pagination>\n    </div>\n\n    <!-- 成绩录入/修改对话框 -->\n    <el-dialog\n      :title=\"dialogTitle\"\n      :visible.sync=\"dialogVisible\"\n      width=\"500px\"\n      @closed=\"handleDialogClosed\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"form\" label-width=\"100px\">\n        <el-form-item label=\"学生\" prop=\"studentName\">\n          <el-input v-model=\"form.studentName\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"项目\" prop=\"itemName\">\n          <el-input v-model=\"form.itemName\" disabled></el-input>\n        </el-form-item>\n        <el-form-item :label=\"'成绩(' + form.unit + ')'\" prop=\"score\">\n          <el-input v-model=\"form.score\" type=\"number\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleSubmit\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'StudentRecords',\n  data() {\n    return {\n      // 查询参数\n      queryParams: {\n        className: '',\n        keyword: '',\n        page: 1,\n        size: 10\n      },\n      // 班级列表\n      classNames: [],\n      // 表格数据\n      tableData: [],\n      // 总记录数\n      total: 0,\n      // 加载状态\n      loading: false,\n      // 对话框显示状态\n      dialogVisible: false,\n      // 对话框标题\n      dialogTitle: '',\n      // 表单数据\n      form: {\n        id: '',\n        studentId: '',\n        studentName: '',\n        itemName: '',\n        score: '',\n        unit: ''\n      },\n      // 表单验证规则\n      rules: {\n        score: [\n          { required: true, message: '请输入成绩', trigger: 'blur' },\n          { type: 'number', message: '成绩必须为数字', trigger: 'blur', transform: value => Number(value) }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getClassNames()\n    this.getList()\n  },\n  methods: {\n    // 获取班级列表\n    async getClassNames() {\n      try {\n        const response = await this.$http.get('/api/classes')\n        this.classNames = response.data.data\n      } catch (error) {\n        console.error('获取班级列表失败:', error)\n        this.$message.error('获取班级列表失败')\n      }\n    },\n\n    // 获取学生成绩列表\n    async getList() {\n      try {\n        this.loading = true\n        const response = await this.$http.get('/api/teacher/student-records', {\n          params: this.queryParams\n        })\n        \n        if (response.data.code === 200) {\n          // 处理返回的数据，按学生分组整理\n          this.processData(response.data.data.content)\n          this.total = response.data.data.totalElements\n        }\n      } catch (error) {\n        console.error('获取学生成绩列表失败:', error)\n        this.$message.error('获取学生成绩列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 处理数据，按学生分组\n    processData(records) {\n      const studentMap = new Map()\n      \n      records.forEach(record => {\n        const studentKey = record.studentNumber\n        if (!studentMap.has(studentKey)) {\n          studentMap.set(studentKey, {\n            studentNumber: record.studentNumber,\n            studentName: record.studentName,\n            className: record.className,\n            items: {}\n          })\n        }\n        \n        const student = studentMap.get(studentKey)\n        student.items[record.sportsItemName] = {\n          id: record.id,\n          score: record.score,\n          status: record.status,\n          unit: record.unit\n        }\n      })\n      \n      this.tableData = Array.from(studentMap.values())\n    },\n\n    // 查询按钮点击事件\n    handleQuery() {\n      this.queryParams.page = 1\n      this.getList()\n    },\n\n    // 重置按钮点击事件\n    resetQuery() {\n      this.$refs.queryForm.resetFields()\n      this.handleQuery()\n    },\n\n    // 每页大小改变事件\n    handleSizeChange(val) {\n      this.queryParams.size = val\n      this.getList()\n    },\n\n    // 页码改变事件\n    handleCurrentChange(val) {\n      this.queryParams.page = val\n      this.getList()\n    },\n\n    // 添加成绩按钮点击事件\n    handleAdd(row, itemName) {\n      this.dialogTitle = '录入成绩'\n      this.form = {\n        studentId: row.studentId,\n        studentName: row.studentName,\n        itemName: itemName,\n        score: '',\n        unit: this.getItemUnit(itemName)\n      }\n      this.dialogVisible = true\n    },\n\n    // 修改成绩按钮点击事件\n    handleEdit(row, itemName) {\n      this.dialogTitle = '修改成绩'\n      const item = row.items[itemName]\n      this.form = {\n        id: item.id,\n        studentId: row.studentId,\n        studentName: row.studentName,\n        itemName: itemName,\n        score: item.score,\n        unit: item.unit\n      }\n      this.dialogVisible = true\n    },\n\n    // 获取项目单位\n    getItemUnit(itemName) {\n      const units = {\n        '50米跑': '秒',\n        '立定跳远': '厘米',\n        '1000米跑': '分:秒',\n        '引体向上': '个',\n        '仰卧起坐': '个/分钟',\n        '坐位体前屈': '厘米'\n      }\n      return units[itemName] || ''\n    },\n\n    // 提交表单\n    async handleSubmit() {\n      this.$refs.form.validate(async valid => {\n        if (valid) {\n          try {\n            const url = this.form.id ? \n              `/api/teacher/test-records/${this.form.id}` : \n              '/api/teacher/test-records'\n            \n            const method = this.form.id ? 'put' : 'post'\n            const response = await this.$http[method](url, this.form)\n            \n            if (response.data.code === 200) {\n              this.$message.success(this.form.id ? '修改成功' : '录入成功')\n              this.dialogVisible = false\n              this.getList()\n            }\n          } catch (error) {\n            console.error('操作失败:', error)\n            this.$message.error('操作失败')\n          }\n        }\n      })\n    },\n\n    // 对话框关闭事件\n    handleDialogClosed() {\n      this.$refs.form?.resetFields()\n      this.form = {\n        studentId: '',\n        studentName: '',\n        itemName: '',\n        score: '',\n        unit: ''\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.student-records {\n  padding: 20px;\n\n  .filter-section {\n    margin-bottom: 20px;\n  }\n\n  .pagination-container {\n    margin-top: 20px;\n    text-align: right;\n  }\n}\n</style> "]}]}