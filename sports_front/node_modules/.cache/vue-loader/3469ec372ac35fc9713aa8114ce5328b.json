{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\TeacherManagement.vue?vue&type=style&index=0&id=730fd73b&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\TeacherManagement.vue","mtime":1741701615709},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50ZWFjaGVyLW1hbmFnZW1lbnQgewogIHBhZGRpbmc6IDIwcHg7Cn0KLmZpbHRlci1zZWN0aW9uIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Cg=="},{"version":3,"sources":["TeacherManagement.vue"],"names":[],"mappings":";AAuJA;AACA;AACA;AACA;AACA;AACA","file":"TeacherManagement.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"teacher-management\">\n    <div class=\"filter-section\">\n      <el-form :inline=\"true\" :model=\"filterForm\">\n        <el-form-item>\n          <el-input\n            v-model=\"filterForm.keyword\"\n            placeholder=\"搜索姓名\"\n            clearable\n            @clear=\"handleSearch\">\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\n          <el-button type=\"success\" @click=\"handleAdd\">添加教师</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <el-table :data=\"teachers\" border v-loading=\"loading\">\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\n      <el-table-column prop=\"realName\" label=\"姓名\"></el-table-column>\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n      <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\n      <el-table-column label=\"操作\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-pagination\n      @current-change=\"handlePageChange\"\n      :current-page.sync=\"currentPage\"\n      :page-size=\"pageSize\"\n      layout=\"total, prev, pager, next\"\n      :total=\"total\">\n    </el-pagination>\n\n    <!-- 添加/编辑对话框 -->\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\">\n      <user-form\n        ref=\"userForm\"\n        :user-type=\"'TEACHER'\"\n        @saved=\"handleSaved\">\n      </user-form>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport UserForm from './UserForm.vue'\n\nexport default {\n  name: 'TeacherManagement',\n  components: {\n    UserForm\n  },\n  data() {\n    return {\n      teachers: [],\n      loading: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      filterForm: {\n        keyword: ''\n      },\n      dialogVisible: false,\n      dialogTitle: '添加教师',\n      currentUser: null\n    }\n  },\n  methods: {\n    async fetchTeachers() {\n      try {\n        this.loading = true;\n        console.log('Fetching teachers...'); // 添加调试日志\n        const response = await this.$axios.get('/api/users/teachers', {\n          params: {\n            pageNum: this.currentPage,\n            pageSize: this.pageSize,\n            keyword: this.filterForm.keyword\n          }\n        });\n        console.log('Response:', response); // 添加调试日志\n        if (response.data.code === 200) {\n          this.teachers = response.data.data.content;\n          this.total = response.data.data.totalElements;\n        } else {\n          this.$message.error(response.data.msg || '获取教师列表失败');\n        }\n      } catch (error) {\n        console.error('Error details:', error); // 添加详细错误日志\n        this.$message.error(error.response?.data?.msg || error.message || '获取教师列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleSearch() {\n      this.currentPage = 1\n      this.fetchTeachers()\n    },\n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchTeachers()\n    },\n    handleAdd() {\n      this.dialogTitle = '添加教师'\n      this.currentUser = null\n      this.dialogVisible = true\n    },\n    handleEdit(row) {\n      this.dialogTitle = '编辑教师'\n      this.currentUser = row\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs.userForm.setFormData(row)\n      })\n    },\n    async handleDelete(row) {\n      try {\n        await this.$confirm('确认删除该教师?', '提示', {\n          type: 'warning'\n        })\n        const response = await this.$axios.delete(`/api/users/${row.id}`)\n        if (response.data.code === 200) {\n          this.$message.success('删除成功')\n          this.fetchTeachers()\n        } else {\n          this.$message.error(response.data.msg || '删除失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败：' + error.message)\n        }\n      }\n    },\n    handleSaved() {\n      this.dialogVisible = false\n      this.fetchTeachers()\n    }\n  },\n  created() {\n    this.fetchTeachers()\n  }\n}\n</script>\n\n<style scoped>\n.teacher-management {\n  padding: 20px;\n}\n.filter-section {\n  margin-bottom: 20px;\n}\n</style> "]}]}