{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\StudentManagement.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\StudentManagement.vue","mtime":1742719169728},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\babel-loader\\lib\\index.js","mtime":1741946991478},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBVc2VyRm9ybSBmcm9tICcuL1VzZXJGb3JtLnZ1ZScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU3R1ZGVudE1hbmFnZW1lbnQnLAogIGNvbXBvbmVudHM6IHsKICAgIFVzZXJGb3JtCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc3R1ZGVudHM6IFtdLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgdG90YWw6IDAsCiAgICAgIGZpbHRlckZvcm06IHsKICAgICAgICBrZXl3b3JkOiAnJwogICAgICB9LAogICAgICBkaWFsb2dWaXNpYmxlOiBmYWxzZSwKICAgICAgZGlhbG9nVGl0bGU6ICfmt7vliqDlrabnlJ8nLAogICAgICBjdXJyZW50VXNlcjogbnVsbCwKICAgICAgaGVhZGVyczogewogICAgICAgICdYLVRva2VuJzogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3Rva2VuJykKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgZmV0Y2hTdHVkZW50cygpIHsKICAgICAgdHJ5IHsKICAgICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlOwogICAgICAgIGNvbnNvbGUubG9nKCdGZXRjaGluZyBzdHVkZW50cy4uLicpOyAvLyDmt7vliqDosIPor5Xml6Xlv5cKICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGF4aW9zLmdldCgnL2FwaS91c2Vycy9zdHVkZW50cycsIHsKICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICBwYWdlTnVtOiB0aGlzLmN1cnJlbnRQYWdlLAogICAgICAgICAgICBwYWdlU2l6ZTogdGhpcy5wYWdlU2l6ZSwKICAgICAgICAgICAga2V5d29yZDogdGhpcy5maWx0ZXJGb3JtLmtleXdvcmQKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBjb25zb2xlLmxvZygnUmVzcG9uc2U6JywgcmVzcG9uc2UpOyAvLyDmt7vliqDosIPor5Xml6Xlv5cKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIHRoaXMuc3R1ZGVudHMgPSByZXNwb25zZS5kYXRhLmRhdGEuY29udGVudDsKICAgICAgICAgIHRoaXMudG90YWwgPSByZXNwb25zZS5kYXRhLmRhdGEudG90YWxFbGVtZW50czsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXNwb25zZS5kYXRhLm1zZyB8fCAn6I635Y+W5a2m55Sf5YiX6KGo5aSx6LSlJyk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRldGFpbHM6JywgZXJyb3IpOyAvLyDmt7vliqDor6bnu4bplJnor6/ml6Xlv5cKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKGVycm9yLnJlc3BvbnNlPy5kYXRhPy5tc2cgfHwgZXJyb3IubWVzc2FnZSB8fCAn6I635Y+W5a2m55Sf5YiX6KGo5aSx6LSlJyk7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVTZWFyY2goKSB7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSAxCiAgICAgIHRoaXMuZmV0Y2hTdHVkZW50cygpCiAgICB9LAogICAgaGFuZGxlUGFnZUNoYW5nZShwYWdlKSB7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSBwYWdlCiAgICAgIHRoaXMuZmV0Y2hTdHVkZW50cygpCiAgICB9LAogICAgaGFuZGxlQWRkKCkgewogICAgICB0aGlzLmRpYWxvZ1RpdGxlID0gJ+a3u+WKoOWtpueUnycKICAgICAgdGhpcy5jdXJyZW50VXNlciA9IG51bGwKICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQogICAgfSwKICAgIGhhbmRsZUVkaXQocm93KSB7CiAgICAgIHRoaXMuZGlhbG9nVGl0bGUgPSAn57yW6L6R5a2m55SfJwogICAgICB0aGlzLmN1cnJlbnRVc2VyID0gcm93CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIHRoaXMuJHJlZnMudXNlckZvcm0uc2V0Rm9ybURhdGEocm93KQogICAgICB9KQogICAgfSwKICAgIGFzeW5jIGhhbmRsZURlbGV0ZShyb3cpIHsKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB0aGlzLiRjb25maXJtKCfnoa7orqTliKDpmaTor6XlrabnlJ8/JywgJ+aPkOekuicsIHsKICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgIH0pCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLiRheGlvcy5kZWxldGUoYC9hcGkvdXNlcnMvJHtyb3cuaWR9YCkKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk5oiQ5YqfJykKICAgICAgICAgIHRoaXMuZmV0Y2hTdHVkZW50cygpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzcG9uc2UuZGF0YS5tc2cgfHwgJ+WIoOmZpOWksei0pScpCiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGlmIChlcnJvciAhPT0gJ2NhbmNlbCcpIHsKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WIoOmZpOWksei0pe+8micgKyBlcnJvci5tZXNzYWdlKQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGhhbmRsZVNhdmVkKCkgewogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSBmYWxzZQogICAgICB0aGlzLmZldGNoU3R1ZGVudHMoKQogICAgfSwKICAgIGJlZm9yZVVwbG9hZChmaWxlKSB7CiAgICAgIGNvbnN0IGlzRXhjZWwgPSBmaWxlLnR5cGUgPT09ICdhcHBsaWNhdGlvbi92bmQub3BlbnhtbGZvcm1hdHMtb2ZmaWNlZG9jdW1lbnQuc3ByZWFkc2hlZXRtbC5zaGVldCc7CiAgICAgIGlmICghaXNFeGNlbCkgewogICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WPquiDveS4iuS8oEV4Y2Vs5paH5Lu2IScpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCiAgICBoYW5kbGVVcGxvYWRTdWNjZXNzKHJlc3BvbnNlKSB7CiAgICAgIGlmIChyZXNwb25zZS5jb2RlID09PSAyMDApIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WvvOWFpeaIkOWKnycpOwogICAgICAgIHRoaXMuZmV0Y2hTdHVkZW50cygpOyAvLyDliLfmlrDliJfooagKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlc3BvbnNlLm1lc3NhZ2UpOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlVXBsb2FkRXJyb3IoKSB7CiAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WvvOWFpeWksei0pScpOwogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMuZmV0Y2hTdHVkZW50cygpCiAgfQp9Cg=="},{"version":3,"sources":["StudentManagement.vue"],"names":[],"mappings":";AAifile":"StudentManagement.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"student-management\">\n    <div class=\"filter-section\">\n      <el-form :inline=\"true\" :model=\"filterForm\">\n        <el-form-item>\n          <el-input\n            v-model=\"filterForm.keyword\"\n            placeholder=\"搜索姓名/学号\"\n            clearable\n            @clear=\"handleSearch\">\n          </el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSearch\">搜索</el-button>\n          <el-button type=\"success\" @click=\"handleAdd\">添加学生</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <el-table :data=\"students\" border v-loading=\"loading\">\n      <el-table-column prop=\"username\" label=\"用户名\"></el-table-column>\n      <el-table-column prop=\"realName\" label=\"姓名\"></el-table-column>\n      <el-table-column prop=\"studentNumber\" label=\"学号\"></el-table-column>\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n      <el-table-column prop=\"phone\" label=\"电话\"></el-table-column>\n      <el-table-column label=\"操作\" width=\"200\">\n        <template slot-scope=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\n          <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-pagination\n      @current-change=\"handlePageChange\"\n      :current-page.sync=\"currentPage\"\n      :page-size=\"pageSize\"\n      layout=\"total, prev, pager, next\"\n      :total=\"total\">\n    </el-pagination>\n\n    <!-- 添加/编辑对话框 -->\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\">\n      <user-form\n        ref=\"userForm\"\n        :user-type=\"'STUDENT'\"\n        @saved=\"handleSaved\">\n      </user-form>\n    </el-dialog>\n\n    <!-- 添加导入按钮和上传组件 -->\n    <el-upload\n      class=\"upload-demo\"\n      action=\"/api/admin/users/student/import\"\n      :headers=\"headers\"\n      :on-success=\"handleUploadSuccess\"\n      :on-error=\"handleUploadError\"\n      :before-upload=\"beforeUpload\">\n      <el-button type=\"primary\">导入学生</el-button>\n      <div slot=\"tip\" class=\"el-upload__tip\">只能上传xlsx文件</div>\n    </el-upload>\n  </div>\n</template>\n\n<script>\nimport UserForm from './UserForm.vue'\n\nexport default {\n  name: 'StudentManagement',\n  components: {\n    UserForm\n  },\n  data() {\n    return {\n      students: [],\n      loading: false,\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      filterForm: {\n        keyword: ''\n      },\n      dialogVisible: false,\n      dialogTitle: '添加学生',\n      currentUser: null,\n      headers: {\n        'X-Token': localStorage.getItem('token')\n      }\n    }\n  },\n  methods: {\n    async fetchStudents() {\n      try {\n        this.loading = true;\n        console.log('Fetching students...'); // 添加调试日志\n        const response = await this.$axios.get('/api/users/students', {\n          params: {\n            pageNum: this.currentPage,\n            pageSize: this.pageSize,\n            keyword: this.filterForm.keyword\n          }\n        });\n        console.log('Response:', response); // 添加调试日志\n        if (response.data.code === 200) {\n          this.students = response.data.data.content;\n          this.total = response.data.data.totalElements;\n        } else {\n          this.$message.error(response.data.msg || '获取学生列表失败');\n        }\n      } catch (error) {\n        console.error('Error details:', error); // 添加详细错误日志\n        this.$message.error(error.response?.data?.msg || error.message || '获取学生列表失败');\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleSearch() {\n      this.currentPage = 1\n      this.fetchStudents()\n    },\n    handlePageChange(page) {\n      this.currentPage = page\n      this.fetchStudents()\n    },\n    handleAdd() {\n      this.dialogTitle = '添加学生'\n      this.currentUser = null\n      this.dialogVisible = true\n    },\n    handleEdit(row) {\n      this.dialogTitle = '编辑学生'\n      this.currentUser = row\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        this.$refs.userForm.setFormData(row)\n      })\n    },\n    async handleDelete(row) {\n      try {\n        await this.$confirm('确认删除该学生?', '提示', {\n          type: 'warning'\n        })\n        const response = await this.$axios.delete(`/api/users/${row.id}`)\n        if (response.data.code === 200) {\n          this.$message.success('删除成功')\n          this.fetchStudents()\n        } else {\n          this.$message.error(response.data.msg || '删除失败')\n        }\n      } catch (error) {\n        if (error !== 'cancel') {\n          this.$message.error('删除失败：' + error.message)\n        }\n      }\n    },\n    handleSaved() {\n      this.dialogVisible = false\n      this.fetchStudents()\n    },\n    beforeUpload(file) {\n      const isExcel = file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n      if (!isExcel) {\n        this.$message.error('只能上传Excel文件!');\n        return false;\n      }\n      return true;\n    },\n    handleUploadSuccess(response) {\n      if (response.code === 200) {\n        this.$message.success('导入成功');\n        this.fetchStudents(); // 刷新列表\n      } else {\n        this.$message.error(response.message);\n      }\n    },\n    handleUploadError() {\n      this.$message.error('导入失败');\n    }\n  },\n  created() {\n    this.fetchStudents()\n  }\n}\n</script>\n\n<style scoped>\n.student-management {\n  padding: 20px;\n}\n.filter-section {\n  margin-bottom: 20px;\n}\n</style> "]}]}