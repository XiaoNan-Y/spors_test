{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\DataReview.vue?vue&type=style&index=0&id=7f4f499c&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\DataReview.vue","mtime":1741355732195},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1739346864144},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1739346848643},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1739346863832},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739346865238},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1739346848059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kYXRhLXJldmlldyB7CiAgcGFkZGluZzogMjBweDsKfQoKLmZpbHRlci1zZWN0aW9uIHsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmNWY3ZmE7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXItcmFkaXVzOiA0cHg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7Cn0KCi5maWx0ZXItZm9ybSB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IHdyYXA7CiAgZ2FwOiAxMHB4Owp9CgoucGFnaW5hdGlvbi1jb250YWluZXIgewogIG1hcmdpbi10b3A6IDIwcHg7CiAgdGV4dC1hbGlnbjogcmlnaHQ7Cn0KCi5hYm5vcm1hbC1zY29yZSB7CiAgY29sb3I6ICNmNTZjNmM7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7Cn0KCi5yZXZpZXctaW5mbywgLmRldGFpbC1pbmZvIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmN2ZhOwogIHBhZGRpbmc6IDE1cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi53YXJuaW5nLXRleHQgewogIGNvbG9yOiAjZTZhMjNjOwogIG1hcmdpbi10b3A6IDEwcHg7Cn0KCi53YXJuaW5nLXRleHQgaSB7CiAgbWFyZ2luLXJpZ2h0OiA1cHg7Cn0KCi5vcGVyYXRpb24tYnV0dG9ucyB7CiAgbWFyZ2luLWxlZnQ6IDIwcHg7Cn0KCi5yZWplY3QtZm9ybSB7CiAgbWFyZ2luLXRvcDogMjBweDsKfQo="},{"version":3,"sources":["DataReview.vue"],"names":[],"mappings":";AA4oBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"DataReview.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"data-review\">\n    <!-- 搜索和筛选区域 -->\n    <div class=\"filter-section\">\n      <el-form :inline=\"true\" :model=\"filterForm\" class=\"filter-form\">\n        <el-form-item label=\"测试项目\">\n          <el-select v-model=\"filterForm.sportsItemId\" placeholder=\"选择测试项目\">\n            <el-option\n              v-for=\"item in sportsItems\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"录入教师\">\n          <el-select v-model=\"filterForm.teacherId\" placeholder=\"选择教师\">\n            <el-option\n              v-for=\"teacher in teachers\"\n              :key=\"teacher.id\"\n              :label=\"teacher.realName\"\n              :value=\"teacher.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"审核状态\">\n          <el-select v-model=\"filterForm.status\" placeholder=\"选择状态\">\n            <el-option label=\"待审核\" value=\"PENDING\"></el-option>\n            <el-option label=\"已通过\" value=\"APPROVED\"></el-option>\n            <el-option label=\"已驳回\" value=\"REJECTED\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"测试时间\">\n          <el-date-picker\n            v-model=\"filterForm.dateRange\"\n            type=\"daterange\"\n            range-separator=\"至\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n            format=\"yyyy-MM-dd\"\n            value-format=\"yyyy-MM-dd\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleSearch\">查询</el-button>\n          <el-button @click=\"resetFilter\">重置</el-button>\n        </el-form-item>\n      </el-form>\n      <div class=\"operation-buttons\">\n        <el-button type=\"primary\" @click=\"handleAdd\">\n          <i class=\"el-icon-plus\"></i> 录入成绩\n        </el-button>\n      </div>\n    </div>\n\n    <!-- 数据列表 -->\n    <el-table\n      :data=\"recordList || []\"\n      border\n      stripe\n      v-loading=\"loading\"\n      style=\"width: 100%\"\n    >\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n      <el-table-column label=\"学生姓名\">\n        <template slot-scope=\"scope\">\n          {{ scope.row?.student?.realName || '未知' }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"测试项目\">\n        <template slot-scope=\"scope\">\n          {{ scope.row?.sportsItem?.name || '未知' }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"测试成绩\">\n        <template slot-scope=\"scope\">\n          <span :class=\"{ 'abnormal-score': isAbnormalScore(scope.row) }\">\n            {{ scope.row?.score }}{{ scope.row?.sportsItem?.unit || '' }}\n          </span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"录入教师\">\n        <template slot-scope=\"scope\">\n          {{ scope.row?.teacher?.realName || '未知' }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"testTime\" label=\"测试时间\" width=\"180\">\n        <template slot-scope=\"scope\">\n          {{ formatDate(scope.row.testTime) }}\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"getStatusType(scope.row.status)\">\n            {{ getStatusLabel(scope.row.status) }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"250\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"primary\"\n            @click=\"handleReview(scope.row, 'approve')\"\n            v-if=\"scope.row.status === 'PENDING'\"\n          >审核</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"warning\"\n            @click=\"handleEdit(scope.row)\"\n          >修改</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"info\"\n            @click=\"handleDetail(scope.row)\"\n          >详情</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!-- 分页 -->\n    <div class=\"pagination-container\">\n      <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"page.current\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        :page-size=\"page.size\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"page.total\"\n      ></el-pagination>\n    </div>\n\n    <!-- 审核对话框 -->\n    <el-dialog\n      :title=\"reviewDialogTitle\"\n      :visible.sync=\"reviewDialogVisible\"\n      width=\"500px\"\n    >\n      <div class=\"review-info\" v-if=\"currentRecord\">\n        <p>学生：{{ currentRecord.student?.realName || '未知' }}</p>\n        <p>测试项目：{{ currentRecord.sportsItem?.name || '未知' }}</p>\n        <p>测试成绩：{{ currentRecord.score }}{{ currentRecord.sportsItem?.unit || '' }}</p>\n        <p>测试时间：{{ formatDate(currentRecord.testTime) }}</p>\n      </div>\n\n      <div v-if=\"reviewType === 'reject'\" class=\"reject-form\">\n        <el-form :model=\"reviewForm\" :rules=\"reviewRules\" ref=\"reviewForm\">\n          <el-form-item label=\"驳回原因\" prop=\"reviewComment\">\n            <el-input\n              type=\"textarea\"\n              v-model=\"reviewForm.reviewComment\"\n              :rows=\"3\"\n              placeholder=\"请输入驳回原因\"\n            ></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"reviewDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitReview\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 详情对话框 -->\n    <el-dialog title=\"详细信息\" :visible.sync=\"detailDialogVisible\" width=\"500px\">\n      <div class=\"detail-info\" v-if=\"currentRecord\">\n        <p><strong>学生：</strong>{{ currentRecord.student?.realName || '未知' }}</p>\n        <p><strong>测试项目：</strong>{{ currentRecord.sportsItem?.name || '未知' }}</p>\n        <p><strong>测试成绩：</strong>{{ currentRecord.score }}{{ currentRecord.sportsItem?.unit || '' }}</p>\n        <p><strong>录入教师：</strong>{{ currentRecord.teacher?.realName || '未知' }}</p>\n        <p><strong>测试时间：</strong>{{ formatDate(currentRecord.testTime) }}</p>\n        <p><strong>审核状态：</strong>{{ getStatusLabel(currentRecord.status) }}</p>\n        <p><strong>审核意见：</strong>{{ currentRecord.reviewComment || '无' }}</p>\n        <p><strong>审核时间：</strong>{{ formatDate(currentRecord.reviewTime) || '未审核' }}</p>\n      </div>\n    </el-dialog>\n\n    <!-- 修改对话框 -->\n    <el-dialog title=\"修改测试记录\" :visible.sync=\"editDialogVisible\" width=\"500px\">\n      <el-form :model=\"editForm\" ref=\"editForm\" :rules=\"editRules\" label-width=\"100px\">\n        <el-form-item label=\"学生姓名\" prop=\"studentId\">\n          <el-select v-model=\"editForm.studentId\" placeholder=\"选择学生\" disabled>\n            <el-option\n              :label=\"currentRecord.student?.realName\"\n              :value=\"currentRecord.student?.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"测试项目\" prop=\"sportsItemId\">\n          <el-select v-model=\"editForm.sportsItemId\" placeholder=\"选择测试项目\" disabled>\n            <el-option\n              :label=\"currentRecord.sportsItem?.name\"\n              :value=\"currentRecord.sportsItem?.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"测试成绩\" prop=\"score\">\n          <el-input-number \n            v-model=\"editForm.score\" \n            :precision=\"2\"\n            :step=\"0.1\"\n            :min=\"0\"\n          ></el-input-number>\n          <span style=\"margin-left: 10px\">{{ currentRecord.sportsItem?.unit }}</span>\n        </el-form-item>\n        <el-form-item label=\"测试时间\" prop=\"testTime\">\n          <el-date-picker\n            v-model=\"editForm.testTime\"\n            type=\"datetime\"\n            placeholder=\"选择测试时间\"\n            format=\"yyyy-MM-dd HH:mm:ss\"\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\n          ></el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"审核状态\" prop=\"status\">\n          <el-select v-model=\"editForm.status\" placeholder=\"选择状态\">\n            <el-option label=\"待审核\" value=\"PENDING\"></el-option>\n            <el-option label=\"已通过\" value=\"APPROVED\"></el-option>\n            <el-option label=\"已驳回\" value=\"REJECTED\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"审核意见\" prop=\"reviewComment\">\n          <el-input\n            type=\"textarea\"\n            v-model=\"editForm.reviewComment\"\n            :rows=\"3\"\n            placeholder=\"请输入审核意见\"\n          ></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"editDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitEdit\">确定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 添加数据录入对话框 -->\n    <el-dialog title=\"录入成绩\" :visible.sync=\"addDialogVisible\" width=\"500px\">\n      <el-form :model=\"addForm\" :rules=\"addRules\" ref=\"addForm\" label-width=\"100px\">\n        <el-form-item label=\"学生\" prop=\"studentId\">\n          <el-select v-model=\"addForm.studentId\" placeholder=\"选择学生\" filterable>\n            <el-option\n              v-for=\"student in students\"\n              :key=\"student.id\"\n              :label=\"student.realName\"\n              :value=\"student.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"测试项目\" prop=\"sportsItemId\">\n          <el-select v-model=\"addForm.sportsItemId\" placeholder=\"选择测试项目\" @change=\"handleItemChange\">\n            <el-option\n              v-for=\"item in sportsItems\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"测试成绩\" prop=\"score\">\n          <el-input-number \n            v-model=\"addForm.score\" \n            :precision=\"2\"\n            :step=\"0.1\"\n            :min=\"0\"\n          ></el-input-number>\n          <span style=\"margin-left: 10px\">{{ selectedItem?.unit }}</span>\n        </el-form-item>\n        <el-form-item label=\"测试时间\" prop=\"testTime\">\n          <el-date-picker\n            v-model=\"addForm.testTime\"\n            type=\"datetime\"\n            placeholder=\"选择测试时间\"\n            format=\"yyyy-MM-dd HH:mm:ss\"\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\n          ></el-date-picker>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"addDialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitAdd\">确定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'DataReview',\n  data() {\n    return {\n      filterForm: {\n        sportsItemId: '',\n        teacherId: '',\n        status: '',\n        dateRange: []\n      },\n      sportsItems: [],\n      teachers: [],\n      recordList: [],\n      loading: false,\n      page: {\n        current: 1,\n        size: 10,\n        total: 0\n      },\n      reviewDialogVisible: false,\n      detailDialogVisible: false,\n      editDialogVisible: false,\n      currentRecord: null,\n      reviewType: '',\n      reviewForm: {\n        reviewComment: ''\n      },\n      reviewRules: {\n        reviewComment: [\n          { required: true, message: '请输入驳回原因', trigger: 'blur' }\n        ]\n      },\n      editForm: {\n        studentId: '',\n        sportsItemId: '',\n        score: 0,\n        testTime: '',\n        status: '',\n        reviewComment: ''\n      },\n      editRules: {\n        studentId: [{ required: true, message: '请选择学生', trigger: 'change' }],\n        teacherId: [{ required: true, message: '请选择教师', trigger: 'change' }],\n        sportsItemId: [{ required: true, message: '请选择测试项目', trigger: 'change' }],\n        score: [{ required: true, message: '请输入成绩', trigger: 'blur' }],\n        testTime: [{ required: true, message: '请选择测试时间', trigger: 'change' }]\n      },\n      addDialogVisible: false,\n      addForm: {\n        studentId: '',\n        sportsItemId: '',\n        score: 0,\n        testTime: ''\n      },\n      addRules: {\n        studentId: [\n          { required: true, message: '请选择学生', trigger: 'change' }\n        ],\n        sportsItemId: [\n          { required: true, message: '请选择测试项目', trigger: 'change' }\n        ],\n        score: [\n          { required: true, message: '请输入测试成绩', trigger: 'blur' }\n        ],\n        testTime: [\n          { required: true, message: '请选择测试时间', trigger: 'change' }\n        ]\n      },\n      selectedItem: null,\n      students: [],\n      rejectReason: ''\n    }\n  },\n  computed: {\n    reviewDialogTitle() {\n      return this.reviewType === 'approve' ? '审核通过确认' : '驳回确认'\n    }\n  },\n  async created() {\n    try {\n      this.loading = true\n      // 先获取基础数据\n      await Promise.all([\n        this.fetchSportsItems(),\n        this.fetchTeachers(),\n        this.fetchStudents()\n      ])\n      // 再获取记录列表\n      await this.fetchRecordList()\n    } catch (error) {\n      console.error('初始化数据失败:', error)\n      this.$message.error('初始化数据失败')\n    } finally {\n      this.loading = false\n    }\n  },\n  methods: {\n    formatDate(date) {\n      if (!date) return ''\n      return new Date(date).toLocaleString()\n    },\n    getStatusType(status) {\n      const typeMap = {\n        'PENDING': 'warning',\n        'APPROVED': 'success',\n        'REJECTED': 'danger'\n      }\n      return typeMap[status] || 'info'\n    },\n    getStatusLabel(status) {\n      const labelMap = {\n        'PENDING': '待审核',\n        'APPROVED': '已通过',\n        'REJECTED': '已驳回'\n      }\n      return labelMap[status] || '未知'\n    },\n    isAbnormalScore(record) {\n      if (!record || !record.sportsItem) return false;\n      \n      const abnormalRules = {\n        '100米跑': (score) => score < 9 || score > 20,\n        '立定跳远': (score) => score < 1.5 || score > 3.5,\n        '引体向上': (score) => score < 0 || score > 30,\n        '1000米跑': (score) => score < 180 || score > 600,\n        '仰卧起坐': (score) => score < 10 || score > 80\n      };\n\n      const rule = abnormalRules[record.sportsItem.name];\n      return rule ? rule(record.score) : false;\n    },\n    async fetchSportsItems() {\n      try {\n        const res = await this.$http.get('/api/admin/sports-items')\n        if (res.data.code === 200) {\n          this.sportsItems = res.data.data || []\n        }\n      } catch (error) {\n        console.error('获取体育项目失败:', error)\n        this.$message.error('获取体育项目失败: ' + error.message)\n        this.sportsItems = []\n      }\n    },\n    async fetchTeachers() {\n      try {\n        const res = await this.$http.get('/api/admin/users', {\n          params: { userType: 'TEACHER' }\n        })\n        if (res.data.code === 200) {\n          this.teachers = res.data.data || []\n        }\n      } catch (error) {\n        console.error('获取教师列表失败:', error)\n        this.$message.error('获取教师列表失败: ' + error.message)\n        this.teachers = []\n      }\n    },\n    async fetchRecordList() {\n      try {\n        this.loading = true\n        const params = {\n          status: this.filterForm.status,\n          teacherId: this.filterForm.teacherId,\n          sportsItemId: this.filterForm.sportsItemId,\n          startDate: this.filterForm.dateRange?.[0] || null,\n          endDate: this.filterForm.dateRange?.[1] || null,\n          page: this.page.current - 1,\n          size: this.page.size\n        }\n        \n        console.log('Fetching records with params:', params)\n        const res = await this.$http.get('/api/admin/test-records/review', { params })\n        console.log('Response:', res.data)\n\n        if (res.data.code === 200) {\n          this.recordList = Array.isArray(res.data.data.content) ? res.data.data.content : []\n          this.page.total = res.data.data.totalElements || 0\n        } else {\n          throw new Error(res.data.msg || '获取记录列表失败')\n        }\n      } catch (error) {\n        console.error('获取记录列表失败:', error)\n        this.$message.error('获取记录列表失败: ' + error.message)\n        this.recordList = []\n      } finally {\n        this.loading = false\n      }\n    },\n    handleSearch() {\n      this.page.current = 1\n      this.fetchRecordList()\n    },\n    resetFilter() {\n      this.filterForm = {\n        sportsItemId: '',\n        teacherId: '',\n        status: '',\n        dateRange: []\n      }\n      this.handleSearch()\n    },\n    handleSizeChange(val) {\n      this.page.size = val\n      this.fetchRecordList()\n    },\n    handleCurrentChange(val) {\n      this.page.current = val\n      this.fetchRecordList()\n    },\n    handleReview(record, type) {\n      this.currentRecord = { ...record }\n      this.reviewType = type\n      this.reviewForm.reviewComment = ''\n      this.reviewDialogVisible = true\n    },\n    handleDetail(record) {\n      this.currentRecord = { ...record }\n      this.detailDialogVisible = true\n    },\n    handleEdit(record) {\n      this.currentRecord = record;\n      this.editForm = {\n        studentId: record.student?.id,\n        teacherId: record.teacher?.id,\n        sportsItemId: record.sportsItem?.id,\n        score: record.score,\n        testTime: record.testTime,\n        status: record.status,\n        remark: record.remark || ''\n      };\n      this.editDialogVisible = true;\n    },\n    async submitEdit() {\n      try {\n        await this.$refs.editForm.validate();\n        \n        // 构造请求数据，确保数据格式正确\n        const editData = {\n          id: this.currentRecord.id,\n          student: { id: this.editForm.studentId },\n          teacher: { id: this.editForm.teacherId },\n          sportsItem: { id: this.editForm.sportsItemId },\n          score: parseFloat(this.editForm.score),\n          testTime: this.editForm.testTime ? new Date(this.editForm.testTime).toISOString() : null,\n          status: this.editForm.status,\n          remark: this.editForm.remark\n        };\n\n        console.log('Submitting edit data:', editData);\n\n        const res = await this.$http.put(\n          `/api/admin/test-records/${this.currentRecord.id}`,\n          editData\n        );\n\n        if (res.data.code === 200) {\n          this.$message.success('修改成功');\n          this.editDialogVisible = false;\n          await this.fetchRecordList();\n        } else {\n          throw new Error(res.data.msg || '修改失败');\n        }\n      } catch (error) {\n        console.error('修改失败:', error);\n        this.$message.error('修改失败: ' + (error.response?.data?.msg || error.message));\n      }\n    },\n    handleAdd() {\n      this.addForm = {\n        studentId: '',\n        sportsItemId: '',\n        score: 0,\n        testTime: new Date().toISOString().slice(0, 19).replace('T', ' ')\n      }\n      this.addDialogVisible = true\n      if (this.students.length === 0) {\n        this.fetchStudents()\n      }\n    },\n    handleItemChange(itemId) {\n      this.selectedItem = this.sportsItems.find(item => item.id === itemId)\n    },\n    async submitAdd() {\n      try {\n        await this.$refs.addForm.validate()\n        \n        // 转换日期时间格式\n        const testTime = this.addForm.testTime ? new Date(this.addForm.testTime) : new Date();\n        \n        // 构造请求数据\n        const recordData = {\n          student: { id: parseInt(this.addForm.studentId) },\n          sportsItem: { id: parseInt(this.addForm.sportsItemId) },\n          teacher: { id: parseInt(this.$store.state.user.id) },\n          score: parseFloat(this.addForm.score),\n          testTime: testTime.toISOString(),\n          status: 'PENDING'\n        }\n        \n        console.log('Submitting record data:', recordData);\n        \n        const res = await this.$http.post('/admin/test-records/add', recordData)\n        \n        if (res.data.code === 200) {\n          this.$message.success('录入成功')\n          this.addDialogVisible = false\n          this.fetchRecordList()\n        } else {\n          this.$message.error(res.data.msg || '录入失败')\n        }\n      } catch (error) {\n        console.error('录入失败:', error)\n        this.$message.error(error.response?.data?.msg || '录入失败')\n      }\n    },\n    async submitReview() {\n      try {\n        if (this.reviewType === 'reject') {\n          // 驳回时验证表单\n          await this.$refs.reviewForm.validate()\n        }\n\n        const params = {\n          id: this.currentRecord.id,\n          status: this.reviewType === 'approve' ? 'APPROVED' : 'REJECTED',\n          reviewComment: this.reviewType === 'approve' ? '审核通过' : this.reviewForm.reviewComment,\n          reviewerId: this.$store.state.user.id\n        }\n\n        console.log('Submitting review:', params)\n\n        const res = await this.$http.put('/api/admin/test-records/review', params)\n\n        if (res.data.code === 200) {\n          this.$message.success(this.reviewType === 'approve' ? '审核通过成功' : '驳回成功')\n          this.reviewDialogVisible = false\n          await this.fetchRecordList()\n        } else {\n          throw new Error(res.data.msg || '审核失败')\n        }\n      } catch (error) {\n        console.error('审核失败:', error)\n        this.$message.error('审核失败: ' + (error.response?.data?.msg || error.message))\n      }\n    },\n    async fetchStudents() {\n      try {\n        const res = await this.$http.get('/admin/users', {\n          params: { userType: 'STUDENT' }\n        })\n        if (res.data.code === 200) {\n          this.students = res.data.data\n        }\n      } catch (error) {\n        console.error('获取学生列表失败:', error)\n        this.$message.error('获取学生列表失败')\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.data-review {\n  padding: 20px;\n}\n\n.filter-section {\n  margin-bottom: 20px;\n  background-color: #f5f7fa;\n  padding: 20px;\n  border-radius: 4px;\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n}\n\n.filter-form {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.abnormal-score {\n  color: #f56c6c;\n  font-weight: bold;\n}\n\n.review-info, .detail-info {\n  background-color: #f5f7fa;\n  padding: 15px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n}\n\n.warning-text {\n  color: #e6a23c;\n  margin-top: 10px;\n}\n\n.warning-text i {\n  margin-right: 5px;\n}\n\n.operation-buttons {\n  margin-left: 20px;\n}\n\n.reject-form {\n  margin-top: 20px;\n}\n</style> "]}]}