{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\DataReview.vue?vue&type=style&index=0&id=7f4f499c&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\admin\\DataReview.vue","mtime":1741529381388},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741355860000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5kYXRhLXJldmlldyB7CiAgcGFkZGluZzogMjBweDsKfQoKLm9wZXJhdGlvbi1iYXIgewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5maWx0ZXItc2VjdGlvbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjdmYTsKICBwYWRkaW5nOiAyMHB4OwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9CgoudGFibGUtY2FyZCB7CiAgbWFyZ2luLXRvcDogMjBweDsKfQoKLnBhZ2luYXRpb24tY29udGFpbmVyIHsKICBtYXJnaW4tdG9wOiAyMHB4OwogIHRleHQtYWxpZ246IHJpZ2h0Owp9CgoucmV2aWV3LWluZm8gewogIG1hcmdpbi1ib3R0b206IDIwcHg7Cn0KCi5yZXZpZXctZm9ybSB7CiAgbWFyZ2luLXRvcDogMjBweDsKfQoKLmFibm9ybWFsLXNjb3JlIHsKICBjb2xvcjogI2Y1NmM2YzsKICBmb250LXdlaWdodDogYm9sZDsKfQoKLnJldmlldy1jb21tZW50IHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWF4LXdpZHRoOiAyMDBweDsKICBvdmVyZmxvdzogaGlkZGVuOwogIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogIHdoaXRlLXNwYWNlOiBub3dyYXA7Cn0KCi5lbC1kZXNjcmlwdGlvbnMgewogIG1hcmdpbjogMjBweCAwOwp9Cg=="},{"version":3,"sources":["DataReview.vue"],"names":[],"mappings":";AAgkBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"DataReview.vue","sourceRoot":"src/views/admin","sourcesContent":["<template>\n  <div class=\"data-review\">\n    <!-- 顶部操作栏 -->\n    <div class=\"operation-bar\">\n      <el-button type=\"primary\" @click=\"handleAdd\">\n        <i class=\"el-icon-plus\"></i> 录入成绩\n      </el-button>\n      <el-button type=\"success\" @click=\"handleExport\">\n        <i class=\"el-icon-download\"></i> 导出数据\n      </el-button>\n    </div>\n\n    <!-- 搜索筛选区 -->\n    <div class=\"filter-section\">\n      <el-form :inline=\"true\" :model=\"queryParams\" ref=\"queryForm\">\n        <el-form-item label=\"测试项目\">\n          <el-select v-model=\"queryParams.sportsItemId\" placeholder=\"选择测试项目\" clearable>\n            <el-option\n              v-for=\"item in sportsItems\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"状态\">\n          <el-select v-model=\"queryParams.status\" placeholder=\"选择状态\" clearable>\n            <el-option label=\"待审核\" value=\"PENDING\"></el-option>\n            <el-option label=\"已通过\" value=\"APPROVED\"></el-option>\n            <el-option label=\"已驳回\" value=\"REJECTED\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"handleQuery\">查询</el-button>\n          <el-button @click=\"resetQuery\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n\n    <!-- 数据表格 -->\n    <el-card class=\"table-card\">\n      <el-table\n        v-loading=\"loading\"\n        :data=\"tableData\"\n        border\n        stripe\n        style=\"width: 100%\"\n      >\n        <el-table-column type=\"index\" label=\"序号\" width=\"60\"></el-table-column>\n        \n        <el-table-column label=\"学生ID\" prop=\"student_id\" width=\"100\"></el-table-column>\n        \n        <el-table-column label=\"教师ID\" prop=\"teacher_id\" width=\"100\"></el-table-column>\n        \n        <el-table-column label=\"项目ID\" prop=\"sports_item_id\" width=\"100\"></el-table-column>\n        \n        <el-table-column label=\"成绩\" prop=\"score\" width=\"120\">\n          <template slot-scope=\"scope\">\n            <span :class=\"{ 'abnormal-score': scope.row.isAbnormal }\">\n              {{ scope.row.score }}{{ scope.row.sportsItem?.unit || '' }}\n            </span>\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"测试时间\" prop=\"test_time\" width=\"180\">\n          <template slot-scope=\"scope\">\n            {{ formatDateTime(scope.row.test_time) }}\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"状态\" width=\"100\">\n          <template slot-scope=\"scope\">\n            <el-tag :type=\"getStatusType(scope.row.status)\">\n              {{ getStatusText(scope.row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"审核意见\" prop=\"review_comment\" min-width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-tooltip v-if=\"scope.row.review_comment\" :content=\"scope.row.review_comment\" placement=\"top\">\n              <span class=\"review-comment\">{{ scope.row.review_comment }}</span>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"审核时间\" prop=\"review_time\" width=\"180\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.review_time ? formatDateTime(scope.row.review_time) : '-' }}\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"创建时间\" prop=\"created_at\" width=\"180\">\n          <template slot-scope=\"scope\">\n            {{ formatDateTime(scope.row.created_at) }}\n          </template>\n        </el-table-column>\n        \n        <el-table-column label=\"更新时间\" prop=\"updated_at\" width=\"180\">\n          <template slot-scope=\"scope\">\n            {{ formatDateTime(scope.row.updated_at) }}\n          </template>\n        </el-table-column>\n\n        <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\n          <template slot-scope=\"scope\">\n            <el-button \n              v-if=\"scope.row.status === 'PENDING'\"\n              size=\"mini\" \n              type=\"primary\"\n              @click=\"handleReview(scope.row)\"\n            >审核</el-button>\n            <el-button \n              size=\"mini\"\n              type=\"info\"\n              @click=\"handleDetail(scope.row)\"\n            >详情</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"pagination-container\">\n        <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page.sync=\"queryParams.pageNum\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          :page-size=\"queryParams.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n        </el-pagination>\n      </div>\n    </el-card>\n\n    <!-- 录入成绩对话框 -->\n    <el-dialog \n      title=\"录入成绩\" \n      :visible.sync=\"addDialog.visible\" \n      width=\"500px\"\n      @closed=\"handleDialogClosed\"\n    >\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"recordForm\" label-width=\"100px\">\n        <el-form-item label=\"学生\" prop=\"studentId\">\n          <el-select \n            v-model=\"form.studentId\" \n            placeholder=\"选择学生\" \n            filterable\n            remote\n            :remote-method=\"searchStudents\"\n            :loading=\"studentLoading\"\n          >\n            <el-option\n              v-for=\"student in students\"\n              :key=\"student.id\"\n              :label=\"student.realName\"\n              :value=\"student.id\"\n            >\n              <span>{{ student.realName }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">\n                {{ student.username }}\n              </span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"测试项目\" prop=\"sportsItemId\">\n          <el-select \n            v-model=\"form.sportsItemId\" \n            placeholder=\"选择测试项目\"\n            @change=\"handleSportsItemChange\"\n          >\n            <el-option\n              v-for=\"item in sportsItems\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            >\n              <span>{{ item.name }}</span>\n              <span style=\"float: right; color: #8492a6; font-size: 13px\">\n                {{ item.unit }}\n              </span>\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"测试成绩\" prop=\"score\">\n          <el-input-number \n            v-model=\"form.score\" \n            :precision=\"2\"\n            :step=\"0.1\"\n            :min=\"0\"\n            controls-position=\"right\"\n          ></el-input-number>\n          <span style=\"margin-left: 10px\">{{ selectedItemUnit }}</span>\n        </el-form-item>\n        <el-form-item label=\"测试时间\" prop=\"testTime\">\n          <el-date-picker\n            v-model=\"form.testTime\"\n            type=\"datetime\"\n            placeholder=\"选择测试时间\"\n            format=\"yyyy-MM-dd HH:mm:ss\"\n            value-format=\"yyyy-MM-dd HH:mm:ss\"\n          ></el-date-picker>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"addDialog.visible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 审核对话框 -->\n    <el-dialog \n      title=\"成绩审核\" \n      :visible.sync=\"reviewDialog.visible\" \n      width=\"500px\"\n    >\n      <div class=\"review-info\" v-if=\"currentRecord\">\n        <el-descriptions :column=\"2\" border>\n          <el-descriptions-item label=\"学生\">{{ currentRecord.student.realName }}</el-descriptions-item>\n          <el-descriptions-item label=\"测试项目\">{{ currentRecord.sportsItem.name }}</el-descriptions-item>\n          <el-descriptions-item label=\"测试成绩\">\n            {{ currentRecord.score }}{{ currentRecord.sportsItem.unit }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"测试时间\">\n            {{ formatDateTime(currentRecord.testTime) }}\n          </el-descriptions-item>\n          <el-descriptions-item label=\"录入教师\">{{ currentRecord.teacher.realName }}</el-descriptions-item>\n          <el-descriptions-item label=\"录入时间\">\n            {{ formatDateTime(currentRecord.createdAt) }}\n          </el-descriptions-item>\n        </el-descriptions>\n      </div>\n      <el-form :model=\"reviewForm\" ref=\"reviewForm\" :rules=\"reviewRules\" class=\"review-form\">\n        <el-form-item label=\"审核结果\" prop=\"status\">\n          <el-radio-group v-model=\"reviewForm.status\">\n            <el-radio label=\"APPROVED\">通过</el-radio>\n            <el-radio label=\"REJECTED\">驳回</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"审核意见\" prop=\"comment\">\n          <el-input \n            type=\"textarea\" \n            v-model=\"reviewForm.comment\"\n            :rows=\"3\"\n            placeholder=\"请输入审核意见\">\n          </el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\">\n        <el-button @click=\"reviewDialog.visible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitReview\">确定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'DataReview',\n  data() {\n    return {\n      loading: false,\n      tableData: [],\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        status: undefined,\n        teacherId: undefined,\n        sportsItemId: undefined\n      },\n      total: 0,\n      addDialog: {\n        visible: false\n      },\n      form: {\n        studentId: null,\n        sportsItemId: null,\n        score: null,\n        testTime: null\n      },\n      rules: {\n        studentId: [\n          { required: true, message: '请选择学生', trigger: 'change' }\n        ],\n        sportsItemId: [\n          { required: true, message: '请选择测试项目', trigger: 'change' }\n        ],\n        score: [\n          { required: true, message: '请输入测试成绩', trigger: 'blur' },\n          { type: 'number', message: '成绩必须为数字', trigger: 'blur' }\n        ],\n        testTime: [\n          { required: true, message: '请选择测试时间', trigger: 'change' }\n        ]\n      },\n      teachers: [],\n      sportsItems: [],\n      selectedItemUnit: '',\n      students: [],\n      reviewDialog: {\n        visible: false\n      },\n      currentRecord: null,\n      reviewForm: {\n        id: null,\n        status: '',\n        comment: ''\n      },\n      reviewRules: {\n        status: [{ required: true, message: '请选择审核结果', trigger: 'change' }],\n        comment: [{ required: true, message: '请输入审核意见', trigger: 'blur' }]\n      },\n      studentLoading: false\n    }\n  },\n  created() {\n    this.getList()\n    this.getTeachers()\n    this.getStudents()\n    this.getSportsItems()\n  },\n  methods: {\n    async getList() {\n      this.loading = true\n      try {\n        const res = await this.$http.get('/api/admin/test-records/review', {\n          params: this.queryParams\n        })\n        if (res.data.code === 200) {\n          this.tableData = res.data.data.content\n          this.total = res.data.data.totalElements\n        }\n      } catch (error) {\n        console.error('获取数据失败:', error)\n        this.$message.error('获取数据失败')\n      }\n      this.loading = false\n    },\n\n    getStatusType(status) {\n      const types = {\n        PENDING: 'warning',\n        APPROVED: 'success',\n        REJECTED: 'danger'\n      }\n      return types[status] || 'info'\n    },\n\n    getStatusText(status) {\n      const texts = {\n        PENDING: '待审核',\n        APPROVED: '已通过',\n        REJECTED: '已驳回'\n      }\n      return texts[status] || '未知'\n    },\n\n    handleSizeChange(val) {\n      this.queryParams.pageSize = val\n      this.getList()\n    },\n\n    handleCurrentChange(val) {\n      this.queryParams.pageNum = val\n      this.getList()\n    },\n\n    handleAdd() {\n      this.addDialog.visible = true\n      this.resetForm()\n    },\n\n    resetForm() {\n      this.$nextTick(() => {\n        if (this.$refs.recordForm) {\n          this.$refs.recordForm.resetFields()\n        }\n        this.form = {\n          studentId: null,\n          sportsItemId: null,\n          score: null,\n          testTime: null\n        }\n        this.selectedItemUnit = ''\n      })\n    },\n\n    handleDialogClosed() {\n      this.resetForm()\n    },\n\n    submitForm() {\n      this.$refs.recordForm.validate(async (valid) => {\n        if (valid) {\n          try {\n            const data = {\n              studentId: this.form.studentId,\n              sportsItemId: this.form.sportsItemId,\n              score: Number(this.form.score),\n              testTime: this.form.testTime,\n              teacherId: JSON.parse(localStorage.getItem('user')).id\n            }\n\n            const res = await this.$http.post('/api/admin/test-records', data)\n            if (res.data.code === 200) {\n              this.$message.success('成绩录入成功')\n              this.addDialog.visible = false\n              this.getList()\n            } else {\n              this.$message.error(res.data.message || '录入失败')\n            }\n          } catch (error) {\n            console.error('录入成绩失败:', error)\n            this.$message.error(error.response?.data?.message || '录入成绩失败')\n          }\n        }\n      })\n    },\n\n    async getTeachers() {\n      try {\n        const res = await this.$http.get('/api/admin/users', {\n          params: { userType: 'TEACHER' }\n        })\n        if (res.data.code === 200) {\n          this.teachers = res.data.data.content\n        }\n      } catch (error) {\n        console.error('获取教师列表失败:', error)\n      }\n    },\n\n    async getSportsItems() {\n      try {\n        const res = await this.$http.get('/api/admin/sports-items')\n        if (res.data.code === 200) {\n          this.sportsItems = res.data.data.filter(item => item.isActive)\n          console.log('体测项目列表:', this.sportsItems)\n        } else {\n          this.$message.error('获取体测项目失败')\n        }\n      } catch (error) {\n        console.error('获取体测项目列表失败:', error)\n        this.$message.error('获取体测项目列表失败')\n      }\n    },\n\n    async getStudents() {\n      try {\n        const res = await this.$http.get('/api/admin/users', {\n          params: { userType: 'STUDENT' }\n        })\n        if (res.data.code === 200) {\n          this.students = res.data.data.content\n        }\n      } catch (error) {\n        console.error('获取学生列表失败:', error)\n      }\n    },\n\n    async handleExport() {\n      try {\n        const res = await this.$http.get('/api/admin/test-records/export', {\n          params: this.queryParams,\n          responseType: 'blob'\n        })\n        \n        const blob = new Blob([res.data], { type: 'application/vnd.ms-excel' })\n        const link = document.createElement('a')\n        link.href = window.URL.createObjectURL(blob)\n        link.download = '体测成绩数据.xlsx'\n        link.click()\n        window.URL.revokeObjectURL(link.href)\n      } catch (error) {\n        console.error('导出失败:', error)\n        this.$message.error('导出失败')\n      }\n    },\n\n    handleSportsItemChange(value) {\n      const selectedItem = this.sportsItems.find(item => item.id === value)\n      if (selectedItem) {\n        this.selectedItemUnit = selectedItem.unit\n        console.log('选中的项目:', selectedItem)\n      } else {\n        this.selectedItemUnit = ''\n      }\n      this.form.score = null\n    },\n\n    handleQuery() {\n      this.getList()\n    },\n\n    resetQuery() {\n      this.queryParams = {\n        pageNum: 1,\n        pageSize: 10,\n        status: undefined,\n        teacherId: undefined,\n        sportsItemId: undefined\n      }\n      this.getList()\n    },\n\n    handleReview(record) {\n      this.currentRecord = record\n      this.reviewDialog.visible = true\n    },\n\n    handleDetail(record) {\n      // 实现详情功能\n    },\n\n    submitReview() {\n      this.$refs.reviewForm.validate(async (valid) => {\n        if (valid) {\n          try {\n            const data = {\n              id: this.currentRecord.id,\n              status: this.reviewForm.status,\n              comment: this.reviewForm.comment\n            }\n\n            const res = await this.$http.put('/api/admin/test-records/review', data)\n            if (res.data.code === 200) {\n              this.$message.success('审核成功')\n              this.reviewDialog.visible = false\n              this.getList()\n            } else {\n              this.$message.error(res.data.message || '审核失败')\n            }\n          } catch (error) {\n            console.error('审核失败:', error)\n            this.$message.error(error.response?.data?.message || '审核失败')\n          }\n        }\n      })\n    },\n\n    searchStudents(query) {\n      this.studentLoading = true\n      this.$http.get('/api/admin/users', {\n        params: {\n          userType: 'STUDENT',\n          realName: query\n        }\n      }).then(res => {\n        if (res.data.code === 200) {\n          this.students = res.data.data.content\n        }\n        this.studentLoading = false\n      }).catch(error => {\n        console.error('获取学生列表失败:', error)\n        this.studentLoading = false\n      })\n    },\n\n    formatDateTime(dateTime) {\n      if (!dateTime) return '-'\n      const date = new Date(dateTime)\n      return date.toLocaleString('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.data-review {\n  padding: 20px;\n}\n\n.operation-bar {\n  margin-bottom: 20px;\n}\n\n.filter-section {\n  background-color: #f5f7fa;\n  padding: 20px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n}\n\n.table-card {\n  margin-top: 20px;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  text-align: right;\n}\n\n.review-info {\n  margin-bottom: 20px;\n}\n\n.review-form {\n  margin-top: 20px;\n}\n\n.abnormal-score {\n  color: #f56c6c;\n  font-weight: bold;\n}\n\n.review-comment {\n  display: inline-block;\n  max-width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.el-descriptions {\n  margin: 20px 0;\n}\n</style> "]}]}