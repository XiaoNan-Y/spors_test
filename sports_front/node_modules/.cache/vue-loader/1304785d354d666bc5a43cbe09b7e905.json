<<<<<<< HEAD
{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\Login.vue","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741355860000},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741355860000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5sb2dpbi1jb250YWluZXIgewogIGhlaWdodDogMTAwdmg7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGJhY2tncm91bmQtY29sb3I6ICNmMGYyZjU7Cn0KLmxvZ2luLWNhcmQgewogIHdpZHRoOiA0MDBweDsKfQoudGl0bGUgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBmb250LXNpemU6IDI0cHg7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgbWFyZ2luLWJvdHRvbTogMzBweDsKICBjb2xvcjogIzQwOUVGRjsKfQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"login-container\">\n    <el-card class=\"login-card\">\n      <div class=\"title\">体育测试管理系统</div>\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\" label-width=\"0\">\n        <el-form-item prop=\"username\">\n          <el-input \n            v-model=\"loginForm.username\" \n            prefix-icon=\"el-icon-user\"\n            placeholder=\"用户名\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input \n            v-model=\"loginForm.password\" \n            prefix-icon=\"el-icon-lock\"\n            type=\"password\"\n            placeholder=\"密码\"\n            @keyup.enter.native=\"handleLogin\"\n          ></el-input>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" style=\"width: 100%\" @click=\"handleLogin\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      rules: {\n        username: [\n          { required: true, message: '请输入用户名', trigger: 'blur' }\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    handleLogin() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          try {\n            console.log('Attempting login with:', this.loginForm);\n            const res = await this.$http.post('/api/user/login', this.loginForm);\n            \n            if (res.data.code === 200) {\n              // 保存用户信息到vuex\n              this.$store.dispatch('setUser', res.data.data);\n              this.$message.success('登录成功');\n              \n              // 根据用户类型跳转到不同的页面\n              const userType = res.data.data.userType;\n              switch (userType) {\n                case 'ADMIN':\n                  this.$router.push('/admin/dashboard');\n                  break;\n                case 'TEACHER':\n                  this.$router.push('/teacher/dashboard');\n                  break;\n                case 'STUDENT':\n                  this.$router.push('/student/dashboard');\n                  break;\n                default:\n                  this.$message.error('未知的用户类型');\n              }\n            } else {\n              this.$message.error(res.data.msg || '登录失败');\n            }\n          } catch (error) {\n            console.error('Login error:', error);\n            this.$message.error('登录失败：' + (error.response?.data?.msg || '请检查网络连接'));\n          }\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #f0f2f5;\n}\n.login-card {\n  width: 400px;\n}\n.title {\n  text-align: center;\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 30px;\n  color: #409EFF;\n}\n</style> "]}]}
=======
{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\Login.vue","mtime":1740725650882},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1739346864144},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1739346848643},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1739346863832},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1739346865238},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1739346848059}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9naW4tY29udGFpbmVyIHsNCiAgaGVpZ2h0OiAxMDB2aDsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGJhY2tncm91bmQtY29sb3I6ICNmMGYyZjU7DQp9DQoubG9naW4tY2FyZCB7DQogIHdpZHRoOiA0MDBweDsNCn0NCi50aXRsZSB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgZm9udC1zaXplOiAyNHB4Ow0KICBmb250LXdlaWdodDogYm9sZDsNCiAgbWFyZ2luLWJvdHRvbTogMzBweDsNCiAgY29sb3I6ICM0MDlFRkY7DQp9DQo="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AA2FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <el-card class=\"login-card\">\r\n      <div class=\"title\">体育测试管理系统</div>\r\n      <el-form :model=\"loginForm\" :rules=\"rules\" ref=\"loginForm\" label-width=\"0\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input \r\n            v-model=\"loginForm.username\" \r\n            prefix-icon=\"el-icon-user\"\r\n            placeholder=\"用户名\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input \r\n            v-model=\"loginForm.password\" \r\n            prefix-icon=\"el-icon-lock\"\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n            @keyup.enter.native=\"handleLogin\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" style=\"width: 100%\" @click=\"handleLogin\">登录</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      rules: {\r\n        username: [\r\n          { required: true, message: '请输入用户名', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleLogin() {\r\n      this.$refs.loginForm.validate(async valid => {\r\n        if (valid) {\r\n          try {\r\n            console.log('Attempting login with:', this.loginForm);\r\n            const res = await this.$http.post('/api/user/login', this.loginForm);\r\n            \r\n            if (res.data.code === 200) {\r\n              // 保存用户信息到vuex\r\n              this.$store.dispatch('setUser', res.data.data);\r\n              this.$message.success('登录成功');\r\n              \r\n              // 根据用户类型跳转到不同的页面\r\n              const userType = res.data.data.userType;\r\n              switch (userType) {\r\n                case 'ADMIN':\r\n                  this.$router.push('/admin/dashboard');\r\n                  break;\r\n                case 'TEACHER':\r\n                  this.$router.push('/teacher/dashboard');\r\n                  break;\r\n                case 'STUDENT':\r\n                  this.$router.push('/student/dashboard');\r\n                  break;\r\n                default:\r\n                  this.$message.error('未知的用户类型');\r\n              }\r\n            } else {\r\n              this.$message.error(res.data.msg || '登录失败');\r\n            }\r\n          } catch (error) {\r\n            console.error('Login error:', error);\r\n            this.$message.error('登录失败：' + (error.response?.data?.msg || '请检查网络连接'));\r\n          }\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #f0f2f5;\r\n}\r\n.login-card {\r\n  width: 400px;\r\n}\r\n.title {\r\n  text-align: center;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  margin-bottom: 30px;\r\n  color: #409EFF;\r\n}\r\n</style> "]}]}
>>>>>>> 9aa70dfb89326d075348adb786f9fca620904233
