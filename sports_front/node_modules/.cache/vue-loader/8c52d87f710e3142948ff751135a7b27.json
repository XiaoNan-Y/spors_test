{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\Feedback.vue?vue&type=style&index=0&id=452a0eda&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\student\\Feedback.vue","mtime":1742288408632},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouZmVlZGJhY2stY29udGFpbmVyIHsNCiAgcGFkZGluZzogMjBweDsNCn0NCi5oaXN0b3J5LWZlZWRiYWNrIHsNCiAgbWFyZ2luLXRvcDogMzBweDsNCn0NCi5wYWdpbmF0aW9uLWNvbnRhaW5lciB7DQogIG1hcmdpbi10b3A6IDIwcHg7DQogIHRleHQtYWxpZ246IHJpZ2h0Ow0KfQ0K"},{"version":3,"sources":["Feedback.vue"],"names":[],"mappings":";AA0MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Feedback.vue","sourceRoot":"src/views/student","sourcesContent":["<template>\r\n  <div class=\"feedback-container\">\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>反馈建议</span>\r\n      </div>\r\n      <el-form :model=\"feedbackForm\" :rules=\"rules\" ref=\"feedbackForm\" label-width=\"100px\">\r\n        <el-form-item label=\"反馈类型\" prop=\"type\">\r\n          <el-select v-model=\"feedbackForm.type\" placeholder=\"请选择反馈类型\">\r\n            <el-option label=\"体测体验\" value=\"test_experience\"></el-option>\r\n            <el-option label=\"系统建议\" value=\"system_suggestion\"></el-option>\r\n            <el-option label=\"其他问题\" value=\"other\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"反馈标题\" prop=\"title\">\r\n          <el-input v-model=\"feedbackForm.title\" placeholder=\"请输入反馈标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"反馈内容\" prop=\"content\">\r\n          <el-input\r\n            type=\"textarea\"\r\n            :rows=\"4\"\r\n            placeholder=\"请详细描述您的反馈内容\"\r\n            v-model=\"feedbackForm.content\">\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitFeedback\" :loading=\"submitting\">提交反馈</el-button>\r\n          <el-button @click=\"resetForm\">重置</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <!-- 历史反馈列表 -->\r\n      <div class=\"history-feedback\">\r\n        <h3>历史反馈</h3>\r\n        <el-table\r\n          v-loading=\"loading\"\r\n          :data=\"feedbackHistory\"\r\n          style=\"width: 100%\">\r\n          <el-table-column\r\n            prop=\"type\"\r\n            label=\"类型\"\r\n            width=\"120\">\r\n            <template slot-scope=\"scope\">\r\n              {{ getFeedbackTypeName(scope.row.type) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"title\"\r\n            label=\"标题\"\r\n            width=\"180\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"content\"\r\n            label=\"内容\">\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"createTime\"\r\n            label=\"提交时间\"\r\n            width=\"180\">\r\n            <template slot-scope=\"scope\">\r\n              {{ formatDate(scope.row.createTime) }}\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column\r\n            prop=\"status\"\r\n            label=\"状态\"\r\n            width=\"100\">\r\n            <template slot-scope=\"scope\">\r\n              <el-tag :type=\"getStatusType(scope.row.status)\">{{ getStatusName(scope.row.status) }}</el-tag>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 分页 -->\r\n        <div class=\"pagination-container\">\r\n          <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[5, 10, 20, 30]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\">\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n  name: 'Feedback',\r\n  data() {\r\n    return {\r\n      feedbackForm: {\r\n        type: '',\r\n        title: '',\r\n        content: ''\r\n      },\r\n      rules: {\r\n        type: [{ required: true, message: '请选择反馈类型', trigger: 'change' }],\r\n        title: [{ required: true, message: '请输入反馈标题', trigger: 'blur' }],\r\n        content: [{ required: true, message: '请输入反馈内容', trigger: 'blur' }]\r\n      },\r\n      submitting: false,\r\n      loading: false,\r\n      feedbackHistory: [],\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      total: 0\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchFeedbackHistory()\r\n  },\r\n  methods: {\r\n    async submitFeedback() {\r\n      try {\r\n        await this.$refs.feedbackForm.validate()\r\n        this.submitting = true\r\n        await axios.post('/api/feedback', this.feedbackForm)\r\n        this.$message.success('反馈提交成功')\r\n        this.resetForm()\r\n        this.fetchFeedbackHistory()\r\n      } catch (error) {\r\n        if (error.response) {\r\n          this.$message.error(error.response.data.message || '提交失败')\r\n        } else {\r\n          this.$message.error('提交失败，请稍后重试')\r\n        }\r\n        console.error('Error submitting feedback:', error)\r\n      } finally {\r\n        this.submitting = false\r\n      }\r\n    },\r\n    resetForm() {\r\n      this.$refs.feedbackForm.resetFields()\r\n    },\r\n    async fetchFeedbackHistory() {\r\n      this.loading = true\r\n      try {\r\n        const response = await axios.get('/api/feedback/history', {\r\n          params: {\r\n            page: this.currentPage - 1,\r\n            size: this.pageSize\r\n          }\r\n        })\r\n        this.feedbackHistory = response.data.content\r\n        this.total = response.data.totalElements\r\n      } catch (error) {\r\n        this.$message.error('获取历史反馈失败')\r\n        console.error('Error fetching feedback history:', error)\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    handleSizeChange(val) {\r\n      this.pageSize = val\r\n      this.fetchFeedbackHistory()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val\r\n      this.fetchFeedbackHistory()\r\n    },\r\n    formatDate(date) {\r\n      return moment(date).format('YYYY-MM-DD HH:mm')\r\n    },\r\n    getFeedbackTypeName(type) {\r\n      const types = {\r\n        test_experience: '体测体验',\r\n        system_suggestion: '系统建议',\r\n        other: '其他问题'\r\n      }\r\n      return types[type] || type\r\n    },\r\n    getStatusType(status) {\r\n      const types = {\r\n        pending: 'info',\r\n        processing: 'warning',\r\n        resolved: 'success',\r\n        rejected: 'danger'\r\n      }\r\n      return types[status] || 'info'\r\n    },\r\n    getStatusName(status) {\r\n      const names = {\r\n        pending: '待处理',\r\n        processing: '处理中',\r\n        resolved: '已解决',\r\n        rejected: '已驳回'\r\n      }\r\n      return names[status] || status\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.feedback-container {\r\n  padding: 20px;\r\n}\r\n.history-feedback {\r\n  margin-top: 30px;\r\n}\r\n.pagination-container {\r\n  margin-top: 20px;\r\n  text-align: right;\r\n}\r\n</style>"]}]}