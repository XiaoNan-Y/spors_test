{"remainingRequest":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\NoticeManagement.vue?vue&type=style&index=0&id=c96783fc&scoped=true&lang=css","dependencies":[{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\src\\views\\teacher\\NoticeManagement.vue","mtime":1742179618657},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1741946995932},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1741947007541},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\postcss-loader\\src\\index.js","mtime":1741947003089},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1741946992817},{"path":"C:\\Users\\HP\\Desktop\\sports_test\\sports_front\\node_modules\\vue-loader\\lib\\index.js","mtime":1741947007540}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubm90aWNlLW1hbmFnZW1lbnQgew0KICBwYWRkaW5nOiAyMHB4Ow0KICBiYWNrZ3JvdW5kOiAjZmZmOw0KICBib3JkZXItcmFkaXVzOiA0cHg7DQp9DQoNCi5ub3RpY2UtaGVhZGVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOw0KICBhbGlnbi1pdGVtczogY2VudGVyOw0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0KDQoubm90aWNlLWhlYWRlciBoMiB7DQogIG1hcmdpbjogMDsNCiAgZm9udC1zaXplOiAyMHB4Ow0KICBmb250LXdlaWdodDogNTAwOw0KfQ0KDQouZGlhbG9nLWZvb3RlciB7DQogIHRleHQtYWxpZ246IHJpZ2h0Ow0KfQ0K"},{"version":3,"sources":["NoticeManagement.vue"],"names":[],"mappings":";AA+JA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"NoticeManagement.vue","sourceRoot":"src/views/teacher","sourcesContent":["<template>\r\n  <div class=\"notice-management\">\r\n    <div class=\"notice-header\">\r\n      <h2>通知管理</h2>\r\n      <el-button type=\"primary\" @click=\"handleAdd\">新增通知</el-button>\r\n    </div>\r\n\r\n    <el-table :data=\"noticeList\" style=\"width: 100%\" v-loading=\"loading\">\r\n      <el-table-column prop=\"title\" label=\"标题\" width=\"200\"></el-table-column>\r\n      <el-table-column prop=\"content\" label=\"内容\" show-overflow-tooltip></el-table-column>\r\n      <el-table-column prop=\"testTime\" label=\"测试时间\" width=\"180\"></el-table-column>\r\n      <el-table-column prop=\"testLocation\" label=\"测试地点\" width=\"150\"></el-table-column>\r\n      <el-table-column prop=\"testItems\" label=\"测试项目\" width=\"150\" show-overflow-tooltip></el-table-column>\r\n      <el-table-column label=\"操作\" width=\"150\" fixed=\"right\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button type=\"text\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n          <el-button type=\"text\" style=\"color: #F56C6C\" @click=\"handleDelete(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n    <el-dialog :title=\"dialogTitle\" :visible.sync=\"dialogVisible\" width=\"50%\">\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"form\" label-width=\"100px\">\r\n        <el-form-item label=\"标题\" prop=\"title\">\r\n          <el-input v-model=\"form.title\" placeholder=\"请输入通知标题\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"内容\" prop=\"content\">\r\n          <el-input type=\"textarea\" v-model=\"form.content\" rows=\"4\" placeholder=\"请输入通知内容\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"测试时间\" prop=\"testTime\">\r\n          <el-date-picker\r\n            v-model=\"form.testTime\"\r\n            type=\"datetime\"\r\n            placeholder=\"选择测试时间\"\r\n            value-format=\"yyyy-MM-dd HH:mm:ss\">\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"测试地点\" prop=\"testLocation\">\r\n          <el-input v-model=\"form.testLocation\" placeholder=\"请输入测试地点\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"测试项目\" prop=\"testItems\">\r\n          <el-select v-model=\"form.testItems\" multiple placeholder=\"请选择测试项目\">\r\n            <el-option\r\n              v-for=\"item in testItemOptions\"\r\n              :key=\"item.value\"\r\n              :label=\"item.label\"\r\n              :value=\"item.value\">\r\n            </el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleSubmit\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getNoticeList, createNotice, updateNotice, deleteNotice } from '@/api/teacher'\r\n\r\nexport default {\r\n  name: 'NoticeManagement',\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      noticeList: [],\r\n      dialogVisible: false,\r\n      dialogTitle: '',\r\n      form: {\r\n        title: '',\r\n        content: '',\r\n        testTime: '',\r\n        testLocation: '',\r\n        testItems: []\r\n      },\r\n      rules: {\r\n        title: [{ required: true, message: '请输入标题', trigger: 'blur' }],\r\n        content: [{ required: true, message: '请输入内容', trigger: 'blur' }],\r\n        testTime: [{ required: true, message: '请选择测试时间', trigger: 'change' }],\r\n        testLocation: [{ required: true, message: '请输入测试地点', trigger: 'blur' }],\r\n        testItems: [{ required: true, message: '请选择测试项目', trigger: 'change' }]\r\n      },\r\n      testItemOptions: [\r\n        { value: '50米跑', label: '50米跑' },\r\n        { value: '立定跳远', label: '立定跳远' },\r\n        { value: '坐位体前屈', label: '坐位体前屈' },\r\n        { value: '1000米跑', label: '1000米跑' },\r\n        { value: '800米跑', label: '800米跑' }\r\n      ]\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchNoticeList()\r\n  },\r\n  methods: {\r\n    async fetchNoticeList() {\r\n      try {\r\n        this.loading = true\r\n        const response = await getNoticeList()\r\n        this.noticeList = response.data\r\n      } catch (error) {\r\n        this.$message.error('获取通知列表失败')\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    handleAdd() {\r\n      this.dialogTitle = '新增通知'\r\n      this.form = {\r\n        title: '',\r\n        content: '',\r\n        testTime: '',\r\n        testLocation: '',\r\n        testItems: []\r\n      }\r\n      this.dialogVisible = true\r\n    },\r\n    handleEdit(row) {\r\n      this.dialogTitle = '编辑通知'\r\n      this.form = { ...row }\r\n      this.dialogVisible = true\r\n    },\r\n    async handleDelete(row) {\r\n      try {\r\n        await this.$confirm('确认删除该通知?', '提示', {\r\n          type: 'warning'\r\n        })\r\n        await deleteNotice(row.id)\r\n        this.$message.success('删除成功')\r\n        this.fetchNoticeList()\r\n      } catch (error) {\r\n        if (error !== 'cancel') {\r\n          this.$message.error('删除失败')\r\n        }\r\n      }\r\n    },\r\n    async handleSubmit() {\r\n      try {\r\n        await this.$refs.form.validate()\r\n        if (this.form.id) {\r\n          await updateNotice(this.form)\r\n          this.$message.success('更新成功')\r\n        } else {\r\n          await createNotice(this.form)\r\n          this.$message.success('创建成功')\r\n        }\r\n        this.dialogVisible = false\r\n        this.fetchNoticeList()\r\n      } catch (error) {\r\n        this.$message.error('操作失败')\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.notice-management {\r\n  padding: 20px;\r\n  background: #fff;\r\n  border-radius: 4px;\r\n}\r\n\r\n.notice-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.notice-header h2 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n}\r\n\r\n.dialog-footer {\r\n  text-align: right;\r\n}\r\n</style>"]}]}